{"version":3,"sources":["../scripts/utilities.js","scripts/offscreen-worker.js","scripts/offscreen-canvas-webgl-worker.js"],"names":["scale","domain","range","domainLength","rangeLength","slope","intercept","x","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","parseInt","Number","OffscreenWorker","data","canvas","width","height","receiveState","minX","maxX","minY","maxY","currentXRange","currentYRange","count","controls","needsAnimation","postMessage","self","e","engine","render","OffscreenCanvasWebGLWorker","getContext","lastFrame","requestAnimationFrame","animate","bind","tick","clearColor","clear","COLOR_BUFFER_BIT","bindBuffer","ARRAY_BUFFER","positionBuffer","vertexAttribPointer","programInfo","attribLocations","vertexPosition","FLOAT","enableVertexAttribArray","useProgram","program","uniform1f","uniformLocations","gridSize","Math","sqrt","value","uniform4fv","viewport","getParameter","VIEWPORT","drawArrays","TRIANGLES","vertexCount","getWebGLViewport","trueBoxWidth","trueBoxHeight","getAttribLocation","getUniformLocation","createBuffer","scaleX","scaleY","positions","y","push","bufferData","Float32Array","STATIC_DRAW","cancelAnimationFrame","onmessage","onmessager"],"mappings":"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","file":"offscreen-canvas-webgl-worker.js","sourceRoot":"../src","sourcesContent":["function scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nexport { scale, initShaderProgram, loadShader, rgbToHex };\n","class OffscreenWorker {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n\n    this.needsAnimation = true;\n  }\n\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n\n  animate() {}\n\n  render() {}\n\n  static onmessager(self) {\n    return (e) => {\n      switch (e.data.type) {\n        case \"init\":\n          self.engine = new this(e.data);\n          break;\n        case \"state\":\n          self.engine.receiveState(e.data);\n          break;\n        case \"render\":\n          self.engine.receiveState(e.data);\n          self.engine.render();\n          break;\n        default:\n          console.error(`Received unknown message type: ${e}`);\n      }\n    };\n  }\n}\n\nexport default OffscreenWorker;\n","import { scale } from \"./utilities\";\nimport OffscreenWorker from \"./offscreen-worker\";\n\nclass OffscreenCanvasWebGLWorker extends OffscreenWorker {\n  constructor(data) {\n    super(data);\n    this.gl = this.canvas.getContext(\"webgl\");\n\n    if (!this.gl) {\n      console.error(\"Unable to initialize WebGL!\");\n      return;\n    }\n  }\n\n  animate() {\n    if (!this.needsAnimation) {\n      this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n      this.tick();\n      return;\n    }\n\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    this.gl.vertexAttribPointer(\n      this.programInfo.attribLocations.vertexPosition,\n      2, // numComponents\n      this.gl.FLOAT, // type\n      false, // normalize\n      0, // stride\n      0 // offset\n    );\n    this.gl.enableVertexAttribArray(\n      this.programInfo.attribLocations.vertexPosition\n    );\n\n    this.gl.useProgram(this.programInfo.program);\n\n    this.gl.uniform1f(\n      this.programInfo.uniformLocations.gridSize,\n      Math.sqrt(this.count.value) / 2\n    );\n    this.gl.uniform4fv(\n      this.programInfo.uniformLocations.viewport,\n      this.gl.getParameter(this.gl.VIEWPORT)\n    );\n\n    this.gl.drawArrays(\n      this.gl.TRIANGLES,\n      0, // stride\n      this.vertexCount // vertex count\n    );\n\n    const viewport = this.getWebGLViewport();\n\n    this.gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n    this.tick();\n  }\n\n  render() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count);\n\n    this.shaderProgram = initShaderProgram(\n      this.gl,\n      vertexShader,\n      fragmentShader\n    );\n\n    this.programInfo = {\n      program: this.shaderProgram,\n      attribLocations: {\n        vertexPosition: this.gl.getAttribLocation(\n          this.shaderProgram,\n          \"aVertexPosition\"\n        ),\n      },\n      uniformLocations: {\n        gridSize: this.gl.getUniformLocation(this.shaderProgram, \"uGridSize\"),\n        viewport: this.gl.getUniformLocation(this.shaderProgram, \"viewport\"),\n      },\n    };\n    this.positionBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n\n    const scaleX = scale([this.minX, this.maxX], [-1, 1]);\n    const scaleY = scale([this.minY, this.maxY], [-1, 1]);\n    const positions = [];\n    for (let x = this.minX; x < this.maxX; x += this.trueBoxWidth) {\n      for (let y = this.minY; y < this.maxY; y += this.trueBoxHeight) {\n        positions.push(\n          scaleX(x),\n          scaleY(y),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y + this.trueBoxHeight)\n        );\n\n        positions.push(\n          scaleX(x),\n          scaleY(y),\n          scaleX(x),\n          scaleY(y + this.trueBoxHeight),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y + this.trueBoxHeight)\n        );\n      }\n    }\n\n    this.vertexCount = positions.length / 2;\n\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array(positions),\n      this.gl.STATIC_DRAW\n    );\n\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n    this.needsAnimation = true;\n    this.animate();\n  }\n}\n\nself.onmessage = OffscreenCanvasWebGLWorker.onmessager(self);\n"]}