{"version":3,"sources":["scripts/offscreen-worker.js"],"names":["OffscreenWorker","data","canvas","width","height","receiveState","minX","maxX","minY","maxY","currentXRange","currentYRange","count","controls","needsAnimation","postMessage","type","self","e","engine","render","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAMA;;;AACJ,2BAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,MAAL,GAAcD,IAAI,CAACC,MAAnB;AACA,SAAKC,KAAL,GAAaF,IAAI,CAACC,MAAL,CAAYC,KAAzB;AACA,SAAKC,MAAL,GAAcH,IAAI,CAACC,MAAL,CAAYE,MAA1B;AACA,SAAKC,YAAL,CAAkBJ,IAAlB;AACD;;;;WAED,sBAAaA,IAAb,EAAmB;AACjB,WAAKK,IAAL,GAAYL,IAAI,CAACK,IAAjB;AACA,WAAKC,IAAL,GAAYN,IAAI,CAACM,IAAjB;AACA,WAAKC,IAAL,GAAYP,IAAI,CAACO,IAAjB;AACA,WAAKC,IAAL,GAAYR,IAAI,CAACQ,IAAjB;AACA,WAAKC,aAAL,sBAAyBT,IAAI,CAACS,aAA9B;AACA,WAAKC,aAAL,sBAAyBV,IAAI,CAACU,aAA9B;AACA,WAAKC,KAAL,GAAaX,IAAI,CAACW,KAAlB;AACA,WAAKC,QAAL,GAAgBZ,IAAI,CAACY,QAArB;AAEA,WAAKC,cAAL,GAAsB,IAAtB;AACD;;;WAED,gBAAO;AACLC,MAAAA,WAAW,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAX;AACD;;;WAED,mBAAU,CAAE;;;WAEZ,kBAAS,CAAE;;;WAEX,oBAAkBC,IAAlB,EAAwB;AAAA;;AACtB,aAAO,UAACC,CAAD,EAAO;AACZ,gBAAQA,CAAC,CAACjB,IAAF,CAAOe,IAAf;AACE,eAAK,MAAL;AACEC,YAAAA,IAAI,CAACE,MAAL,GAAc,IAAI,KAAJ,CAASD,CAAC,CAACjB,IAAX,CAAd;AACA;;AACF,eAAK,OAAL;AACEgB,YAAAA,IAAI,CAACE,MAAL,CAAYd,YAAZ,CAAyBa,CAAC,CAACjB,IAA3B;AACA;;AACF,eAAK,QAAL;AACEgB,YAAAA,IAAI,CAACE,MAAL,CAAYd,YAAZ,CAAyBa,CAAC,CAACjB,IAA3B;AACAgB,YAAAA,IAAI,CAACE,MAAL,CAAYC,MAAZ;AACA;;AACF;AACEC,YAAAA,OAAO,CAACC,KAAR,0CAAgDJ,CAAhD;AAZJ;AAcD,OAfD;AAgBD;;;;;;eAGYlB","file":"offscreen-worker.js","sourceRoot":"../src","sourcesContent":["class OffscreenWorker {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n\n    this.needsAnimation = true;\n  }\n\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n\n  animate() {}\n\n  render() {}\n\n  static onmessager(self) {\n    return (e) => {\n      switch (e.data.type) {\n        case \"init\":\n          self.engine = new this(e.data);\n          break;\n        case \"state\":\n          self.engine.receiveState(e.data);\n          break;\n        case \"render\":\n          self.engine.receiveState(e.data);\n          self.engine.render();\n          break;\n        default:\n          console.error(`Received unknown message type: ${e}`);\n      }\n    };\n  }\n}\n\nexport default OffscreenWorker;\n"]}