{"version":3,"sources":["../../node_modules/fpsmeter/dist/fpsmeter.js","../scripts/engine.js","../scripts/utilities.js","../scripts/canvas.js"],"names":["Engine","content","document","querySelector","countLinks","querySelectorAll","canvas","createElement","width","Math","min","clientWidth","height","clientHeight","count","controls","lockedX","lockedY","minX","maxX","minY","maxY","currentXRange","currentYRange","initFpsmeter","initSettings","initControls","meter","window","FPSMeter","graph","heat","theme","history","top","left","transform","JSON","parse","localStorage","getItem","index","value","setItem","stringify","forEach","link","classList","toggle","addEventListener","event","preventDefault","stopPropagation","parseInt","innerText","render","getElementById","checked","target","console","log","previousX","wheelDelta","max","previousY","updateSelectionWindowDisplay","isMoving","movementX","movementY","textContent","toFixed","scale","domain","range","domainLength","rangeLength","slope","intercept","x","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","Number","BaseCanvasEngine","ctx","getContext","appendChild","clearRect","scaleX","scaleY","currBoxWidth","trueBoxWidth","currBoxHeight","trueBoxHeight","gridStartX","gridEndX","gridStartY","gridEndY","currX","currY","fillStyle","scaleRed","scaleBlue","fillRect","lastFrame","requestAnimationFrame","animate","bind","tick","sqrt","cancelAnimationFrame","engine"],"mappings":"AAAA;AACA;AACA,AGFA;AHGA;AACA,AGHA;AHIA;AACA;AACA,ACPA;ADQA;AACA;AACA,AEVA,SAASuE,KAAT,CAAeC,MAAf,EAAuBC,KAAvB,EAA8B;AFW9B,AEVE,MAAMC,YAAY,GAAGF,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAvC;AFWF,AEVE,MAAMG,WAAW,GAAGF,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAApC;AFWF,AEVE,MAAMG,KAAK,GAAGD,WAAW,GAAGD,YAA5B;AFWF,AEVE,MAAMG,SAAS,GAAGJ,KAAK,CAAC,CAAD,CAAL,GAAWG,KAAK,GAAGJ,MAAM,CAAC,CAAD,CAA3C;AFWF,AEVE,SAAO,UAACM,CAAD;AFWT,AEXS,WAAOF,KAAK,GAAGE,CAAR,GAAYD,SAAnB;AFYT,AEZS,GAAP;AFaF,AEZC;AFaD;AACA,AEZA,SAASE,UAAT,CAAoBC,EAApB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsC;AFatC,AEZE,MAAMC,MAAM,GAAGH,EAAE,CAACI,YAAH,CAAgBH,IAAhB,CAAf;AFaF,AEXED,EAAAA,EAAE,CAACK,YAAH,CAAgBF,MAAhB,EAAwBD,MAAxB;AFYF,AEVEF,EAAAA,EAAE,CAACM,aAAH,CAAiBH,MAAjB;AFWF;AACA,AEVE,MAAI,CAACH,EAAE,CAACO,kBAAH,CAAsBJ,MAAtB,EAA8BH,EAAE,CAACQ,cAAjC,CAAL,EAAuD;AFWzD,AEVI7B,IAAAA,OAAO,CAAC8B,KAAR,qCAA2CT,EAAE,CAACU,gBAAH,CAAoBP,MAApB,CAA3C;AFWJ,AEVIH,IDfEhF,ACeFgF,EAAE,CAACW,YAAH,CAAgBR,MAAhB;AFWJ,AEVI,WAAO,IAAP;AFWJ,AEVG;AFWH,AC3BE,IEAIiC,gBFAU;AD4BhB,AC5BgB,ACiBd,SAAOjC,MAAP;AFYF,AEXC;AFYD,AC7BI,SAAKlF,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAf;AD8BJ,AC7BI,ACkBJ,SDlBSC,ACkBAwF,UDlBL,GAAkB,ICkBtB,CDlB2B3F,ACkBA+E,EAA3B,EAA+Ba,GDlBT,CAAaxF,QCkBnC,EAA6CyF,MDlBvB,CAA8B,OCkBpD,EAA6D,MDlBvC,CAAlB;AD8BJ,AC5BI,ACiBF,MAAMC,GDjBCzF,MAAL,GAAcJ,ACiBE,GAAG6E,KDjBG,CAACxE,ICiBM,CAACyE,EAAD,EAAKA,EAAE,CAACgB,CDjBvB,CAAuB,QAAvB,CAAd,ECiB6B,EAAuBH,YAAvB,CAA/B;AFYF,AC3BI,ACgBF,MAAMI,GDhBCzF,KAAL,GAAaC,GCgBK,CDhBD,CAACC,CCgBGqE,EDhBR,CAAS,KAAK9E,ECgBI,CAAC+E,EAAD,EDhBT,ACgBcA,CDhBDrE,CCgBG,CAACuF,SDhB1B,EAAmC,IAAnC,ACgBkB,CDhB/B,CCgBwDJ,cAAzB,CAAjC;AFYF,AGjCE,AFME,ACiBF,MAAMK,GDjBCvF,MAAL,GAAc,CCiBG,GAAGoE,CDjBD/E,CCiBG,CAACmG,KCvBX,AFME,CAAavF,OCiBP,EAAtB,GDjBgB,GAA4B,IAA1C;AD4BJ,AGlCgB,AFOZ,ACiBFmE,EAAAA,EAAE,CAACqB,IDjBI/F,MAAL,CAAYE,CCiBd,CAAgB2F,GDjBd,GAAoB,KAAK3F,ECiB3B,EAA+BuF,CDjB7B,WCiBF;AFWF,AC3BI,ACiBFf,EAAAA,EAAE,CAACqB,IDjBI/F,MAAL,CAAYM,CCiBd,CAAgBuF,IDjBd,GAAqB,KAAKvF,CCiB5B,EAA+BqF,GDjB7B,WCiBF;AFWF,AGpCgB,AFUZ,ACgBFjB,EAAAA,EAAE,CAACsB,IDhBIxF,KAAL,ECgBF,CDhBe,ACgBAqF,CDhBb,YCgBF;AFWF,ACzBI,SAAKpF,QAAL,GAAgB;AD0BpB,AGrCI,AFWkBC,ACgBpB,MDhBoBA,ACgBhB,CAACgE,EAAE,CAACuB,GDhBmB,EAAE,KAAX,SCgBb,CAAuBJ,aAAvB,EAAsCnB,EAAE,CAACwB,WAAzC,CAAL,EAA4D;AFW9D,AGrCI,AFUkCvF,ACiBlC0C,IAAAA,EDjBkC1C,IEV7BoG,CD2BE,CAAC5B,CC3BR,AFUyC,EAAE,CEVhC,CD2BX,KC3BgBnF,MAAL,CAAYgH,UAAZ,CAAuB,IAAvB,CAAX,wBD4B8CtC,EAAE,CAACyB,iBAAH,CAC1CN,aAD0C,CAD9C;AFWJ,AC5BoB,ACsBhB,KDtBA,MCsBO,IAAP;AFOJ,AGtCI,AFWA,ACqBD,SDrBMjF,CEXAjB,GFWL,GAAY,CEXZ,AFWa,CEXAsH,GFWb,QEXA,CAAyB,MAAKjH,MAA9B;AHuCJ,AC3BI,SAAKa,IAAL,GAAY,IAAZ;AD4BJ,AG3CgB,AFgBZ,ACqBF,SDrBOC,ACqBA+E,IDrBL,GAAY,CAAC,IAAb,CCqBF;AFOF,AGxCG,AFaC,ACqBH,SDrBQ9E,IAAL,GAAY,IAAZ;AD4BJ,AC1BI,SAAKC,aAAL,GAAqB,CAAC,CAAC,GAAF,EAAO,GAAP,CAArB;AD2BJ,AC1BI,ACoBJ,SDpBSC,ACoBAmF,aDpBL,CCoBJ,CAAwBC,CDpBC,ACoBzB,CDpB0B,CAAC,ACoBA,GDpBF,EAAO,GAAP,CAArB;AD2BJ,ACzBI,ACmBF,MAAIC,GDnBGpF,ACmBA,GAAGmF,CAAC,CAACE,ODnBV,CCmBQ,CAAW,EAAX,CAAV;AFOF,ACzBI,ACmBF,SDnBOpF,ACmBAmF,ECpCP,CDoCU,CAACE,MAAJ,EDnBL,ECmBmB,CAAd,GAAkB,GCpCf,GDoCqBF,GAAxB,GAA8BA,GAArC;AFOF,AG1CI,AFiBA,ACmBH,SDnBQlF,EEjBA2F,GAAL,CAASG,MFiBT,GEjBA,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKhH,KAA9B,EAAqC,KAAKI,MAA1C;AH2CJ,AGzCI,AFgBD,UEhBO6G,MAAM,GAAG,sBAAM,KAAKnG,aAAX,EAA0B,CAAC,CAAD,EAAI,KAAKd,KAAT,CAA1B,CAAf;AH0CJ,AGzCI,ADmCJ,SAASuG,CCnCCW,MAAM,CDmChB,CAAkBV,CCnCC,ADmCnB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B,cCnCF,KAAK3F,aAAX,EAA0B,CAAC,CAAD,EAAI,KAAKX,MAAT,CAA1B,CAAf;AH0CJ,AGxCI,ADkCF,SAAOyC,CClCCsE,ODkCO,CACbR,ICnCkB,EDmCZ,CClCH,ADkCI,CClCH,KAAKhG,CDkCKuF,GClCV,GAAY,KAAKxF,GDkCO,CClCzB,ADkC0B8F,CAAD,CAArB,GCjCF,ADiC6BN,KCjCxBpF,SDiCsC,CAAC2F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":"canvas.bc8eb3cb.js","sourceRoot":"../src/pages","sourcesContent":["/*!\n * FPSMeter 0.3.1 - 9th May 2013\n * https://github.com/Darsain/fpsmeter\n *\n * Licensed under the MIT license.\n * http://opensource.org/licenses/MIT\n */\n;(function (w, undefined) {\n\t'use strict';\n\n\t/**\n\t * Create a new element.\n\t *\n\t * @param  {String} name Element type name.\n\t *\n\t * @return {Element}\n\t */\n\tfunction newEl(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\t/**\n\t * Apply theme CSS properties to element.\n\t *\n\t * @param  {Element} element DOM element.\n\t * @param  {Object}  theme   Theme object.\n\t *\n\t * @return {Element}\n\t */\n\tfunction applyTheme(element, theme) {\n\t\tfor (var name in theme) {\n\t\t\ttry {\n\t\t\t\telement.style[name] = theme[name];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Return type of the value.\n\t *\n\t * @param  {Mixed} value\n\t *\n\t * @return {String}\n\t */\n\tfunction type(value) {\n\t\tif (value == null) {\n\t\t\treturn String(value);\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof value === 'function') {\n\t\t\treturn Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLowerCase() || 'object';\n\t\t}\n\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Check whether the value is in an array.\n\t *\n\t * @param  {Mixed} value\n\t * @param  {Array} array\n\t *\n\t * @return {Integer} Array index or -1 when not found.\n\t */\n\tfunction inArray(value, array) {\n\t\tif (type(array) !== 'array') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(value);\n\t\t}\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Poor man's deep object extend.\n\t *\n\t * Example:\n\t *   extend({}, defaults, options);\n\t *\n\t * @return {Void}\n\t */\n\tfunction extend() {\n\t\tvar args = arguments;\n\t\tfor (var key in args[1]) {\n\t\t\tif (args[1].hasOwnProperty(key)) {\n\t\t\t\tswitch (type(args[1][key])) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\targs[0][key] = extend({}, args[0][key], args[1][key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array':\n\t\t\t\t\t\targs[0][key] = args[1][key].slice(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\targs[0][key] = args[1][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn args.length > 2 ?\n\t\t\textend.apply(null, [args[0]].concat(Array.prototype.slice.call(args, 2))) :\n\t\t\targs[0];\n\t}\n\n\t/**\n\t * Convert HSL color to HEX string.\n\t *\n\t * @param  {Array} hsl Array with [hue, saturation, lightness].\n\t *\n\t * @return {Array} Array with [red, green, blue].\n\t */\n\tfunction hslToHex(h, s, l) {\n\t\tvar r, g, b;\n\t\tvar v, min, sv, sextant, fract, vsf;\n\n\t\tif (l <= 0.5) {\n\t\t\tv = l * (1 + s);\n\t\t} else {\n\t\t\tv = l + s - l * s;\n\t\t}\n\n\t\tif (v === 0) {\n\t\t\treturn '#000';\n\t\t} else {\n\t\t\tmin = 2 * l - v;\n\t\t\tsv = (v - min) / v;\n\t\t\th = 6 * h;\n\t\t\tsextant = Math.floor(h);\n\t\t\tfract = h - sextant;\n\t\t\tvsf = v * sv * fract;\n\t\t\tif (sextant === 0 || sextant === 6) {\n\t\t\t\tr = v;\n\t\t\t\tg = min + vsf;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 1) {\n\t\t\t\tr = v - vsf;\n\t\t\t\tg = v;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 2) {\n\t\t\t\tr = min;\n\t\t\t\tg = v;\n\t\t\t\tb = min + vsf;\n\t\t\t} else if (sextant === 3) {\n\t\t\t\tr = min;\n\t\t\t\tg = v - vsf;\n\t\t\t\tb = v;\n\t\t\t} else if (sextant === 4) {\n\t\t\t\tr = min + vsf;\n\t\t\t\tg = min;\n\t\t\t\tb = v;\n\t\t\t} else {\n\t\t\t\tr = v;\n\t\t\t\tg = min;\n\t\t\t\tb = v - vsf;\n\t\t\t}\n\t\t\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for hslToHex.\n\t */\n\tfunction componentToHex(c) {\n\t\tc = Math.round(c * 255).toString(16);\n\t\treturn c.length === 1 ? '0' + c : c;\n\t}\n\n\t/**\n\t * Manage element event listeners.\n\t *\n\t * @param  {Node}     element\n\t * @param  {Event}    eventName\n\t * @param  {Function} handler\n\t * @param  {Bool}     remove\n\t *\n\t * @return {Void}\n\t */\n\tfunction listener(element, eventName, handler, remove) {\n\t\tif (element.addEventListener) {\n\t\t\telement[remove ? 'removeEventListener' : 'addEventListener'](eventName, handler, false);\n\t\t} else if (element.attachEvent) {\n\t\t\telement[remove ? 'detachEvent' : 'attachEvent']('on' + eventName, handler);\n\t\t}\n\t}\n\n\t// Preferred timing funtion\n\tvar getTime;\n\t(function () {\n\t\tvar perf = w.performance;\n\t\tif (perf && (perf.now || perf.webkitNow)) {\n\t\t\tvar perfNow = perf.now ? 'now' : 'webkitNow';\n\t\t\tgetTime = perf[perfNow].bind(perf);\n\t\t} else {\n\t\t\tgetTime = function () {\n\t\t\t\treturn +new Date();\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Local WindowAnimationTiming interface polyfill\n\tvar cAF = w.cancelAnimationFrame || w.cancelRequestAnimationFrame;\n\tvar rAF = w.requestAnimationFrame;\n\t(function () {\n\t\tvar vendors = ['moz', 'webkit', 'o'];\n\t\tvar lastTime = 0;\n\n\t\t// For a more accurate WindowAnimationTiming interface implementation, ditch the native\n\t\t// requestAnimationFrame when cancelAnimationFrame is not present (older versions of Firefox)\n\t\tfor (var i = 0, l = vendors.length; i < l && !cAF; ++i) {\n\t\t\tcAF = w[vendors[i]+'CancelAnimationFrame'] || w[vendors[i]+'CancelRequestAnimationFrame'];\n\t\t\trAF = cAF && w[vendors[i]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif (!cAF) {\n\t\t\trAF = function (callback) {\n\t\t\t\tvar currTime = getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn w.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n\t\t\t};\n\n\t\t\tcAF = function (id) {\n\t\t\t\tclearTimeout(id);\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Property name for assigning element text content\n\tvar textProp = type(document.createElement('div').textContent) === 'string' ? 'textContent' : 'innerText';\n\n\t/**\n\t * FPSMeter class.\n\t *\n\t * @param {Element} anchor  Element to append the meter to. Default is document.body.\n\t * @param {Object}  options Object with options.\n\t */\n\tfunction FPSMeter(anchor, options) {\n\t\t// Optional arguments\n\t\tif (type(anchor) === 'object' && anchor.nodeType === undefined) {\n\t\t\toptions = anchor;\n\t\t\tanchor = document.body;\n\t\t}\n\t\tif (!anchor) {\n\t\t\tanchor = document.body;\n\t\t}\n\n\t\t// Private properties\n\t\tvar self = this;\n\t\tvar o = extend({}, FPSMeter.defaults, options || {});\n\n\t\tvar el = {};\n\t\tvar cols = [];\n\t\tvar theme, heatmaps;\n\t\tvar heatDepth = 100;\n\t\tvar heating = [];\n\n\t\tvar thisFrameTime = 0;\n\t\tvar frameTime = o.threshold;\n\t\tvar frameStart = 0;\n\t\tvar lastLoop = getTime() - frameTime;\n\t\tvar time;\n\n\t\tvar fpsHistory = [];\n\t\tvar durationHistory = [];\n\n\t\tvar frameID, renderID;\n\t\tvar showFps = o.show === 'fps';\n\t\tvar graphHeight, count, i, j;\n\n\t\t// Exposed properties\n\t\tself.options = o;\n\t\tself.fps = 0;\n\t\tself.duration = 0;\n\t\tself.isPaused = 0;\n\n\t\t/**\n\t\t * Tick start for measuring the actual rendering duration.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tickStart = function () {\n\t\t\tframeStart = getTime();\n\t\t};\n\n\t\t/**\n\t\t * FPS tick.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tick = function () {\n\t\t\ttime = getTime();\n\t\t\tthisFrameTime = time - lastLoop;\n\t\t\tframeTime += (thisFrameTime - frameTime) / o.smoothing;\n\t\t\tself.fps = 1000 / frameTime;\n\t\t\tself.duration = frameStart < lastLoop ? frameTime : time - frameStart;\n\t\t\tlastLoop = time;\n\t\t};\n\n\t\t/**\n\t\t * Pause display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.pause = function () {\n\t\t\tif (frameID) {\n\t\t\t\tself.isPaused = 1;\n\t\t\t\tclearTimeout(frameID);\n\t\t\t\tcAF(frameID);\n\t\t\t\tcAF(renderID);\n\t\t\t\tframeID = renderID = 0;\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Resume display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.resume = function () {\n\t\t\tif (!frameID) {\n\t\t\t\tself.isPaused = 0;\n\t\t\t\trequestRender();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Update options.\n\t\t *\n\t\t * @param {String} name  Option name.\n\t\t * @param {Mixed}  value New value.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.set = function (name, value) {\n\t\t\to[name] = value;\n\t\t\tshowFps = o.show === 'fps';\n\n\t\t\t// Rebuild or reposition elements when specific option has been updated\n\t\t\tif (inArray(name, rebuilders) !== -1) {\n\t\t\t\tcreateMeter();\n\t\t\t}\n\t\t\tif (inArray(name, repositioners) !== -1) {\n\t\t\t\tpositionMeter();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into rendering duration mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showDuration = function () {\n\t\t\tself.set('show', 'ms');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into FPS mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showFps = function () {\n\t\t\tself.set('show', 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Toggles between show: 'fps' and show: 'duration'.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.toggle = function () {\n\t\t\tself.set('show', showFps ? 'ms' : 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Hide the FPSMeter. Also pauses the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.hide = function () {\n\t\t\tself.pause();\n\t\t\tel.container.style.display = 'none';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Show the FPSMeter. Also resumes the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.show = function () {\n\t\t\tself.resume();\n\t\t\tel.container.style.display = 'block';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Check the current FPS and save it in history.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction historyTick() {\n\t\t\tfor (i = o.history; i--;) {\n\t\t\t\tfpsHistory[i] = i === 0 ? self.fps : fpsHistory[i-1];\n\t\t\t\tdurationHistory[i] = i === 0 ? self.duration : durationHistory[i-1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns heat hex color based on values passed.\n\t\t *\n\t\t * @param  {Integer} heatmap\n\t\t * @param  {Integer} value\n\t\t * @param  {Integer} min\n\t\t * @param  {Integer} max\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getHeat(heatmap, value, min, max) {\n\t\t\treturn heatmaps[0|heatmap][Math.round(Math.min((value - min) / (max - min) * heatDepth, heatDepth))];\n\t\t}\n\n\t\t/**\n\t\t * Update counter number and legend.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction updateCounter() {\n\t\t\t// Update legend only when changed\n\t\t\tif (el.legend.fps !== showFps) {\n\t\t\t\tel.legend.fps = showFps;\n\t\t\t\tel.legend[textProp] = showFps ? 'FPS' : 'ms';\n\t\t\t}\n\t\t\t// Update counter with a nicely formated & readable number\n\t\t\tcount = showFps ? self.fps : self.duration;\n\t\t\tel.count[textProp] = count > 999 ? '999+' : count.toFixed(count > 99 ? 0 : o.decimals);\n\t\t}\n\n\t\t/**\n\t\t * Render current FPS state.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction render() {\n\t\t\ttime = getTime();\n\t\t\t// If renderer stopped reporting, do a simulated drop to 0 fps\n\t\t\tif (lastLoop < time - o.threshold) {\n\t\t\t\tself.fps -= self.fps / Math.max(1, o.smoothing * 60 / o.interval);\n\t\t\t\tself.duration = 1000 / self.fps;\n\t\t\t}\n\n\t\t\thistoryTick();\n\t\t\tupdateCounter();\n\n\t\t\t// Apply heat to elements\n\t\t\tif (o.heat) {\n\t\t\t\tif (heating.length) {\n\t\t\t\t\tfor (i = heating.length; i--;) {\n\t\t\t\t\t\theating[i].el.style[theme[heating[i].name].heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.fps, 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.duration, o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.graph && theme.column.heatOn) {\n\t\t\t\t\tfor (i = cols.length; i--;) {\n\t\t\t\t\t\tcols[i].style[theme.column.heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, fpsHistory[i], 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, durationHistory[i], o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update graph columns height\n\t\t\tif (el.graph) {\n\t\t\t\tfor (j = 0; j < o.history; j++) {\n\t\t\t\t\tcols[j].style.height = (showFps ?\n\t\t\t\t\t\t(fpsHistory[j] ? Math.round(graphHeight / o.maxFps * Math.min(fpsHistory[j], o.maxFps)) : 0) :\n\t\t\t\t\t\t(durationHistory[j] ? Math.round(graphHeight / o.threshold * Math.min(durationHistory[j], o.threshold)) : 0)\n\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Request rendering loop.\n\t\t *\n\t\t * @return {Int} Animation frame index.\n\t\t */\n\t\tfunction requestRender() {\n\t\t\tif (o.interval < 20) {\n\t\t\t\tframeID = rAF(requestRender);\n\t\t\t\trender();\n\t\t\t} else {\n\t\t\t\tframeID = setTimeout(requestRender, o.interval);\n\t\t\t\trenderID = rAF(render);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Meter events handler.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction eventHandler(event) {\n\t\t\tevent = event || window.event;\n\t\t\tif (event.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tevent.returnValue = false;\n\t\t\t\tevent.cancelBubble = true;\n\t\t\t}\n\t\t\tself.toggle();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the current FPSMeter instance.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.destroy = function () {\n\t\t\t// Stop rendering\n\t\t\tself.pause();\n\t\t\t// Remove elements\n\t\t\tremoveMeter();\n\t\t\t// Stop listening\n\t\t\tself.tick = self.tickStart = function () {};\n\t\t};\n\n\t\t/**\n\t\t * Remove meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction removeMeter() {\n\t\t\t// Unbind listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler, 1);\n\t\t\t}\n\t\t\t// Detach element\n\t\t\tanchor.removeChild(el.container);\n\t\t}\n\n\t\t/**\n\t\t * Sets the theme, and generates heatmaps when needed.\n\t\t */\n\t\tfunction setTheme() {\n\t\t\ttheme = FPSMeter.theme[o.theme];\n\n\t\t\t// Generate heatmaps\n\t\t\theatmaps = theme.compiledHeatmaps || [];\n\t\t\tif (!heatmaps.length && theme.heatmaps.length) {\n\t\t\t\tfor (j = 0; j < theme.heatmaps.length; j++) {\n\t\t\t\t\theatmaps[j] = [];\n\t\t\t\t\tfor (i = 0; i <= heatDepth; i++) {\n\t\t\t\t\t\theatmaps[j][i] = hslToHex(0.33 / heatDepth * i, theme.heatmaps[j].saturation, theme.heatmaps[j].lightness);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.compiledHeatmaps = heatmaps;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates and attaches the meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction createMeter() {\n\t\t\t// Remove old meter if present\n\t\t\tif (el.container) {\n\t\t\t\tremoveMeter();\n\t\t\t}\n\n\t\t\t// Set theme\n\t\t\tsetTheme();\n\n\t\t\t// Create elements\n\t\t\tel.container = applyTheme(newEl('div'), theme.container);\n\t\t\tel.count = el.container.appendChild(applyTheme(newEl('div'), theme.count));\n\t\t\tel.legend = el.container.appendChild(applyTheme(newEl('div'), theme.legend));\n\t\t\tel.graph = o.graph ? el.container.appendChild(applyTheme(newEl('div'), theme.graph)) : 0;\n\n\t\t\t// Add elements to heating array\n\t\t\theating.length = 0;\n\t\t\tfor (var key in el) {\n\t\t\t\tif (el[key] && theme[key].heatOn) {\n\t\t\t\t\theating.push({\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tel: el[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Graph\n\t\t\tcols.length = 0;\n\t\t\tif (el.graph) {\n\t\t\t\t// Create graph\n\t\t\t\tel.graph.style.width = (o.history * theme.column.width + (o.history - 1) * theme.column.spacing) + 'px';\n\n\t\t\t\t// Add columns\n\t\t\t\tfor (i = 0; i < o.history; i++) {\n\t\t\t\t\tcols[i] = el.graph.appendChild(applyTheme(newEl('div'), theme.column));\n\t\t\t\t\tcols[i].style.position = 'absolute';\n\t\t\t\t\tcols[i].style.bottom = 0;\n\t\t\t\t\tcols[i].style.right = (i * theme.column.width + i * theme.column.spacing) + 'px';\n\t\t\t\t\tcols[i].style.width = theme.column.width + 'px';\n\t\t\t\t\tcols[i].style.height = '0px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the initial state\n\t\t\tpositionMeter();\n\t\t\tupdateCounter();\n\n\t\t\t// Append container to anchor\n\t\t\tanchor.appendChild(el.container);\n\n\t\t\t// Retrieve graph height after it was appended to DOM\n\t\t\tif (el.graph) {\n\t\t\t\tgraphHeight = el.graph.clientHeight;\n\t\t\t}\n\n\t\t\t// Add event listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tif (o.toggleOn === 'click') {\n\t\t\t\t\tel.container.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Positions the meter based on options.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction positionMeter() {\n\t\t\tapplyTheme(el.container, o);\n\t\t}\n\n\t\t/**\n\t\t * Construct.\n\t\t */\n\t\t(function () {\n\t\t\t// Create meter element\n\t\t\tcreateMeter();\n\t\t\t// Start rendering\n\t\t\trequestRender();\n\t\t}());\n\t}\n\n\t// Expose the extend function\n\tFPSMeter.extend = extend;\n\n\t// Expose the FPSMeter class\n\twindow.FPSMeter = FPSMeter;\n\n\t// Default options\n\tFPSMeter.defaults = {\n\t\tinterval:  100,     // Update interval in milliseconds.\n\t\tsmoothing: 10,      // Spike smoothing strength. 1 means no smoothing.\n\t\tshow:      'fps',   // Whether to show 'fps', or 'ms' = frame duration in milliseconds.\n\t\ttoggleOn:  'click', // Toggle between show 'fps' and 'ms' on this event.\n\t\tdecimals:  1,       // Number of decimals in FPS number. 1 = 59.9, 2 = 59.94, ...\n\t\tmaxFps:    60,      // Max expected FPS value.\n\t\tthreshold: 100,     // Minimal tick reporting interval in milliseconds.\n\n\t\t// Meter position\n\t\tposition: 'absolute', // Meter position.\n\t\tzIndex:   10,         // Meter Z index.\n\t\tleft:     '5px',      // Meter left offset.\n\t\ttop:      '5px',      // Meter top offset.\n\t\tright:    'auto',     // Meter right offset.\n\t\tbottom:   'auto',     // Meter bottom offset.\n\t\tmargin:   '0 0 0 0',  // Meter margin. Helps with centering the counter when left: 50%;\n\n\t\t// Theme\n\t\ttheme: 'dark', // Meter theme. Build in: 'dark', 'light', 'transparent', 'colorful'.\n\t\theat:  0,      // Allow themes to use coloring by FPS heat. 0 FPS = red, maxFps = green.\n\n\t\t// Graph\n\t\tgraph:   0, // Whether to show history graph.\n\t\thistory: 20 // How many history states to show in a graph.\n\t};\n\n\t// Option names that trigger FPSMeter rebuild or reposition when modified\n\tvar rebuilders = [\n\t\t'toggleOn',\n\t\t'theme',\n\t\t'heat',\n\t\t'graph',\n\t\t'history'\n\t];\n\tvar repositioners = [\n\t\t'position',\n\t\t'zIndex',\n\t\t'left',\n\t\t'top',\n\t\t'right',\n\t\t'bottom',\n\t\t'margin'\n\t];\n}(window));\n;(function (w, FPSMeter, undefined) {\n\t'use strict';\n\n\t// Themes object\n\tFPSMeter.theme = {};\n\n\t// Base theme with layout, no colors\n\tvar base = FPSMeter.theme.base = {\n\t\theatmaps: [],\n\t\tcontainer: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tpadding: '5px',\n\t\t\tminWidth: '95px',\n\t\t\theight: '30px',\n\t\t\tlineHeight: '30px',\n\t\t\ttextAlign: 'right',\n\t\t\ttextShadow: 'none'\n\t\t},\n\t\tcount: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '24px',\n\t\t\tfontFamily: 'Consolas, Andale Mono, monospace',\n\t\t\tzIndex: 2\n\t\t},\n\t\tlegend: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '12px',\n\t\t\tlineHeight: '32px',\n\t\t\tfontFamily: 'sans-serif',\n\t\t\ttextAlign: 'left',\n\t\t\tzIndex: 2\n\t\t},\n\t\tgraph: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'relative',\n\t\t\tboxSizing: 'padding-box',\n\t\t\tMozBoxSizing: 'padding-box',\n\t\t\theight: '100%',\n\t\t\tzIndex: 1\n\t\t},\n\t\tcolumn: {\n\t\t\t// Settings\n\t\t\twidth: 4,\n\t\t\tspacing: 1,\n\t\t\theatOn: null,\n\t\t\theatmap: null\n\t\t}\n\t};\n\n\t// Dark theme\n\tFPSMeter.theme.dark = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.8\n\t\t}],\n\t\tcontainer: {\n\t\t\tbackground: '#222',\n\t\t\tcolor: '#fff',\n\t\t\tborder: '1px solid #1a1a1a',\n\t\t\ttextShadow: '1px 1px 0 #222'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#3f3f3f'\n\t\t}\n\t});\n\n\t// Light theme\n\tFPSMeter.theme.light = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tcolor: '#666',\n\t\t\tbackground: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(255,255,255,.5), -1px -1px 0 rgba(255,255,255,.5)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#eaeaea'\n\t\t}\n\t});\n\n\t// Colorful theme\n\tFPSMeter.theme.colorful = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.6\n\t\t}],\n\t\tcontainer: {\n\t\t\theatOn: 'backgroundColor',\n\t\t\tbackground: '#888',\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.2)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#777',\n\t\t\tbackgroundColor: 'rgba(0,0,0,.2)'\n\t\t}\n\t});\n\n\t// Transparent theme\n\tFPSMeter.theme.transparent = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tpadding: 0,\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.5)'\n\t\t},\n\t\tcount: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '40px'\n\t\t},\n\t\tlegend: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '42px'\n\t\t},\n\t\tgraph: {\n\t\t\theight: '40px'\n\t\t},\n\t\tcolumn: {\n\t\t\twidth: 5,\n\t\t\tbackground: '#999',\n\t\t\theatOn: 'backgroundColor',\n\t\t\topacity: 0.5\n\t\t}\n\t});\n}(window, FPSMeter));","import \"fpsmeter\";\n\nclass Engine {\n  constructor() {\n    this.content = document.querySelector(\".content\");\n    this.countLinks = this.content.querySelectorAll(\".selector > a\");\n\n    this.canvas = document.createElement(\"canvas\");\n\n    this.width = Math.min(this.content.clientWidth, 1000);\n    this.height = this.content.clientHeight * 0.75;\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n\n    this.count = 0;\n\n    this.controls = { lockedX: false, lockedY: false };\n\n    this.minX = -2000;\n    this.maxX = 2000;\n    this.minY = -2000;\n    this.maxY = 2000;\n\n    this.currentXRange = [-100, 100];\n    this.currentYRange = [-100, 100];\n\n    this.initFpsmeter();\n    this.initSettings();\n    this.initControls();\n  }\n\n  initFpsmeter() {\n    this.meter = new window.FPSMeter(this.content, {\n      graph: 1,\n      heat: 1,\n      theme: \"light\",\n      history: 25,\n      top: \"-10px\",\n      left: `${this.width}px`,\n      transform: \"translateX(-100%)\",\n    });\n  }\n\n  initSettings() {\n    const count = JSON.parse(localStorage.getItem(\"count\"));\n    this.count = count || { index: 0, value: 1000 };\n    localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n    this.countLinks.forEach((link, index) => {\n      this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n      link.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.countLinks[this.count.index].classList.toggle(\"selected\", false);\n        this.count = { index: index, value: parseInt(link.innerText) };\n        this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n        localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n        this.render();\n      });\n    });\n\n    const controls = JSON.parse(localStorage.getItem(\"controls\"));\n    this.controls = controls || { lockedX: false, lockedY: false };\n    localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n\n    document.getElementById(\"lock-x\").checked = this.controls.lockedX;\n    document.getElementById(\"lock-y\").checked = this.controls.lockedY;\n\n    document.querySelector(\"#lock-x\").addEventListener(\"change\", (event) => {\n      this.controls.lockedX = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n      console.log(this.controls);\n    });\n\n    document.querySelector(\"#lock-y\").addEventListener(\"change\", (event) => {\n      this.controls.lockedY = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n      console.log(this.controls);\n    });\n  }\n\n  initControls() {\n    this.canvas.addEventListener(\n      \"wheel\",\n      (event) => {\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.wheelDelta / 50;\n          this.currentXRange[1] += event.wheelDelta / 50;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            // Zoom in limit\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.wheelDelta / 50;\n          this.currentYRange[1] += event.wheelDelta / 50;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            // Zoom in limit\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.updateSelectionWindowDisplay();\n        return false;\n      },\n      false\n    );\n\n    let isMoving = false;\n    this.canvas.addEventListener(\n      \"mousedown\",\n      (event) => {\n        isMoving = true;\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      \"mousemove\",\n      (event) => {\n        if (!isMoving) {\n          return false;\n        }\n\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.movementX;\n          this.currentXRange[1] -= event.movementX;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.movementY;\n          this.currentYRange[1] -= event.movementY;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.updateSelectionWindowDisplay();\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\"mouseup\", (event) => {\n      isMoving = false;\n    });\n    this.canvas.addEventListener(\"mouseleave\", (event) => {\n      isMoving = false;\n    });\n  }\n\n  updateSelectionWindowDisplay() {\n    // This may slow down the rendering since it needs to call the DOM before animating, may need to remove for true benchmark\n    document.querySelector(\n      \".selection-window\"\n    ).textContent = `[${this.currentXRange[0].toFixed(\n      2\n    )}, ${this.currentXRange[1].toFixed(2)}] x [${this.currentYRange[0].toFixed(\n      2\n    )}, ${this.currentYRange[1].toFixed(2)}]`;\n  }\n\n  render() {}\n}\n\nexport default Engine;\n","function scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nexport { scale, initShaderProgram, loadShader, rgbToHex };\n","import Engine from \"./engine\";\nimport { scale } from \"./utilities\";\n\nclass BaseCanvasEngine extends Engine {\n  constructor() {\n    super();\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.content.appendChild(this.canvas);\n  }\n\n  animate() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    const currBoxWidth =\n      ((this.maxX - this.minX) /\n        (this.currentXRange[1] - this.currentXRange[0])) *\n      this.trueBoxWidth;\n\n    const currBoxHeight =\n      ((this.maxY - this.minY) /\n        (this.currentYRange[1] - this.currentYRange[0])) *\n      this.trueBoxHeight;\n\n    // Calculate where grid starts so we draw rectangles that are partially offscreen\n    const gridStartX =\n      this.currentXRange[0] -\n      (this.currentXRange[0] % this.trueBoxWidth) -\n      this.trueBoxWidth;\n    const gridEndX =\n      this.currentXRange[1] -\n      (this.currentXRange[1] % this.trueBoxWidth) +\n      this.trueBoxWidth;\n\n    const gridStartY =\n      this.currentYRange[0] -\n      (this.currentYRange[0] % this.trueBoxHeight) -\n      this.trueBoxWidth;\n    const gridEndY =\n      this.currentYRange[1] -\n      (this.currentYRange[1] % this.trueBoxHeight) +\n      this.trueBoxWidth;\n\n    // Only draw rectangles inside viewing window\n    for (let currX = gridStartX; currX < gridEndX; currX += this.trueBoxWidth) {\n      for (\n        let currY = gridStartY;\n        currY < gridEndY;\n        currY += this.trueBoxHeight\n      ) {\n        this.ctx.fillStyle = `rgb(\n          ${this.scaleRed(currY)},\n          0,\n          ${this.scaleBlue(currX)})`;\n        this.ctx.fillRect(\n          scaleX(currX),\n          scaleY(currY),\n          currBoxWidth,\n          currBoxHeight\n        );\n      }\n    }\n\n    this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n    this.meter.tick();\n  }\n\n  render() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n    this.scaleBlue = scale([this.minX, this.maxX], [0, 256]);\n    this.scaleRed = scale([this.minY, this.maxY], [0, 256]);\n\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n    this.animate();\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const engine = new BaseCanvasEngine();\n  engine.render();\n});\n"]}