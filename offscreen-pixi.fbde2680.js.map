{"version":3,"sources":["../../node_modules/fpsmeter/dist/fpsmeter.js","../scripts/handler.js","../scripts/offscreen-handler.js","../scripts/offscreen-pixi.js"],"names":["Handler","content","document","querySelector","countLinks","querySelectorAll","canvas","createElement","width","Math","min","clientWidth","height","clientHeight","mouseReader","controls","lockedX","lockedY","minX","maxX","minY","maxY","currentXRange","currentYRange","needsAnimation","initFpsmeter","initSettings","initControls","Drawer","extraArgs","drawer","getState","tick","meter","appendChild","window","FPSMeter","graph","heat","theme","history","top","left","transform","count","JSON","parse","localStorage","getItem","index","value","setItem","stringify","forEach","link","classList","toggle","addEventListener","event","preventDefault","stopPropagation","parseInt","innerText","sendDrawerState","forceDrawerRender","getElementById","checked","target","previousX","wheelDelta","max","previousY","updateSelectionWindowDisplay","isMoving","movementX","movementY","textContent","toFixed","receiveState","render","OffscreenHandler","style","position","id","worker","offscreenCanvas","transferControlToOffscreen","postMessage","type","onmessage","e","data","handler","addToDOM","Worker"],"mappings":"AAAA;AACA;AACA,AGFA;AHGA;AACA;AACA;AACA,AGJAE,QAAQ,CAACuD,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AHKpD,ACPA,ACAA,ACGE,MAAMmC,OAAO,GAAG,IAAIZ,yBAAJ,EAAhB;AHKF,AGJEY,EAAAA,OAAO,CAACC,QAAR,CAAiB,IAAIC,MAAJ,CAAW,sCAAX,CAAjB;AHKF,AGHEF,EAAAA,OAAO,CAAC5B,iBAAR;AHIF,AGHC,CALD;AHSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IC/BMhE;ADgCN;AACA;AACA,ACjCE,qBAAc;ADkChB,AClCgB;ADmChB;AACA,ACnCI,ICFEgF,KDEG/E,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAf;ADoCJ,ACnCI,SAAKC,UAAL,GAAkB,KAAKH,OAAL,CAAaI,gBAAb,CAA8B,eAA9B,CAAlB;ADoCJ,ACnCI,SAAKC,MAAL,GAAcJ,QAAQ,CAACK,aAAT,CAAuB,QAAvB,CAAd;ADoCJ,AClCI,SAAKC,KAAL,GAAaC,IAAI,CAACC,GAAL,CAAS,KAAKT,OAAL,CAAaU,WAAtB,EAAmC,IAAnC,CAAb;ADmCJ,AClCI,SAAKC,MAAL,GAAc,KAAKX,OAAL,CAAaY,YAAb,GAA4B,IAA1C;ADmCJ,AClCI,SAAKP,MAAL,CAAYE,KAAZ,GAAoB,KAAKA,KAAzB;ADmCJ,AClCI,SAAKF,MAAL,CAAYM,MAAZ,GAAqB,KAAKA,MAA1B;ADmCJ,ACjCI,ACVF,SDUOE,WAAL,GAAmB,KAAKR,ECVZ,IDUZ;ADkCJ,ACjCI,ACXY,SDWPS,QAAL,GAAgB;ADkCpB,AClCsBC,MAAAA,OAAO,EAAE,KAAX;ADmCpB,ACnCsCC,ACXtB,MDWsBA,OAAO,EAAE;ADoC/C,ACpCoB,KAAhB;ADqCJ,ACnCI,ACZA,SDYKC,IAAL,GAAY,CAAC,IAAb,SCbY,CAGZ;AF8CJ,ACnCI,SAAKC,IAAL,GAAY,IAAZ;ADoCJ,ACnCI,ACXA,SDWKC,CCXAN,GDWL,GAAY,CAAC,IAAb,ACXA,GAAmBZ,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAnB,CAJY,CAMZ;AF6CJ,ACnCI,SAAKc,IAAL,GAAY,IAAZ;ADoCJ,AClCI,ACXA,SDWKC,CCXAhB,MAAL,CAAY2E,KDWZ,ACXA,CAAkBC,EDWG,CAAC,CAAC,GAAF,CCXrB,CDW4B,ECXC,CDWR,CAArB,QCXA;AF8CJ,AClCI,ACXA,SDWK3D,CCXAT,WAAL,CDWA,ACXiBqE,EAAjB,CDWqB,CAAC,CAAC,ACXD,GDWD,EAAO,GAAP,CAArB,KCXA,CARY,CAUZ;AF4CJ,ACjCI,SAAK3D,cAAL,GAAsB,IAAtB;ADkCJ,ACjCI,ACXA,SDWKC,CCXAE,WDWL,CCXA;AF6CJ,ACjCI,SAAKD,YAAL;ADkCJ,ACjCI,ACxBY,SDwBPC,YAAL;ADkCJ,ACjCG,ACbA;AF+CH;AACA;AACA;AACA,WCnCE,ACbA,kBDaSC,ACbAwD,MDaT,ACbA,EDaiBvD,ACbA,SDajB,EAA4B;ADoC9B,ACpC8B,ACbX;AFkDnB;AACA,ACrCI,ACbA,WDaKC,ACbA7B,MDaL,CCbA,CAAaiC,CDaC,IAAIN,MAAJ,ACbd,CAAyB,KAAKtB,MAA9B;AFmDJ,ACpCQA,ACdJ,QDcIA,GCdCL,GDcK,EAAE,ECdZ,CAAaiC,EDcI5B,SCdjB,CAAyB,KAAKQ,WAA9B;AFmDJ,ACvCkB,ACVd,SDaO,ECbFuE,GDaOtD,QAAL,EAHO,ECVd,CDeEF,ECfqB,KAAKvB,EDUd,CAAd,CAD0B,CAS1B,CClBuB,CAAYgF,0BAAZ,EAAvB;AFkDJ,AEhDI,WAAKF,MAAL,GAAcA,MAAd;AFiDJ,AChCI,AChBA,WDgBKtD,AChBAsD,MDgBL,AChBA,CDgBYpD,AChBAuD,IDgBZ,GAAmB,IChBnB;AFiDJ,ACjCuB,ACffC,QAAAA,IAAI,EAAE,CDee,KAAI,AChB7B,CDgB8BvD,KAAL,CAAWD,IAAX,EAAN;ADkCvB,AClCuB,ACfD1B,ODelB,CCfkBA,MAAM,EAAE,KAAK+E;AFkDnC,AEnDI,SACmD,KAAKtD,QAAL,EADnD,GAEE,CAAC,KAAKsD,eAAN,CAFF;AFoDJ,ACnCI,WAAKpF,OAAL,CAAaiC,WA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":"offscreen-pixi.fbde2680.js","sourceRoot":"../src/pages","sourcesContent":["/*!\n * FPSMeter 0.3.1 - 9th May 2013\n * https://github.com/Darsain/fpsmeter\n *\n * Licensed under the MIT license.\n * http://opensource.org/licenses/MIT\n */\n;(function (w, undefined) {\n\t'use strict';\n\n\t/**\n\t * Create a new element.\n\t *\n\t * @param  {String} name Element type name.\n\t *\n\t * @return {Element}\n\t */\n\tfunction newEl(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\t/**\n\t * Apply theme CSS properties to element.\n\t *\n\t * @param  {Element} element DOM element.\n\t * @param  {Object}  theme   Theme object.\n\t *\n\t * @return {Element}\n\t */\n\tfunction applyTheme(element, theme) {\n\t\tfor (var name in theme) {\n\t\t\ttry {\n\t\t\t\telement.style[name] = theme[name];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Return type of the value.\n\t *\n\t * @param  {Mixed} value\n\t *\n\t * @return {String}\n\t */\n\tfunction type(value) {\n\t\tif (value == null) {\n\t\t\treturn String(value);\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof value === 'function') {\n\t\t\treturn Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLowerCase() || 'object';\n\t\t}\n\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Check whether the value is in an array.\n\t *\n\t * @param  {Mixed} value\n\t * @param  {Array} array\n\t *\n\t * @return {Integer} Array index or -1 when not found.\n\t */\n\tfunction inArray(value, array) {\n\t\tif (type(array) !== 'array') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(value);\n\t\t}\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Poor man's deep object extend.\n\t *\n\t * Example:\n\t *   extend({}, defaults, options);\n\t *\n\t * @return {Void}\n\t */\n\tfunction extend() {\n\t\tvar args = arguments;\n\t\tfor (var key in args[1]) {\n\t\t\tif (args[1].hasOwnProperty(key)) {\n\t\t\t\tswitch (type(args[1][key])) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\targs[0][key] = extend({}, args[0][key], args[1][key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array':\n\t\t\t\t\t\targs[0][key] = args[1][key].slice(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\targs[0][key] = args[1][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn args.length > 2 ?\n\t\t\textend.apply(null, [args[0]].concat(Array.prototype.slice.call(args, 2))) :\n\t\t\targs[0];\n\t}\n\n\t/**\n\t * Convert HSL color to HEX string.\n\t *\n\t * @param  {Array} hsl Array with [hue, saturation, lightness].\n\t *\n\t * @return {Array} Array with [red, green, blue].\n\t */\n\tfunction hslToHex(h, s, l) {\n\t\tvar r, g, b;\n\t\tvar v, min, sv, sextant, fract, vsf;\n\n\t\tif (l <= 0.5) {\n\t\t\tv = l * (1 + s);\n\t\t} else {\n\t\t\tv = l + s - l * s;\n\t\t}\n\n\t\tif (v === 0) {\n\t\t\treturn '#000';\n\t\t} else {\n\t\t\tmin = 2 * l - v;\n\t\t\tsv = (v - min) / v;\n\t\t\th = 6 * h;\n\t\t\tsextant = Math.floor(h);\n\t\t\tfract = h - sextant;\n\t\t\tvsf = v * sv * fract;\n\t\t\tif (sextant === 0 || sextant === 6) {\n\t\t\t\tr = v;\n\t\t\t\tg = min + vsf;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 1) {\n\t\t\t\tr = v - vsf;\n\t\t\t\tg = v;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 2) {\n\t\t\t\tr = min;\n\t\t\t\tg = v;\n\t\t\t\tb = min + vsf;\n\t\t\t} else if (sextant === 3) {\n\t\t\t\tr = min;\n\t\t\t\tg = v - vsf;\n\t\t\t\tb = v;\n\t\t\t} else if (sextant === 4) {\n\t\t\t\tr = min + vsf;\n\t\t\t\tg = min;\n\t\t\t\tb = v;\n\t\t\t} else {\n\t\t\t\tr = v;\n\t\t\t\tg = min;\n\t\t\t\tb = v - vsf;\n\t\t\t}\n\t\t\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for hslToHex.\n\t */\n\tfunction componentToHex(c) {\n\t\tc = Math.round(c * 255).toString(16);\n\t\treturn c.length === 1 ? '0' + c : c;\n\t}\n\n\t/**\n\t * Manage element event listeners.\n\t *\n\t * @param  {Node}     element\n\t * @param  {Event}    eventName\n\t * @param  {Function} handler\n\t * @param  {Bool}     remove\n\t *\n\t * @return {Void}\n\t */\n\tfunction listener(element, eventName, handler, remove) {\n\t\tif (element.addEventListener) {\n\t\t\telement[remove ? 'removeEventListener' : 'addEventListener'](eventName, handler, false);\n\t\t} else if (element.attachEvent) {\n\t\t\telement[remove ? 'detachEvent' : 'attachEvent']('on' + eventName, handler);\n\t\t}\n\t}\n\n\t// Preferred timing funtion\n\tvar getTime;\n\t(function () {\n\t\tvar perf = w.performance;\n\t\tif (perf && (perf.now || perf.webkitNow)) {\n\t\t\tvar perfNow = perf.now ? 'now' : 'webkitNow';\n\t\t\tgetTime = perf[perfNow].bind(perf);\n\t\t} else {\n\t\t\tgetTime = function () {\n\t\t\t\treturn +new Date();\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Local WindowAnimationTiming interface polyfill\n\tvar cAF = w.cancelAnimationFrame || w.cancelRequestAnimationFrame;\n\tvar rAF = w.requestAnimationFrame;\n\t(function () {\n\t\tvar vendors = ['moz', 'webkit', 'o'];\n\t\tvar lastTime = 0;\n\n\t\t// For a more accurate WindowAnimationTiming interface implementation, ditch the native\n\t\t// requestAnimationFrame when cancelAnimationFrame is not present (older versions of Firefox)\n\t\tfor (var i = 0, l = vendors.length; i < l && !cAF; ++i) {\n\t\t\tcAF = w[vendors[i]+'CancelAnimationFrame'] || w[vendors[i]+'CancelRequestAnimationFrame'];\n\t\t\trAF = cAF && w[vendors[i]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif (!cAF) {\n\t\t\trAF = function (callback) {\n\t\t\t\tvar currTime = getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn w.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n\t\t\t};\n\n\t\t\tcAF = function (id) {\n\t\t\t\tclearTimeout(id);\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Property name for assigning element text content\n\tvar textProp = type(document.createElement('div').textContent) === 'string' ? 'textContent' : 'innerText';\n\n\t/**\n\t * FPSMeter class.\n\t *\n\t * @param {Element} anchor  Element to append the meter to. Default is document.body.\n\t * @param {Object}  options Object with options.\n\t */\n\tfunction FPSMeter(anchor, options) {\n\t\t// Optional arguments\n\t\tif (type(anchor) === 'object' && anchor.nodeType === undefined) {\n\t\t\toptions = anchor;\n\t\t\tanchor = document.body;\n\t\t}\n\t\tif (!anchor) {\n\t\t\tanchor = document.body;\n\t\t}\n\n\t\t// Private properties\n\t\tvar self = this;\n\t\tvar o = extend({}, FPSMeter.defaults, options || {});\n\n\t\tvar el = {};\n\t\tvar cols = [];\n\t\tvar theme, heatmaps;\n\t\tvar heatDepth = 100;\n\t\tvar heating = [];\n\n\t\tvar thisFrameTime = 0;\n\t\tvar frameTime = o.threshold;\n\t\tvar frameStart = 0;\n\t\tvar lastLoop = getTime() - frameTime;\n\t\tvar time;\n\n\t\tvar fpsHistory = [];\n\t\tvar durationHistory = [];\n\n\t\tvar frameID, renderID;\n\t\tvar showFps = o.show === 'fps';\n\t\tvar graphHeight, count, i, j;\n\n\t\t// Exposed properties\n\t\tself.options = o;\n\t\tself.fps = 0;\n\t\tself.duration = 0;\n\t\tself.isPaused = 0;\n\n\t\t/**\n\t\t * Tick start for measuring the actual rendering duration.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tickStart = function () {\n\t\t\tframeStart = getTime();\n\t\t};\n\n\t\t/**\n\t\t * FPS tick.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tick = function () {\n\t\t\ttime = getTime();\n\t\t\tthisFrameTime = time - lastLoop;\n\t\t\tframeTime += (thisFrameTime - frameTime) / o.smoothing;\n\t\t\tself.fps = 1000 / frameTime;\n\t\t\tself.duration = frameStart < lastLoop ? frameTime : time - frameStart;\n\t\t\tlastLoop = time;\n\t\t};\n\n\t\t/**\n\t\t * Pause display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.pause = function () {\n\t\t\tif (frameID) {\n\t\t\t\tself.isPaused = 1;\n\t\t\t\tclearTimeout(frameID);\n\t\t\t\tcAF(frameID);\n\t\t\t\tcAF(renderID);\n\t\t\t\tframeID = renderID = 0;\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Resume display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.resume = function () {\n\t\t\tif (!frameID) {\n\t\t\t\tself.isPaused = 0;\n\t\t\t\trequestRender();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Update options.\n\t\t *\n\t\t * @param {String} name  Option name.\n\t\t * @param {Mixed}  value New value.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.set = function (name, value) {\n\t\t\to[name] = value;\n\t\t\tshowFps = o.show === 'fps';\n\n\t\t\t// Rebuild or reposition elements when specific option has been updated\n\t\t\tif (inArray(name, rebuilders) !== -1) {\n\t\t\t\tcreateMeter();\n\t\t\t}\n\t\t\tif (inArray(name, repositioners) !== -1) {\n\t\t\t\tpositionMeter();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into rendering duration mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showDuration = function () {\n\t\t\tself.set('show', 'ms');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into FPS mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showFps = function () {\n\t\t\tself.set('show', 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Toggles between show: 'fps' and show: 'duration'.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.toggle = function () {\n\t\t\tself.set('show', showFps ? 'ms' : 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Hide the FPSMeter. Also pauses the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.hide = function () {\n\t\t\tself.pause();\n\t\t\tel.container.style.display = 'none';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Show the FPSMeter. Also resumes the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.show = function () {\n\t\t\tself.resume();\n\t\t\tel.container.style.display = 'block';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Check the current FPS and save it in history.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction historyTick() {\n\t\t\tfor (i = o.history; i--;) {\n\t\t\t\tfpsHistory[i] = i === 0 ? self.fps : fpsHistory[i-1];\n\t\t\t\tdurationHistory[i] = i === 0 ? self.duration : durationHistory[i-1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns heat hex color based on values passed.\n\t\t *\n\t\t * @param  {Integer} heatmap\n\t\t * @param  {Integer} value\n\t\t * @param  {Integer} min\n\t\t * @param  {Integer} max\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getHeat(heatmap, value, min, max) {\n\t\t\treturn heatmaps[0|heatmap][Math.round(Math.min((value - min) / (max - min) * heatDepth, heatDepth))];\n\t\t}\n\n\t\t/**\n\t\t * Update counter number and legend.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction updateCounter() {\n\t\t\t// Update legend only when changed\n\t\t\tif (el.legend.fps !== showFps) {\n\t\t\t\tel.legend.fps = showFps;\n\t\t\t\tel.legend[textProp] = showFps ? 'FPS' : 'ms';\n\t\t\t}\n\t\t\t// Update counter with a nicely formated & readable number\n\t\t\tcount = showFps ? self.fps : self.duration;\n\t\t\tel.count[textProp] = count > 999 ? '999+' : count.toFixed(count > 99 ? 0 : o.decimals);\n\t\t}\n\n\t\t/**\n\t\t * Render current FPS state.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction render() {\n\t\t\ttime = getTime();\n\t\t\t// If renderer stopped reporting, do a simulated drop to 0 fps\n\t\t\tif (lastLoop < time - o.threshold) {\n\t\t\t\tself.fps -= self.fps / Math.max(1, o.smoothing * 60 / o.interval);\n\t\t\t\tself.duration = 1000 / self.fps;\n\t\t\t}\n\n\t\t\thistoryTick();\n\t\t\tupdateCounter();\n\n\t\t\t// Apply heat to elements\n\t\t\tif (o.heat) {\n\t\t\t\tif (heating.length) {\n\t\t\t\t\tfor (i = heating.length; i--;) {\n\t\t\t\t\t\theating[i].el.style[theme[heating[i].name].heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.fps, 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.duration, o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.graph && theme.column.heatOn) {\n\t\t\t\t\tfor (i = cols.length; i--;) {\n\t\t\t\t\t\tcols[i].style[theme.column.heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, fpsHistory[i], 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, durationHistory[i], o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update graph columns height\n\t\t\tif (el.graph) {\n\t\t\t\tfor (j = 0; j < o.history; j++) {\n\t\t\t\t\tcols[j].style.height = (showFps ?\n\t\t\t\t\t\t(fpsHistory[j] ? Math.round(graphHeight / o.maxFps * Math.min(fpsHistory[j], o.maxFps)) : 0) :\n\t\t\t\t\t\t(durationHistory[j] ? Math.round(graphHeight / o.threshold * Math.min(durationHistory[j], o.threshold)) : 0)\n\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Request rendering loop.\n\t\t *\n\t\t * @return {Int} Animation frame index.\n\t\t */\n\t\tfunction requestRender() {\n\t\t\tif (o.interval < 20) {\n\t\t\t\tframeID = rAF(requestRender);\n\t\t\t\trender();\n\t\t\t} else {\n\t\t\t\tframeID = setTimeout(requestRender, o.interval);\n\t\t\t\trenderID = rAF(render);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Meter events handler.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction eventHandler(event) {\n\t\t\tevent = event || window.event;\n\t\t\tif (event.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tevent.returnValue = false;\n\t\t\t\tevent.cancelBubble = true;\n\t\t\t}\n\t\t\tself.toggle();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the current FPSMeter instance.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.destroy = function () {\n\t\t\t// Stop rendering\n\t\t\tself.pause();\n\t\t\t// Remove elements\n\t\t\tremoveMeter();\n\t\t\t// Stop listening\n\t\t\tself.tick = self.tickStart = function () {};\n\t\t};\n\n\t\t/**\n\t\t * Remove meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction removeMeter() {\n\t\t\t// Unbind listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler, 1);\n\t\t\t}\n\t\t\t// Detach element\n\t\t\tanchor.removeChild(el.container);\n\t\t}\n\n\t\t/**\n\t\t * Sets the theme, and generates heatmaps when needed.\n\t\t */\n\t\tfunction setTheme() {\n\t\t\ttheme = FPSMeter.theme[o.theme];\n\n\t\t\t// Generate heatmaps\n\t\t\theatmaps = theme.compiledHeatmaps || [];\n\t\t\tif (!heatmaps.length && theme.heatmaps.length) {\n\t\t\t\tfor (j = 0; j < theme.heatmaps.length; j++) {\n\t\t\t\t\theatmaps[j] = [];\n\t\t\t\t\tfor (i = 0; i <= heatDepth; i++) {\n\t\t\t\t\t\theatmaps[j][i] = hslToHex(0.33 / heatDepth * i, theme.heatmaps[j].saturation, theme.heatmaps[j].lightness);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.compiledHeatmaps = heatmaps;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates and attaches the meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction createMeter() {\n\t\t\t// Remove old meter if present\n\t\t\tif (el.container) {\n\t\t\t\tremoveMeter();\n\t\t\t}\n\n\t\t\t// Set theme\n\t\t\tsetTheme();\n\n\t\t\t// Create elements\n\t\t\tel.container = applyTheme(newEl('div'), theme.container);\n\t\t\tel.count = el.container.appendChild(applyTheme(newEl('div'), theme.count));\n\t\t\tel.legend = el.container.appendChild(applyTheme(newEl('div'), theme.legend));\n\t\t\tel.graph = o.graph ? el.container.appendChild(applyTheme(newEl('div'), theme.graph)) : 0;\n\n\t\t\t// Add elements to heating array\n\t\t\theating.length = 0;\n\t\t\tfor (var key in el) {\n\t\t\t\tif (el[key] && theme[key].heatOn) {\n\t\t\t\t\theating.push({\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tel: el[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Graph\n\t\t\tcols.length = 0;\n\t\t\tif (el.graph) {\n\t\t\t\t// Create graph\n\t\t\t\tel.graph.style.width = (o.history * theme.column.width + (o.history - 1) * theme.column.spacing) + 'px';\n\n\t\t\t\t// Add columns\n\t\t\t\tfor (i = 0; i < o.history; i++) {\n\t\t\t\t\tcols[i] = el.graph.appendChild(applyTheme(newEl('div'), theme.column));\n\t\t\t\t\tcols[i].style.position = 'absolute';\n\t\t\t\t\tcols[i].style.bottom = 0;\n\t\t\t\t\tcols[i].style.right = (i * theme.column.width + i * theme.column.spacing) + 'px';\n\t\t\t\t\tcols[i].style.width = theme.column.width + 'px';\n\t\t\t\t\tcols[i].style.height = '0px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the initial state\n\t\t\tpositionMeter();\n\t\t\tupdateCounter();\n\n\t\t\t// Append container to anchor\n\t\t\tanchor.appendChild(el.container);\n\n\t\t\t// Retrieve graph height after it was appended to DOM\n\t\t\tif (el.graph) {\n\t\t\t\tgraphHeight = el.graph.clientHeight;\n\t\t\t}\n\n\t\t\t// Add event listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tif (o.toggleOn === 'click') {\n\t\t\t\t\tel.container.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Positions the meter based on options.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction positionMeter() {\n\t\t\tapplyTheme(el.container, o);\n\t\t}\n\n\t\t/**\n\t\t * Construct.\n\t\t */\n\t\t(function () {\n\t\t\t// Create meter element\n\t\t\tcreateMeter();\n\t\t\t// Start rendering\n\t\t\trequestRender();\n\t\t}());\n\t}\n\n\t// Expose the extend function\n\tFPSMeter.extend = extend;\n\n\t// Expose the FPSMeter class\n\twindow.FPSMeter = FPSMeter;\n\n\t// Default options\n\tFPSMeter.defaults = {\n\t\tinterval:  100,     // Update interval in milliseconds.\n\t\tsmoothing: 10,      // Spike smoothing strength. 1 means no smoothing.\n\t\tshow:      'fps',   // Whether to show 'fps', or 'ms' = frame duration in milliseconds.\n\t\ttoggleOn:  'click', // Toggle between show 'fps' and 'ms' on this event.\n\t\tdecimals:  1,       // Number of decimals in FPS number. 1 = 59.9, 2 = 59.94, ...\n\t\tmaxFps:    60,      // Max expected FPS value.\n\t\tthreshold: 100,     // Minimal tick reporting interval in milliseconds.\n\n\t\t// Meter position\n\t\tposition: 'absolute', // Meter position.\n\t\tzIndex:   10,         // Meter Z index.\n\t\tleft:     '5px',      // Meter left offset.\n\t\ttop:      '5px',      // Meter top offset.\n\t\tright:    'auto',     // Meter right offset.\n\t\tbottom:   'auto',     // Meter bottom offset.\n\t\tmargin:   '0 0 0 0',  // Meter margin. Helps with centering the counter when left: 50%;\n\n\t\t// Theme\n\t\ttheme: 'dark', // Meter theme. Build in: 'dark', 'light', 'transparent', 'colorful'.\n\t\theat:  0,      // Allow themes to use coloring by FPS heat. 0 FPS = red, maxFps = green.\n\n\t\t// Graph\n\t\tgraph:   0, // Whether to show history graph.\n\t\thistory: 20 // How many history states to show in a graph.\n\t};\n\n\t// Option names that trigger FPSMeter rebuild or reposition when modified\n\tvar rebuilders = [\n\t\t'toggleOn',\n\t\t'theme',\n\t\t'heat',\n\t\t'graph',\n\t\t'history'\n\t];\n\tvar repositioners = [\n\t\t'position',\n\t\t'zIndex',\n\t\t'left',\n\t\t'top',\n\t\t'right',\n\t\t'bottom',\n\t\t'margin'\n\t];\n}(window));\n;(function (w, FPSMeter, undefined) {\n\t'use strict';\n\n\t// Themes object\n\tFPSMeter.theme = {};\n\n\t// Base theme with layout, no colors\n\tvar base = FPSMeter.theme.base = {\n\t\theatmaps: [],\n\t\tcontainer: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tpadding: '5px',\n\t\t\tminWidth: '95px',\n\t\t\theight: '30px',\n\t\t\tlineHeight: '30px',\n\t\t\ttextAlign: 'right',\n\t\t\ttextShadow: 'none'\n\t\t},\n\t\tcount: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '24px',\n\t\t\tfontFamily: 'Consolas, Andale Mono, monospace',\n\t\t\tzIndex: 2\n\t\t},\n\t\tlegend: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '12px',\n\t\t\tlineHeight: '32px',\n\t\t\tfontFamily: 'sans-serif',\n\t\t\ttextAlign: 'left',\n\t\t\tzIndex: 2\n\t\t},\n\t\tgraph: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'relative',\n\t\t\tboxSizing: 'padding-box',\n\t\t\tMozBoxSizing: 'padding-box',\n\t\t\theight: '100%',\n\t\t\tzIndex: 1\n\t\t},\n\t\tcolumn: {\n\t\t\t// Settings\n\t\t\twidth: 4,\n\t\t\tspacing: 1,\n\t\t\theatOn: null,\n\t\t\theatmap: null\n\t\t}\n\t};\n\n\t// Dark theme\n\tFPSMeter.theme.dark = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.8\n\t\t}],\n\t\tcontainer: {\n\t\t\tbackground: '#222',\n\t\t\tcolor: '#fff',\n\t\t\tborder: '1px solid #1a1a1a',\n\t\t\ttextShadow: '1px 1px 0 #222'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#3f3f3f'\n\t\t}\n\t});\n\n\t// Light theme\n\tFPSMeter.theme.light = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tcolor: '#666',\n\t\t\tbackground: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(255,255,255,.5), -1px -1px 0 rgba(255,255,255,.5)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#eaeaea'\n\t\t}\n\t});\n\n\t// Colorful theme\n\tFPSMeter.theme.colorful = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.6\n\t\t}],\n\t\tcontainer: {\n\t\t\theatOn: 'backgroundColor',\n\t\t\tbackground: '#888',\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.2)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#777',\n\t\t\tbackgroundColor: 'rgba(0,0,0,.2)'\n\t\t}\n\t});\n\n\t// Transparent theme\n\tFPSMeter.theme.transparent = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tpadding: 0,\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.5)'\n\t\t},\n\t\tcount: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '40px'\n\t\t},\n\t\tlegend: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '42px'\n\t\t},\n\t\tgraph: {\n\t\t\theight: '40px'\n\t\t},\n\t\tcolumn: {\n\t\t\twidth: 5,\n\t\t\tbackground: '#999',\n\t\t\theatOn: 'backgroundColor',\n\t\t\topacity: 0.5\n\t\t}\n\t});\n}(window, FPSMeter));","import \"fpsmeter\";\n\nclass Handler {\n  constructor() {\n    this.content = document.querySelector(\".content\");\n    this.countLinks = this.content.querySelectorAll(\".selector > a\");\n    this.canvas = document.createElement(\"canvas\");\n\n    this.width = Math.min(this.content.clientWidth, 1000);\n    this.height = this.content.clientHeight * 0.75;\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n\n    this.mouseReader = this.canvas;\n    this.controls = { lockedX: false, lockedY: false };\n\n    this.minX = -2000;\n    this.maxX = 2000;\n    this.minY = -2000;\n    this.maxY = 2000;\n\n    this.currentXRange = [-100, 100];\n    this.currentYRange = [-100, 100];\n\n    this.needsAnimation = true;\n    this.initFpsmeter();\n    this.initSettings();\n    this.initControls();\n  }\n\n  addToDOM(Drawer, extraArgs) {\n    this.drawer = new Drawer(\n      {\n        canvas: this.canvas,\n        ...this.getState(),\n      },\n      extraArgs\n    );\n\n    // Set tick for fps meter, allows drawer to have no knowledge of handler\n    this.drawer.tick = () => this.meter.tick();\n    this.content.appendChild(this.canvas);\n  }\n\n  initFpsmeter() {\n    this.meter = new window.FPSMeter(this.content, {\n      graph: 1,\n      heat: 1,\n      theme: \"light\",\n      history: 25,\n      top: \"-10px\",\n      left: `${this.width}px`,\n      transform: \"translateX(-100%)\",\n    });\n  }\n\n  initSettings() {\n    const count = JSON.parse(localStorage.getItem(\"count\"));\n    this.count = count || { index: 0, value: 1000 };\n    localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n    this.countLinks.forEach((link, index) => {\n      this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n      link.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.countLinks[this.count.index].classList.toggle(\"selected\", false);\n        this.count = { index: index, value: parseInt(link.innerText) };\n        this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n        localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n        this.sendDrawerState();\n        this.forceDrawerRender();\n      });\n    });\n\n    const controls = JSON.parse(localStorage.getItem(\"controls\"));\n    this.controls = controls || { lockedX: false, lockedY: false };\n    localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n\n    document.getElementById(\"lock-x\").checked = this.controls.lockedX;\n    document.getElementById(\"lock-y\").checked = this.controls.lockedY;\n\n    document.querySelector(\"#lock-x\").addEventListener(\"change\", (event) => {\n      this.controls.lockedX = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n      this.sendDrawerState();\n    });\n\n    document.querySelector(\"#lock-y\").addEventListener(\"change\", (event) => {\n      this.controls.lockedY = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n      this.sendDrawerState();\n    });\n  }\n\n  initControls() {\n    this.mouseReader.addEventListener(\n      \"wheel\",\n      (event) => {\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.wheelDelta / 50;\n          this.currentXRange[1] += event.wheelDelta / 50;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            // Zoom in limit\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.wheelDelta / 50;\n          this.currentYRange[1] += event.wheelDelta / 50;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            // Zoom in limit\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.needsAnimation = true;\n        this.updateSelectionWindowDisplay();\n        this.sendDrawerState();\n\n        return false;\n      },\n      false\n    );\n\n    this.isMoving = false;\n    this.mouseReader.addEventListener(\n      \"mousedown\",\n      (event) => {\n        this.isMoving = true;\n      },\n      false\n    );\n\n    this.mouseReader.addEventListener(\n      \"mousemove\",\n      (event) => {\n        if (!this.isMoving) {\n          return false;\n        }\n\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.movementX;\n          this.currentXRange[1] -= event.movementX;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.movementY;\n          this.currentYRange[1] -= event.movementY;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.needsAnimation = true;\n        this.sendDrawerState();\n        this.updateSelectionWindowDisplay();\n      },\n      false\n    );\n\n    this.mouseReader.addEventListener(\"mouseup\", (event) => {\n      this.isMoving = false;\n    });\n    this.mouseReader.addEventListener(\"mouseleave\", (event) => {\n      this.isMoving = false;\n    });\n  }\n\n  updateSelectionWindowDisplay() {\n    // This may slow down the rendering since it needs to call the DOM before animating, may need to remove for true benchmark\n    document.querySelector(\n      \".selection-window\"\n    ).textContent = `[${this.currentXRange[0].toFixed(\n      2\n    )}, ${this.currentXRange[1].toFixed(2)}] x [${this.currentYRange[0].toFixed(\n      2\n    )}, ${this.currentYRange[1].toFixed(2)}]`;\n  }\n\n  sendDrawerState() {\n    this.drawer.receiveState({ ...this.getState() });\n  }\n\n  getState() {\n    return {\n      minX: this.minX,\n      maxX: this.maxX,\n      minY: this.minY,\n      maxY: this.maxY,\n      controls: this.controls,\n      currentXRange: this.currentXRange,\n      currentYRange: this.currentYRange,\n      count: this.count,\n    };\n  }\n\n  forceDrawerRender() {\n    this.drawer.render();\n  }\n}\n\nexport default Handler;\n","import Handler from \"./handler\";\n\nclass OffscreenHandler extends Handler {\n  constructor() {\n    super();\n\n    // Create a div for reading mouse events\n    this.mouseReader = document.createElement(\"div\");\n\n    // Ensure div is directly on top of canvas\n    this.canvas.style.position = \"absolute\";\n    this.mouseReader.id = \"mouse-reader\";\n\n    // Reinit controls with new mouse reader\n    this.initControls();\n  }\n\n  addToDOM(worker) {\n    this.content.appendChild(this.canvas);\n    this.content.appendChild(this.mouseReader);\n\n    this.offscreenCanvas = this.canvas.transferControlToOffscreen();\n\n    this.worker = worker;\n    this.worker.postMessage(\n      { type: \"init\", canvas: this.offscreenCanvas, ...this.getState() },\n      [this.offscreenCanvas]\n    );\n\n    this.worker.onmessage = (e) => {\n      if (e.data.type === \"tick\") {\n        this.meter.tick();\n      }\n    };\n  }\n\n  sendDrawerState() {\n    this.worker.postMessage({ type: \"state\", ...this.getState() });\n  }\n\n  forceDrawerRender() {\n    this.worker.postMessage({ type: \"render\", ...this.getState() });\n  }\n}\n\nexport default OffscreenHandler;\n","import OffscreenHandler from \"./offscreen-handler\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const handler = new OffscreenHandler();\n  handler.addToDOM(new Worker(\"../scripts/offscreen-pixi-worker.js\"));\n\n  handler.forceDrawerRender();\n});\n"]}