{"version":3,"sources":["../scripts/utilities.js","../scripts/offscreen-worker.js","../scripts/webgl.js","../scripts/offscreen-canvas-webgl-worker.js"],"names":["scale","domain","range","domainLength","rangeLength","slope","intercept","x","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","parseInt","Number","OffscreenWorker","data","canvas","width","height","receiveState","minX","maxX","minY","maxY","currentXRange","currentYRange","count","controls","needsAnimation","postMessage","self","e","log","engine","render","OffscreenCanvasWebGLWorker","getContext","lastFrame","requestAnimationFrame","animate","bind","tick","clearColor","clear","COLOR_BUFFER_BIT","bindBuffer","ARRAY_BUFFER","positionBuffer","vertexAttribPointer","programInfo","attribLocations","vertexPosition","FLOAT","enableVertexAttribArray","useProgram","program","uniform1f","uniformLocations","gridSize","Math","sqrt","uniform4fv","viewport","getParameter","VIEWPORT","drawArrays","TRIANGLES","vertexCount","getWebGLViewport","trueBoxWidth","trueBoxHeight","getAttribLocation","getUniformLocation","createBuffer","scaleX","scaleY","positions","y","push","bufferData","Float32Array","STATIC_DRAW","cancelAnimationFrame","scaleXWindowSpace","scaleYWindowSpace","toReturnX","toReturnY","windowWidth","windowHeight","onmessage","onmessager"],"mappings":"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","file":"offscreen-canvas-webgl-worker.a1a9ae64.js","sourceRoot":"../src/pages","sourcesContent":["function scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nexport { scale, initShaderProgram, loadShader, rgbToHex };\n","class OffscreenWorker {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n\n    this.needsAnimation = true;\n  }\n\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n\n  animate() {}\n\n  render() {}\n\n  static onmessager(self) {\n    return (e) => {\n      console.log(e);\n      switch (e.data.type) {\n        case \"init\":\n          self.engine = new this(e.data);\n          break;\n        case \"state\":\n          self.engine.receiveState(e.data);\n          break;\n        case \"render\":\n          self.engine.receiveState(e.data);\n          self.engine.render();\n          break;\n        default:\n          console.error(`Received unknown message type: ${e}`);\n      }\n    };\n  }\n}\n\nexport default OffscreenWorker;\n","const vertexShader = `\n  attribute vec4 aVertexPosition;\n\n  void main() {\n      gl_Position = aVertexPosition;\n  }\n`;\n\nconst fragmentShader = `\n  precision mediump float;\n  uniform float uGridSize;\n  uniform vec4 viewport;\n  void main() {\n    vec4 ndcPos;\n    // Reverse calculations from window space to clip space (normalized device coordinates)\n    ndcPos.xy = ((2.0 * gl_FragCoord.xy) - (2.0 * viewport.xy)) / (viewport.zw) - 1.0;\n    ndcPos.xy = ndcPos.xy - mod(ndcPos.xy, 1.0 / uGridSize);\n    gl_FragColor = vec4(ndcPos.x/2.0 + 0.5 , 0, ndcPos.y/2.0 + 0.5, 1.0);\n  }\n`;\n\nexport { vertexShader, fragmentShader };\n","import { scale, initShaderProgram } from \"./utilities\";\nimport OffscreenWorker from \"./offscreen-worker\";\nimport { vertexShader, fragmentShader } from \"./webgl.js\";\n\nclass OffscreenCanvasWebGLWorker extends OffscreenWorker {\n  constructor(data) {\n    super(data);\n    this.gl = this.canvas.getContext(\"webgl\");\n\n    if (!this.gl) {\n      console.error(\"Unable to initialize WebGL!\");\n      return;\n    }\n  }\n\n  animate() {\n    if (!this.needsAnimation) {\n      this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n      this.tick();\n      return;\n    }\n\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    this.gl.vertexAttribPointer(\n      this.programInfo.attribLocations.vertexPosition,\n      2, // numComponents\n      this.gl.FLOAT, // type\n      false, // normalize\n      0, // stride\n      0 // offset\n    );\n    this.gl.enableVertexAttribArray(\n      this.programInfo.attribLocations.vertexPosition\n    );\n\n    this.gl.useProgram(this.programInfo.program);\n\n    this.gl.uniform1f(\n      this.programInfo.uniformLocations.gridSize,\n      Math.sqrt(this.count) / 2\n    );\n    this.gl.uniform4fv(\n      this.programInfo.uniformLocations.viewport,\n      this.gl.getParameter(this.gl.VIEWPORT)\n    );\n\n    this.gl.drawArrays(\n      this.gl.TRIANGLES,\n      0, // stride\n      this.vertexCount // vertex count\n    );\n\n    const viewport = this.getWebGLViewport();\n\n    this.gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n    this.tick();\n  }\n\n  render() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count);\n\n    this.shaderProgram = initShaderProgram(\n      this.gl,\n      vertexShader,\n      fragmentShader\n    );\n\n    this.programInfo = {\n      program: this.shaderProgram,\n      attribLocations: {\n        vertexPosition: this.gl.getAttribLocation(\n          this.shaderProgram,\n          \"aVertexPosition\"\n        ),\n      },\n      uniformLocations: {\n        gridSize: this.gl.getUniformLocation(this.shaderProgram, \"uGridSize\"),\n        viewport: this.gl.getUniformLocation(this.shaderProgram, \"viewport\"),\n      },\n    };\n    this.positionBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n\n    const scaleX = scale([this.minX, this.maxX], [-1, 1]);\n    const scaleY = scale([this.minY, this.maxY], [-1, 1]);\n    const positions = [];\n    for (let x = this.minX; x < this.maxX; x += this.trueBoxWidth) {\n      for (let y = this.minY; y < this.maxY; y += this.trueBoxHeight) {\n        positions.push(\n          scaleX(x),\n          scaleY(y),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y + this.trueBoxHeight)\n        );\n\n        positions.push(\n          scaleX(x),\n          scaleY(y),\n          scaleX(x),\n          scaleY(y + this.trueBoxHeight),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y + this.trueBoxHeight)\n        );\n      }\n    }\n\n    this.vertexCount = positions.length / 2;\n\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array(positions),\n      this.gl.STATIC_DRAW\n    );\n\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n    this.needsAnimation = true;\n    this.animate();\n  }\n\n  getWebGLViewport() {\n    // Calculate appropriate webgl viewport given current selection window\n    const scaleXWindowSpace = scale([this.minX, this.maxX], [0, -this.width]);\n    const scaleYWindowSpace = scale([this.minY, this.maxY], [0, -this.height]);\n\n    const toReturnX = scaleXWindowSpace(this.currentXRange[0]);\n    const toReturnY = scaleYWindowSpace(this.currentYRange[0]);\n\n    const windowWidth = this.currentXRange[1] - this.currentXRange[0];\n    const windowHeight = this.currentYRange[1] - this.currentYRange[0];\n\n    return [\n      toReturnX,\n      toReturnY,\n      ((this.maxX - this.minX) / windowWidth) * this.width,\n      ((this.maxY - this.minY) / windowHeight) * this.height,\n    ];\n  }\n}\n\nself.onmessage = OffscreenCanvasWebGLWorker.onmessager(self);\n"]}