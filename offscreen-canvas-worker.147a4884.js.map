{"version":3,"sources":["../../node_modules/kdbush/src/sort.js","../../node_modules/kdbush/src/range.js","../../node_modules/kdbush/src/within.js","../../node_modules/kdbush/src/index.js","../../node_modules/supercluster/index.js","../../node_modules/regenerator-runtime/runtime.js","../scripts/utilities.js","../scripts/drawer.js","../scripts/base-canvas-drawer.js","../scripts/offscreen-canvas-worker.js"],"names":["sortKD","ids","coords","nodeSize","left","right","depth","m","select","k","inc","n","z","Math","log","s","exp","sd","sqrt","max","floor","min","t","i","j","swapItem","swap","arr","tmp","range","minX","minY","maxX","maxY","stack","length","result","x","y","axis","pop","push","nextAxis","within","qx","qy","r","r2","sqDist","ax","ay","bx","by","dx","dy","defaultGetX","p","defaultGetY","KDBush","constructor","points","getX","getY","ArrayType","Float64Array","IndexArrayType","Uint16Array","Uint32Array","defaultOptions","minZoom","maxZoom","minPoints","radius","extent","generateId","reduce","map","props","fround","Float32Array","Supercluster","options","extend","Object","create","trees","Array","load","console","time","timerId","clusters","geometry","createPointCluster","timeEnd","now","Date","_cluster","getClusters","bbox","zoom","minLng","minLat","maxLng","maxLat","easternHem","westernHem","concat","tree","_limitZoom","lngX","latY","id","c","numPoints","getClusterJSON","index","getChildren","clusterId","originId","_getOriginId","originZoom","_getOriginZoom","errorMsg","Error","origin","pow","children","parentId","getLeaves","limit","offset","leaves","_appendLeaves","getTile","z2","top","bottom","tile","features","_addTileFeatures","getClusterExpansionZoom","expansionZoom","properties","cluster_id","skipped","child","cluster","point_count","isCluster","tags","px","py","getClusterProperties","coordinates","f","type","round","undefined","neighborIds","numPointsOrigin","neighborId","b","wx","wy","clusterProperties","_map","numPoints2","createCluster","point","clone","original","Infinity","xLng","yLat","count","abbrev","point_count_abbreviated","lng","lat","sin","PI","y2","atan","dest","src","JITTER_FACTOR","scale","domain","domainLength","slope","intercept","loadShader","gl","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","hex","toString","rgbToHex","g","parseInt","Number","createMessanger","clazz","self","e","data","drawer","receiveState","render","SuperclusterMapper","xRange","yRange","xScale","yScale","xScaleInverse","yScaleInverse","zoomLevel","inLatLong","getRandomColor","random","getRandomColorAlpha","alpha","Drawer","canvas","width","height","currentXRange","currentYRange","controls","dataset","csv","needsAnimation","lastFrame","cancelAnimationFrame","renderSquares","renderRandom","renderJittered","renderTSNE","BaseCanvasDrawer","ctx","getContext","globalAlpha","globalCompositeOperation","requestAnimationFrame","animateSquares","bind","tick","clearRect","scaleX","scaleY","currBoxWidth","trueBoxWidth","currBoxHeight","trueBoxHeight","gridStartX","gridEndX","gridStartY","gridEndY","currX","currY","fillStyle","scaleRed","scaleBlue","fillRect","value","animateJittered","pointsToDraw","clusterMap","color","corners","animateRandom","animateTSNE","bboxTSNES","xTSNEScale","yTSNEScale","sampleColors","get","sample","Map","split","letter","OffscreenBaseCanvasDrawer","postMessage","onmessage"],"mappings":"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","file":"offscreen-canvas-worker.147a4884.js","sourceRoot":"../src/pages","sourcesContent":["\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        const t = coords[2 * k + inc];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    const r2 = r * r;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\n\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n\n    range(minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    }\n\n    within(x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n}\n","\nimport KDBush from 'kdbush';\n\nconst defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: props => props // props => ({sum: props.my_value})\n};\n\nconst fround = Math.fround || (tmp => ((x) => { tmp[0] = +x; return tmp[0]; }))(new Float32Array(1));\n\nexport default class Supercluster {\n    constructor(options) {\n        this.options = extend(Object.create(defaultOptions), options);\n        this.trees = new Array(this.options.maxZoom + 1);\n    }\n\n    load(points) {\n        const {log, minZoom, maxZoom, nodeSize} = this.options;\n\n        if (log) console.time('total time');\n\n        const timerId = `prepare ${  points.length  } points`;\n        if (log) console.time(timerId);\n\n        this.points = points;\n\n        // generate a cluster object for each point and index input points into a KD-tree\n        let clusters = [];\n        for (let i = 0; i < points.length; i++) {\n            if (!points[i].geometry) continue;\n            clusters.push(createPointCluster(points[i], i));\n        }\n        this.trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n        if (log) console.timeEnd(timerId);\n\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n        // results in a cluster hierarchy across zoom levels\n        for (let z = maxZoom; z >= minZoom; z--) {\n            const now = +Date.now();\n\n            // create a new set of clusters for the zoom and index them with a KD-tree\n            clusters = this._cluster(clusters, z);\n            this.trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n            if (log) console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now);\n        }\n\n        if (log) console.timeEnd('total time');\n\n        return this;\n    }\n\n    getClusters(bbox, zoom) {\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n        if (bbox[2] - bbox[0] >= 360) {\n            minLng = -180;\n            maxLng = 180;\n        } else if (minLng > maxLng) {\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n            return easternHem.concat(westernHem);\n        }\n\n        const tree = this.trees[this._limitZoom(zoom)];\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n        const clusters = [];\n        for (const id of ids) {\n            const c = tree.points[id];\n            clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n        }\n        return clusters;\n    }\n\n    getChildren(clusterId) {\n        const originId = this._getOriginId(clusterId);\n        const originZoom = this._getOriginZoom(clusterId);\n        const errorMsg = 'No cluster with the specified id.';\n\n        const index = this.trees[originZoom];\n        if (!index) throw new Error(errorMsg);\n\n        const origin = index.points[originId];\n        if (!origin) throw new Error(errorMsg);\n\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n        const ids = index.within(origin.x, origin.y, r);\n        const children = [];\n        for (const id of ids) {\n            const c = index.points[id];\n            if (c.parentId === clusterId) {\n                children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n            }\n        }\n\n        if (children.length === 0) throw new Error(errorMsg);\n\n        return children;\n    }\n\n    getLeaves(clusterId, limit, offset) {\n        limit = limit || 10;\n        offset = offset || 0;\n\n        const leaves = [];\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n        return leaves;\n    }\n\n    getTile(z, x, y) {\n        const tree = this.trees[this._limitZoom(z)];\n        const z2 = Math.pow(2, z);\n        const {extent, radius} = this.options;\n        const p = radius / extent;\n        const top = (y - p) / z2;\n        const bottom = (y + 1 + p) / z2;\n\n        const tile = {\n            features: []\n        };\n\n        this._addTileFeatures(\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n            tree.points, x, y, z2, tile);\n\n        if (x === 0) {\n            this._addTileFeatures(\n                tree.range(1 - p / z2, top, 1, bottom),\n                tree.points, z2, y, z2, tile);\n        }\n        if (x === z2 - 1) {\n            this._addTileFeatures(\n                tree.range(0, top, p / z2, bottom),\n                tree.points, -1, y, z2, tile);\n        }\n\n        return tile.features.length ? tile : null;\n    }\n\n    getClusterExpansionZoom(clusterId) {\n        let expansionZoom = this._getOriginZoom(clusterId) - 1;\n        while (expansionZoom <= this.options.maxZoom) {\n            const children = this.getChildren(clusterId);\n            expansionZoom++;\n            if (children.length !== 1) break;\n            clusterId = children[0].properties.cluster_id;\n        }\n        return expansionZoom;\n    }\n\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\n        const children = this.getChildren(clusterId);\n\n        for (const child of children) {\n            const props = child.properties;\n\n            if (props && props.cluster) {\n                if (skipped + props.point_count <= offset) {\n                    // skip the whole cluster\n                    skipped += props.point_count;\n                } else {\n                    // enter the cluster\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                    // exit the cluster\n                }\n            } else if (skipped < offset) {\n                // skip a single point\n                skipped++;\n            } else {\n                // add a single point\n                result.push(child);\n            }\n            if (result.length === limit) break;\n        }\n\n        return skipped;\n    }\n\n    _addTileFeatures(ids, points, x, y, z2, tile) {\n        for (const i of ids) {\n            const c = points[i];\n            const isCluster = c.numPoints;\n\n            let tags, px, py;\n            if (isCluster) {\n                tags = getClusterProperties(c);\n                px = c.x;\n                py = c.y;\n            } else {\n                const p = this.points[c.index];\n                tags = p.properties;\n                px = lngX(p.geometry.coordinates[0]);\n                py = latY(p.geometry.coordinates[1]);\n            }\n\n            const f = {\n                type: 1,\n                geometry: [[\n                    Math.round(this.options.extent * (px * z2 - x)),\n                    Math.round(this.options.extent * (py * z2 - y))\n                ]],\n                tags\n            };\n\n            // assign id\n            let id;\n            if (isCluster) {\n                id = c.id;\n            } else if (this.options.generateId) {\n                // optionally generate id\n                id = c.index;\n            } else if (this.points[c.index].id) {\n                // keep id if already assigned\n                id = this.points[c.index].id;\n            }\n\n            if (id !== undefined) f.id = id;\n\n            tile.features.push(f);\n        }\n    }\n\n    _limitZoom(z) {\n        return Math.max(this.options.minZoom, Math.min(+z, this.options.maxZoom + 1));\n    }\n\n    _cluster(points, zoom) {\n        const clusters = [];\n        const {radius, extent, reduce, minPoints} = this.options;\n        const r = radius / (extent * Math.pow(2, zoom));\n\n        // loop through each point\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            // if we've already visited the point at this zoom level, skip it\n            if (p.zoom <= zoom) continue;\n            p.zoom = zoom;\n\n            // find all nearby points\n            const tree = this.trees[zoom + 1];\n            const neighborIds = tree.within(p.x, p.y, r);\n\n            const numPointsOrigin = p.numPoints || 1;\n            let numPoints = numPointsOrigin;\n\n            // count the number of points in a potential cluster\n            for (const neighborId of neighborIds) {\n                const b = tree.points[neighborId];\n                // filter out neighbors that are already processed\n                if (b.zoom > zoom) numPoints += b.numPoints || 1;\n            }\n\n            if (numPoints >= minPoints) { // enough points to form a cluster\n                let wx = p.x * numPointsOrigin;\n                let wy = p.y * numPointsOrigin;\n\n                let clusterProperties = reduce && numPointsOrigin > 1 ? this._map(p, true) : null;\n\n                // encode both zoom and point index on which the cluster originated -- offset by total length of features\n                const id = (i << 5) + (zoom + 1) + this.points.length;\n\n                for (const neighborId of neighborIds) {\n                    const b = tree.points[neighborId];\n\n                    if (b.zoom <= zoom) continue;\n                    b.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n\n                    const numPoints2 = b.numPoints || 1;\n                    wx += b.x * numPoints2; // accumulate coordinates for calculating weighted center\n                    wy += b.y * numPoints2;\n\n                    b.parentId = id;\n\n                    if (reduce) {\n                        if (!clusterProperties) clusterProperties = this._map(p, true);\n                        reduce(clusterProperties, this._map(b));\n                    }\n                }\n\n                p.parentId = id;\n                clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\n\n            } else { // left points as unclustered\n                clusters.push(p);\n\n                if (numPoints > 1) {\n                    for (const neighborId of neighborIds) {\n                        const b = tree.points[neighborId];\n                        if (b.zoom <= zoom) continue;\n                        b.zoom = zoom;\n                        clusters.push(b);\n                    }\n                }\n            }\n        }\n\n        return clusters;\n    }\n\n    // get index of the point from which the cluster originated\n    _getOriginId(clusterId) {\n        return (clusterId - this.points.length) >> 5;\n    }\n\n    // get zoom of the point from which the cluster originated\n    _getOriginZoom(clusterId) {\n        return (clusterId - this.points.length) % 32;\n    }\n\n    _map(point, clone) {\n        if (point.numPoints) {\n            return clone ? extend({}, point.properties) : point.properties;\n        }\n        const original = this.points[point.index].properties;\n        const result = this.options.map(original);\n        return clone && result === original ? extend({}, result) : result;\n    }\n}\n\nfunction createCluster(x, y, id, numPoints, properties) {\n    return {\n        x: fround(x), // weighted cluster center; round for consistency with Float32Array index\n        y: fround(y),\n        zoom: Infinity, // the last zoom the cluster was processed at\n        id, // encodes index of the first child of the cluster and its zoom level\n        parentId: -1, // parent cluster id\n        numPoints,\n        properties\n    };\n}\n\nfunction createPointCluster(p, id) {\n    const [x, y] = p.geometry.coordinates;\n    return {\n        x: fround(lngX(x)), // projected point coordinates\n        y: fround(latY(y)),\n        zoom: Infinity, // the last zoom the point was processed at\n        index: id, // index of the source feature in the original input array,\n        parentId: -1 // parent cluster id\n    };\n}\n\nfunction getClusterJSON(cluster) {\n    return {\n        type: 'Feature',\n        id: cluster.id,\n        properties: getClusterProperties(cluster),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(cluster.x), yLat(cluster.y)]\n        }\n    };\n}\n\nfunction getClusterProperties(cluster) {\n    const count = cluster.numPoints;\n    const abbrev =\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\n    return extend(extend({}, cluster.properties), {\n        cluster: true,\n        cluster_id: cluster.id,\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin(lat * Math.PI / 180);\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n\nfunction extend(dest, src) {\n    for (const id in src) dest[id] = src[id];\n    return dest;\n}\n\nfunction getX(p) {\n    return p.x;\n}\nfunction getY(p) {\n    return p.y;\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import Supercluster from \"supercluster\";\nimport regeneratorRuntime from \"regenerator-runtime\";\n\nconst JITTER_FACTOR = 250;\n\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nconst createMessanger = (clazz, self) => {\n  return (e) => {\n    switch (e.data.type) {\n      case \"init\":\n        self.drawer = new clazz(e.data);\n        break;\n      case \"state\":\n        self.drawer.receiveState(e.data);\n        break;\n      case \"render\":\n        self.drawer.receiveState(e.data);\n        self.drawer.render();\n        break;\n      default:\n        console.error(`Received unknown message type: ${e}`);\n    }\n  };\n};\n\nclass SuperclusterMapper {\n  constructor(points, xRange, yRange, options = { radius: 1000, maxZoom: 16 }) {\n    this.xScale = scale(xRange, [-180, 180]);\n    this.yScale = scale(yRange, [-90, 90]);\n\n    this.xScaleInverse = scale([-180, 180], xRange);\n    this.yScaleInverse = scale([-90, 90], yRange);\n\n    this.index = new Supercluster(options);\n\n    for (const point of points) {\n      point.geometry.coordinates = [\n        this.xScale(point.geometry.coordinates[0]),\n        this.yScale(point.geometry.coordinates[1]),\n      ];\n    }\n\n    this.index.load(points);\n  }\n\n  *getClusters(bbox, zoomLevel = 10) {\n    const inLatLong = this.index.getClusters(\n      [\n        this.xScale(bbox[0]),\n        this.yScale(bbox[1]),\n        this.xScale(bbox[2]),\n        this.yScale(bbox[3]),\n      ],\n      zoomLevel\n    );\n    for (const point of inLatLong) {\n      // use of generator here gives huge speedup since no heap changes needed\n      yield {\n        ...point,\n        geometry: {\n          coordinates: [\n            this.xScaleInverse(point.geometry.coordinates[0]),\n            this.yScaleInverse(point.geometry.coordinates[1]),\n          ],\n        },\n      };\n    }\n  }\n}\n\nconst getRandomColor = () => {\n  let r = Math.floor(Math.random() * 255);\n  let g = Math.floor(Math.random() * 255);\n  let b = Math.floor(Math.random() * 255);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nconst getRandomColorAlpha = (alpha) => {\n  let r = Math.floor(Math.random() * 255);\n  let g = Math.floor(Math.random() * 255);\n  let b = Math.floor(Math.random() * 255);\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n\nexport {\n  scale,\n  initShaderProgram,\n  loadShader,\n  rgbToHex,\n  createMessanger,\n  SuperclusterMapper,\n  getRandomColor,\n  getRandomColorAlpha,\n  JITTER_FACTOR,\n};\n","class Drawer {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n    this.dataset = data.dataset;\n    if (data.csv) {\n      this.csv = data.csv;\n    }\n\n    this.needsAnimation = true;\n  }\n\n  tick() {}\n\n  animate() {}\n\n  render() {\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n\n    switch (this.dataset) {\n      case \"squares\":\n        this.renderSquares();\n        break;\n      case \"random\":\n        this.renderRandom();\n        break;\n      case \"jittered\":\n        this.renderJittered();\n        break;\n      case \"tsne\":\n        this.renderTSNE();\n        break;\n      default:\n        console.error(\n          `Did not receive valid dataset to render: ${this.dataset}`\n        );\n    }\n  }\n}\n\nexport default Drawer;\n","import {\n  getRandomColor,\n  getRandomColorAlpha,\n  scale,\n  SuperclusterMapper,\n  JITTER_FACTOR,\n} from \"./utilities\";\nimport Drawer from \"./drawer\";\n\nclass BaseCanvasDrawer extends Drawer {\n  constructor(data) {\n    super(data);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  render() {\n    super.render();\n    this.ctx.globalAlpha = 1.0; // avoid switching datasets ruining opacity\n    this.ctx.globalCompositeOperation = \"source-over\";\n  }\n\n  animateSquares() {\n    if (!this.needsAnimation) {\n      this.lastFrame = requestAnimationFrame(this.animateSquares.bind(this));\n      this.tick();\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    const currBoxWidth =\n      ((this.maxX - this.minX) /\n        (this.currentXRange[1] - this.currentXRange[0])) *\n      this.trueBoxWidth;\n\n    const currBoxHeight =\n      ((this.maxY - this.minY) /\n        (this.currentYRange[1] - this.currentYRange[0])) *\n      this.trueBoxHeight;\n\n    // Calculate where grid starts so we draw rectangles that are partially offscreen\n    const gridStartX =\n      this.currentXRange[0] -\n      (this.currentXRange[0] % this.trueBoxWidth) -\n      this.trueBoxWidth;\n    const gridEndX =\n      this.currentXRange[1] -\n      (this.currentXRange[1] % this.trueBoxWidth) +\n      this.trueBoxWidth;\n\n    const gridStartY =\n      this.currentYRange[0] -\n      (this.currentYRange[0] % this.trueBoxHeight) -\n      this.trueBoxWidth;\n    const gridEndY =\n      this.currentYRange[1] -\n      (this.currentYRange[1] % this.trueBoxHeight) +\n      this.trueBoxWidth;\n\n    // Only draw rectangles inside viewing window\n    for (let currX = gridStartX; currX < gridEndX; currX += this.trueBoxWidth) {\n      for (\n        let currY = gridStartY;\n        currY < gridEndY;\n        currY += this.trueBoxHeight\n      ) {\n        this.ctx.fillStyle = `rgb(\n          ${this.scaleRed(currY)},\n          0,\n          ${this.scaleBlue(currX)})`;\n        this.ctx.fillRect(\n          scaleX(currX),\n          scaleY(currY),\n          currBoxWidth,\n          currBoxHeight\n        );\n      }\n    }\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animateSquares.bind(this));\n    this.tick();\n  }\n\n  renderSquares() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n    this.scaleBlue = scale([this.minX, this.maxX], [0, 256]);\n    this.scaleRed = scale([this.minY, this.maxY], [0, 256]);\n\n    this.needsAnimation = true;\n    this.animateSquares();\n  }\n\n  animateJittered() {\n    if (!this.needsAnimation) {\n      this.tick();\n      this.lastFrame = requestAnimationFrame(this.animateJittered.bind(this));\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    const currBoxWidth =\n      ((this.maxX - this.minX) /\n        (this.currentXRange[1] - this.currentXRange[0])) *\n      this.trueBoxWidth;\n\n    const currBoxHeight =\n      ((this.maxY - this.minY) /\n        (this.currentYRange[1] - this.currentYRange[0])) *\n      this.trueBoxHeight;\n\n    const pointsToDraw = this.clusterMap.getClusters(\n      [\n        this.currentXRange[0] - JITTER_FACTOR - currBoxWidth,\n        this.currentYRange[0] - JITTER_FACTOR - currBoxHeight,\n        this.currentXRange[1] + JITTER_FACTOR + currBoxWidth,\n        this.currentYRange[1] + JITTER_FACTOR + currBoxHeight,\n      ],\n      10\n    );\n\n    for (const point of pointsToDraw) {\n      this.ctx.fillStyle = point.color;\n      this.ctx.fillRect(\n        scaleX(point.geometry.coordinates[0]),\n        scaleY(point.geometry.coordinates[1]),\n        currBoxWidth,\n        currBoxHeight\n      );\n    }\n\n    this.tick();\n    this.lastFrame = requestAnimationFrame(this.animateJittered.bind(this));\n    this.needsAnimation = false;\n  }\n\n  renderJittered() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n    this.scaleBlue = scale([this.minX, this.maxX], [0, 256]);\n    this.scaleRed = scale([this.minY, this.maxY], [0, 256]);\n\n    const corners = [];\n    for (let currX = this.minX; currX < this.maxX; currX += this.trueBoxWidth) {\n      for (\n        let currY = this.minY;\n        currY < this.maxY;\n        currY += this.trueBoxHeight\n      ) {\n        corners.push({\n          geometry: {\n            coordinates: [\n              currX - JITTER_FACTOR / 2 + Math.random() * JITTER_FACTOR,\n              currY - JITTER_FACTOR / 2 + Math.random() * JITTER_FACTOR,\n            ],\n          },\n          color: `rgb(\n            ${this.scaleRed(currY)},\n            0,\n            ${this.scaleBlue(currX)})`,\n        });\n      }\n    }\n\n    this.clusterMap = new SuperclusterMapper(\n      corners,\n      [\n        this.minX - JITTER_FACTOR - this.trueBoxWidth,\n        this.maxX + JITTER_FACTOR + this.trueBoxWidth,\n      ],\n      [\n        this.minY - JITTER_FACTOR - this.trueBoxHeight,\n        this.maxY + JITTER_FACTOR + this.trueBoxHeight,\n      ]\n    );\n\n    this.needsAnimation = true;\n    this.animateJittered();\n  }\n\n  animateRandom() {\n    if (!this.needsAnimation) {\n      this.tick();\n      this.lastFrame = requestAnimationFrame(this.animateRandom.bind(this));\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    const pointsToDraw = this.clusterMap.getClusters(\n      [\n        this.currentXRange[0],\n        this.currentYRange[0],\n        this.currentXRange[1],\n        this.currentYRange[1],\n      ],\n      10\n    );\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    for (const point of pointsToDraw) {\n      this.ctx.fillStyle = point.color;\n      this.ctx.fillRect(\n        scaleX(point.geometry.coordinates[0]),\n        scaleY(point.geometry.coordinates[1]),\n        2,\n        2\n      );\n    }\n\n    this.tick();\n    this.lastFrame = requestAnimationFrame(this.animateRandom.bind(this));\n    this.needsAnimation = false;\n  }\n\n  renderRandom() {\n    const points = [];\n    for (let i = 0; i < this.count.value; i++) {\n      points.push({\n        geometry: {\n          coordinates: [\n            this.minX + Math.random() * (this.maxX - this.minX),\n            this.minY + Math.random() * (this.maxY - this.minY),\n          ],\n        },\n        color: getRandomColor(),\n      });\n    }\n\n    this.clusterMap = new SuperclusterMapper(\n      points,\n      [this.minX, this.maxX],\n      [this.minY, this.maxY]\n    );\n\n    this.needsAnimation = true;\n    this.animateRandom();\n  }\n\n  animateTSNE() {\n    if (!this.needsAnimation) {\n      this.tick();\n      this.lastFrame = requestAnimationFrame(this.animateTSNE.bind(this));\n      return;\n    }\n\n    this.ctx.globalCompositeOperation = \"overlay\";\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    const bboxTSNES = [\n      this.xTSNEScale(this.currentXRange[0]),\n      this.yTSNEScale(this.currentYRange[0]),\n      this.xTSNEScale(this.currentXRange[1]),\n      this.yTSNEScale(this.currentYRange[1]),\n    ];\n\n    const pointsToDraw = this.clusterMap.getClusters(bboxTSNES, 10);\n    const scaleX = scale([bboxTSNES[0], bboxTSNES[2]], [0, this.width]);\n    const scaleY = scale([bboxTSNES[1], bboxTSNES[3]], [0, this.height]);\n\n    for (const point of pointsToDraw) {\n      this.ctx.fillStyle = this.sampleColors.get(point.sample);\n      this.ctx.fillRect(\n        scaleX(point.geometry.coordinates[0]),\n        scaleY(point.geometry.coordinates[1]),\n        2,\n        2\n      );\n    }\n\n    this.tick();\n    this.lastFrame = requestAnimationFrame(this.animateTSNE.bind(this));\n    this.needsAnimation = false;\n  }\n\n  renderTSNE() {\n    this.xTSNEScale = scale([this.minX, this.maxX], [-10, 10]);\n    this.yTSNEScale = scale([this.minY, this.maxY], [-10, 10]);\n\n    this.sampleColors = new Map( // Create colors for sample type\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZ012\"\n        .split(\"\")\n        .map((letter) => [letter, getRandomColorAlpha(0.3)])\n    );\n\n    this.clusterMap = new SuperclusterMapper(\n      this.csv,\n      [-10, 10], // domain of csv data\n      [-10, 10] // range of csv data\n    );\n\n    this.needsAnimation = true;\n    this.animateTSNE();\n  }\n}\n\nexport default BaseCanvasDrawer;\n","import BaseCanvasDrawer from \"./base-canvas-drawer\";\nimport { createMessanger } from \"./utilities\";\n\nclass OffscreenBaseCanvasDrawer extends BaseCanvasDrawer {\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n}\n\nself.onmessage = createMessanger(OffscreenBaseCanvasDrawer, self);\n"]}