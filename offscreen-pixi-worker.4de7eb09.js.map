{"version":3,"sources":["../scripts/utilities.js","../scripts/offscreen-worker.js","../scripts/offscreen-pixi-worker.js"],"names":["scale","domain","range","domainLength","rangeLength","slope","intercept","x","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","parseInt","Number","OffscreenWorker","data","canvas","width","height","receiveState","minX","maxX","minY","maxY","currentXRange","currentYRange","count","controls","needsAnimation","postMessage","self","e","log","engine","render","OffscreenPixiWorker","onmessage","onmessager"],"mappings":"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","file":"offscreen-pixi-worker.4de7eb09.js","sourceRoot":"../src/pages","sourcesContent":["function scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nexport { scale, initShaderProgram, loadShader, rgbToHex };\n","class OffscreenWorker {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n\n    this.needsAnimation = true;\n  }\n\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n\n  animate() {}\n\n  render() {}\n\n  static onmessager(self) {\n    return (e) => {\n      console.log(e);\n      switch (e.data.type) {\n        case \"init\":\n          self.engine = new this(e.data);\n          break;\n        case \"state\":\n          self.engine.receiveState(e.data);\n          break;\n        case \"render\":\n          self.engine.receiveState(e.data);\n          self.engine.render();\n          break;\n        default:\n          console.error(`Received unknown message type: ${e}`);\n      }\n    };\n  }\n}\n\nexport default OffscreenWorker;\n","import { scale } from \"./utilities\";\nimport OffscreenWorker from \"./offscreen-worker\";\n\nclass OffscreenPixiWorker extends OffscreenWorker {\n  constructor(data) {\n    super(data);\n  }\n\n  animate() {}\n\n  render() {}\n}\n\nself.onmessage = OffscreenPixiWorker.onmessager(self);\n"]}