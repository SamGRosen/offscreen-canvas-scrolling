{"version":3,"sources":["../../node_modules/fpsmeter/dist/fpsmeter.js","../scripts/engine.js","../scripts/utilities.js","../scripts/webgl.js","../scripts/canvas-webgl.js"],"names":["Engine","content","document","querySelector","countLinks","querySelectorAll","canvas","createElement","width","Math","min","clientWidth","height","clientHeight","mouseReader","controls","lockedX","lockedY","minX","maxX","minY","maxY","currentXRange","currentYRange","needsAnimation","initFpsmeter","initSettings","initControls","appendChild","meter","window","FPSMeter","graph","heat","theme","history","top","left","transform","count","JSON","parse","localStorage","getItem","index","value","setItem","stringify","forEach","link","classList","toggle","addEventListener","event","preventDefault","stopPropagation","parseInt","innerText","render","getElementById","checked","target","previousX","wheelDelta","max","previousY","updateSelectionWindowDisplay","isMoving","movementX","movementY","textContent","toFixed","scale","domain","range","domainLength","rangeLength","slope","intercept","x","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","Number","WebGLCanvasEngine","getContext","lastFrame","requestAnimationFrame","animate","bind","tick","clearColor","clear","COLOR_BUFFER_BIT","bindBuffer","ARRAY_BUFFER","positionBuffer","vertexAttribPointer","programInfo","attribLocations","vertexPosition","FLOAT","enableVertexAttribArray","useProgram","program","uniform1f","uniformLocations","gridSize","sqrt","uniform4fv","viewport","getParameter","VIEWPORT","drawArrays","TRIANGLES","vertexCount","getWebGLViewport","trueBoxWidth","trueBoxHeight","getAttribLocation","getUniformLocation","createBuffer","scaleX","scaleY","positions","y","push","bufferData","Float32Array","STATIC_DRAW","cancelAnimationFrame","scaleXWindowSpace","scaleYWindowSpace","toReturnX","toReturnY","windowWidth","windowHeight","engine","addToDOM"],"mappings":"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":"canvas-webgl.c7d3b97f.js","sourceRoot":"../src/pages","sourcesContent":["/*!\n * FPSMeter 0.3.1 - 9th May 2013\n * https://github.com/Darsain/fpsmeter\n *\n * Licensed under the MIT license.\n * http://opensource.org/licenses/MIT\n */\n;(function (w, undefined) {\n\t'use strict';\n\n\t/**\n\t * Create a new element.\n\t *\n\t * @param  {String} name Element type name.\n\t *\n\t * @return {Element}\n\t */\n\tfunction newEl(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\t/**\n\t * Apply theme CSS properties to element.\n\t *\n\t * @param  {Element} element DOM element.\n\t * @param  {Object}  theme   Theme object.\n\t *\n\t * @return {Element}\n\t */\n\tfunction applyTheme(element, theme) {\n\t\tfor (var name in theme) {\n\t\t\ttry {\n\t\t\t\telement.style[name] = theme[name];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Return type of the value.\n\t *\n\t * @param  {Mixed} value\n\t *\n\t * @return {String}\n\t */\n\tfunction type(value) {\n\t\tif (value == null) {\n\t\t\treturn String(value);\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof value === 'function') {\n\t\t\treturn Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLowerCase() || 'object';\n\t\t}\n\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Check whether the value is in an array.\n\t *\n\t * @param  {Mixed} value\n\t * @param  {Array} array\n\t *\n\t * @return {Integer} Array index or -1 when not found.\n\t */\n\tfunction inArray(value, array) {\n\t\tif (type(array) !== 'array') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(value);\n\t\t}\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Poor man's deep object extend.\n\t *\n\t * Example:\n\t *   extend({}, defaults, options);\n\t *\n\t * @return {Void}\n\t */\n\tfunction extend() {\n\t\tvar args = arguments;\n\t\tfor (var key in args[1]) {\n\t\t\tif (args[1].hasOwnProperty(key)) {\n\t\t\t\tswitch (type(args[1][key])) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\targs[0][key] = extend({}, args[0][key], args[1][key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array':\n\t\t\t\t\t\targs[0][key] = args[1][key].slice(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\targs[0][key] = args[1][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn args.length > 2 ?\n\t\t\textend.apply(null, [args[0]].concat(Array.prototype.slice.call(args, 2))) :\n\t\t\targs[0];\n\t}\n\n\t/**\n\t * Convert HSL color to HEX string.\n\t *\n\t * @param  {Array} hsl Array with [hue, saturation, lightness].\n\t *\n\t * @return {Array} Array with [red, green, blue].\n\t */\n\tfunction hslToHex(h, s, l) {\n\t\tvar r, g, b;\n\t\tvar v, min, sv, sextant, fract, vsf;\n\n\t\tif (l <= 0.5) {\n\t\t\tv = l * (1 + s);\n\t\t} else {\n\t\t\tv = l + s - l * s;\n\t\t}\n\n\t\tif (v === 0) {\n\t\t\treturn '#000';\n\t\t} else {\n\t\t\tmin = 2 * l - v;\n\t\t\tsv = (v - min) / v;\n\t\t\th = 6 * h;\n\t\t\tsextant = Math.floor(h);\n\t\t\tfract = h - sextant;\n\t\t\tvsf = v * sv * fract;\n\t\t\tif (sextant === 0 || sextant === 6) {\n\t\t\t\tr = v;\n\t\t\t\tg = min + vsf;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 1) {\n\t\t\t\tr = v - vsf;\n\t\t\t\tg = v;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 2) {\n\t\t\t\tr = min;\n\t\t\t\tg = v;\n\t\t\t\tb = min + vsf;\n\t\t\t} else if (sextant === 3) {\n\t\t\t\tr = min;\n\t\t\t\tg = v - vsf;\n\t\t\t\tb = v;\n\t\t\t} else if (sextant === 4) {\n\t\t\t\tr = min + vsf;\n\t\t\t\tg = min;\n\t\t\t\tb = v;\n\t\t\t} else {\n\t\t\t\tr = v;\n\t\t\t\tg = min;\n\t\t\t\tb = v - vsf;\n\t\t\t}\n\t\t\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for hslToHex.\n\t */\n\tfunction componentToHex(c) {\n\t\tc = Math.round(c * 255).toString(16);\n\t\treturn c.length === 1 ? '0' + c : c;\n\t}\n\n\t/**\n\t * Manage element event listeners.\n\t *\n\t * @param  {Node}     element\n\t * @param  {Event}    eventName\n\t * @param  {Function} handler\n\t * @param  {Bool}     remove\n\t *\n\t * @return {Void}\n\t */\n\tfunction listener(element, eventName, handler, remove) {\n\t\tif (element.addEventListener) {\n\t\t\telement[remove ? 'removeEventListener' : 'addEventListener'](eventName, handler, false);\n\t\t} else if (element.attachEvent) {\n\t\t\telement[remove ? 'detachEvent' : 'attachEvent']('on' + eventName, handler);\n\t\t}\n\t}\n\n\t// Preferred timing funtion\n\tvar getTime;\n\t(function () {\n\t\tvar perf = w.performance;\n\t\tif (perf && (perf.now || perf.webkitNow)) {\n\t\t\tvar perfNow = perf.now ? 'now' : 'webkitNow';\n\t\t\tgetTime = perf[perfNow].bind(perf);\n\t\t} else {\n\t\t\tgetTime = function () {\n\t\t\t\treturn +new Date();\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Local WindowAnimationTiming interface polyfill\n\tvar cAF = w.cancelAnimationFrame || w.cancelRequestAnimationFrame;\n\tvar rAF = w.requestAnimationFrame;\n\t(function () {\n\t\tvar vendors = ['moz', 'webkit', 'o'];\n\t\tvar lastTime = 0;\n\n\t\t// For a more accurate WindowAnimationTiming interface implementation, ditch the native\n\t\t// requestAnimationFrame when cancelAnimationFrame is not present (older versions of Firefox)\n\t\tfor (var i = 0, l = vendors.length; i < l && !cAF; ++i) {\n\t\t\tcAF = w[vendors[i]+'CancelAnimationFrame'] || w[vendors[i]+'CancelRequestAnimationFrame'];\n\t\t\trAF = cAF && w[vendors[i]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif (!cAF) {\n\t\t\trAF = function (callback) {\n\t\t\t\tvar currTime = getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn w.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n\t\t\t};\n\n\t\t\tcAF = function (id) {\n\t\t\t\tclearTimeout(id);\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Property name for assigning element text content\n\tvar textProp = type(document.createElement('div').textContent) === 'string' ? 'textContent' : 'innerText';\n\n\t/**\n\t * FPSMeter class.\n\t *\n\t * @param {Element} anchor  Element to append the meter to. Default is document.body.\n\t * @param {Object}  options Object with options.\n\t */\n\tfunction FPSMeter(anchor, options) {\n\t\t// Optional arguments\n\t\tif (type(anchor) === 'object' && anchor.nodeType === undefined) {\n\t\t\toptions = anchor;\n\t\t\tanchor = document.body;\n\t\t}\n\t\tif (!anchor) {\n\t\t\tanchor = document.body;\n\t\t}\n\n\t\t// Private properties\n\t\tvar self = this;\n\t\tvar o = extend({}, FPSMeter.defaults, options || {});\n\n\t\tvar el = {};\n\t\tvar cols = [];\n\t\tvar theme, heatmaps;\n\t\tvar heatDepth = 100;\n\t\tvar heating = [];\n\n\t\tvar thisFrameTime = 0;\n\t\tvar frameTime = o.threshold;\n\t\tvar frameStart = 0;\n\t\tvar lastLoop = getTime() - frameTime;\n\t\tvar time;\n\n\t\tvar fpsHistory = [];\n\t\tvar durationHistory = [];\n\n\t\tvar frameID, renderID;\n\t\tvar showFps = o.show === 'fps';\n\t\tvar graphHeight, count, i, j;\n\n\t\t// Exposed properties\n\t\tself.options = o;\n\t\tself.fps = 0;\n\t\tself.duration = 0;\n\t\tself.isPaused = 0;\n\n\t\t/**\n\t\t * Tick start for measuring the actual rendering duration.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tickStart = function () {\n\t\t\tframeStart = getTime();\n\t\t};\n\n\t\t/**\n\t\t * FPS tick.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tick = function () {\n\t\t\ttime = getTime();\n\t\t\tthisFrameTime = time - lastLoop;\n\t\t\tframeTime += (thisFrameTime - frameTime) / o.smoothing;\n\t\t\tself.fps = 1000 / frameTime;\n\t\t\tself.duration = frameStart < lastLoop ? frameTime : time - frameStart;\n\t\t\tlastLoop = time;\n\t\t};\n\n\t\t/**\n\t\t * Pause display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.pause = function () {\n\t\t\tif (frameID) {\n\t\t\t\tself.isPaused = 1;\n\t\t\t\tclearTimeout(frameID);\n\t\t\t\tcAF(frameID);\n\t\t\t\tcAF(renderID);\n\t\t\t\tframeID = renderID = 0;\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Resume display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.resume = function () {\n\t\t\tif (!frameID) {\n\t\t\t\tself.isPaused = 0;\n\t\t\t\trequestRender();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Update options.\n\t\t *\n\t\t * @param {String} name  Option name.\n\t\t * @param {Mixed}  value New value.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.set = function (name, value) {\n\t\t\to[name] = value;\n\t\t\tshowFps = o.show === 'fps';\n\n\t\t\t// Rebuild or reposition elements when specific option has been updated\n\t\t\tif (inArray(name, rebuilders) !== -1) {\n\t\t\t\tcreateMeter();\n\t\t\t}\n\t\t\tif (inArray(name, repositioners) !== -1) {\n\t\t\t\tpositionMeter();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into rendering duration mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showDuration = function () {\n\t\t\tself.set('show', 'ms');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into FPS mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showFps = function () {\n\t\t\tself.set('show', 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Toggles between show: 'fps' and show: 'duration'.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.toggle = function () {\n\t\t\tself.set('show', showFps ? 'ms' : 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Hide the FPSMeter. Also pauses the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.hide = function () {\n\t\t\tself.pause();\n\t\t\tel.container.style.display = 'none';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Show the FPSMeter. Also resumes the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.show = function () {\n\t\t\tself.resume();\n\t\t\tel.container.style.display = 'block';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Check the current FPS and save it in history.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction historyTick() {\n\t\t\tfor (i = o.history; i--;) {\n\t\t\t\tfpsHistory[i] = i === 0 ? self.fps : fpsHistory[i-1];\n\t\t\t\tdurationHistory[i] = i === 0 ? self.duration : durationHistory[i-1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns heat hex color based on values passed.\n\t\t *\n\t\t * @param  {Integer} heatmap\n\t\t * @param  {Integer} value\n\t\t * @param  {Integer} min\n\t\t * @param  {Integer} max\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getHeat(heatmap, value, min, max) {\n\t\t\treturn heatmaps[0|heatmap][Math.round(Math.min((value - min) / (max - min) * heatDepth, heatDepth))];\n\t\t}\n\n\t\t/**\n\t\t * Update counter number and legend.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction updateCounter() {\n\t\t\t// Update legend only when changed\n\t\t\tif (el.legend.fps !== showFps) {\n\t\t\t\tel.legend.fps = showFps;\n\t\t\t\tel.legend[textProp] = showFps ? 'FPS' : 'ms';\n\t\t\t}\n\t\t\t// Update counter with a nicely formated & readable number\n\t\t\tcount = showFps ? self.fps : self.duration;\n\t\t\tel.count[textProp] = count > 999 ? '999+' : count.toFixed(count > 99 ? 0 : o.decimals);\n\t\t}\n\n\t\t/**\n\t\t * Render current FPS state.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction render() {\n\t\t\ttime = getTime();\n\t\t\t// If renderer stopped reporting, do a simulated drop to 0 fps\n\t\t\tif (lastLoop < time - o.threshold) {\n\t\t\t\tself.fps -= self.fps / Math.max(1, o.smoothing * 60 / o.interval);\n\t\t\t\tself.duration = 1000 / self.fps;\n\t\t\t}\n\n\t\t\thistoryTick();\n\t\t\tupdateCounter();\n\n\t\t\t// Apply heat to elements\n\t\t\tif (o.heat) {\n\t\t\t\tif (heating.length) {\n\t\t\t\t\tfor (i = heating.length; i--;) {\n\t\t\t\t\t\theating[i].el.style[theme[heating[i].name].heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.fps, 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.duration, o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.graph && theme.column.heatOn) {\n\t\t\t\t\tfor (i = cols.length; i--;) {\n\t\t\t\t\t\tcols[i].style[theme.column.heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, fpsHistory[i], 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, durationHistory[i], o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update graph columns height\n\t\t\tif (el.graph) {\n\t\t\t\tfor (j = 0; j < o.history; j++) {\n\t\t\t\t\tcols[j].style.height = (showFps ?\n\t\t\t\t\t\t(fpsHistory[j] ? Math.round(graphHeight / o.maxFps * Math.min(fpsHistory[j], o.maxFps)) : 0) :\n\t\t\t\t\t\t(durationHistory[j] ? Math.round(graphHeight / o.threshold * Math.min(durationHistory[j], o.threshold)) : 0)\n\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Request rendering loop.\n\t\t *\n\t\t * @return {Int} Animation frame index.\n\t\t */\n\t\tfunction requestRender() {\n\t\t\tif (o.interval < 20) {\n\t\t\t\tframeID = rAF(requestRender);\n\t\t\t\trender();\n\t\t\t} else {\n\t\t\t\tframeID = setTimeout(requestRender, o.interval);\n\t\t\t\trenderID = rAF(render);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Meter events handler.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction eventHandler(event) {\n\t\t\tevent = event || window.event;\n\t\t\tif (event.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tevent.returnValue = false;\n\t\t\t\tevent.cancelBubble = true;\n\t\t\t}\n\t\t\tself.toggle();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the current FPSMeter instance.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.destroy = function () {\n\t\t\t// Stop rendering\n\t\t\tself.pause();\n\t\t\t// Remove elements\n\t\t\tremoveMeter();\n\t\t\t// Stop listening\n\t\t\tself.tick = self.tickStart = function () {};\n\t\t};\n\n\t\t/**\n\t\t * Remove meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction removeMeter() {\n\t\t\t// Unbind listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler, 1);\n\t\t\t}\n\t\t\t// Detach element\n\t\t\tanchor.removeChild(el.container);\n\t\t}\n\n\t\t/**\n\t\t * Sets the theme, and generates heatmaps when needed.\n\t\t */\n\t\tfunction setTheme() {\n\t\t\ttheme = FPSMeter.theme[o.theme];\n\n\t\t\t// Generate heatmaps\n\t\t\theatmaps = theme.compiledHeatmaps || [];\n\t\t\tif (!heatmaps.length && theme.heatmaps.length) {\n\t\t\t\tfor (j = 0; j < theme.heatmaps.length; j++) {\n\t\t\t\t\theatmaps[j] = [];\n\t\t\t\t\tfor (i = 0; i <= heatDepth; i++) {\n\t\t\t\t\t\theatmaps[j][i] = hslToHex(0.33 / heatDepth * i, theme.heatmaps[j].saturation, theme.heatmaps[j].lightness);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.compiledHeatmaps = heatmaps;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates and attaches the meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction createMeter() {\n\t\t\t// Remove old meter if present\n\t\t\tif (el.container) {\n\t\t\t\tremoveMeter();\n\t\t\t}\n\n\t\t\t// Set theme\n\t\t\tsetTheme();\n\n\t\t\t// Create elements\n\t\t\tel.container = applyTheme(newEl('div'), theme.container);\n\t\t\tel.count = el.container.appendChild(applyTheme(newEl('div'), theme.count));\n\t\t\tel.legend = el.container.appendChild(applyTheme(newEl('div'), theme.legend));\n\t\t\tel.graph = o.graph ? el.container.appendChild(applyTheme(newEl('div'), theme.graph)) : 0;\n\n\t\t\t// Add elements to heating array\n\t\t\theating.length = 0;\n\t\t\tfor (var key in el) {\n\t\t\t\tif (el[key] && theme[key].heatOn) {\n\t\t\t\t\theating.push({\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tel: el[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Graph\n\t\t\tcols.length = 0;\n\t\t\tif (el.graph) {\n\t\t\t\t// Create graph\n\t\t\t\tel.graph.style.width = (o.history * theme.column.width + (o.history - 1) * theme.column.spacing) + 'px';\n\n\t\t\t\t// Add columns\n\t\t\t\tfor (i = 0; i < o.history; i++) {\n\t\t\t\t\tcols[i] = el.graph.appendChild(applyTheme(newEl('div'), theme.column));\n\t\t\t\t\tcols[i].style.position = 'absolute';\n\t\t\t\t\tcols[i].style.bottom = 0;\n\t\t\t\t\tcols[i].style.right = (i * theme.column.width + i * theme.column.spacing) + 'px';\n\t\t\t\t\tcols[i].style.width = theme.column.width + 'px';\n\t\t\t\t\tcols[i].style.height = '0px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the initial state\n\t\t\tpositionMeter();\n\t\t\tupdateCounter();\n\n\t\t\t// Append container to anchor\n\t\t\tanchor.appendChild(el.container);\n\n\t\t\t// Retrieve graph height after it was appended to DOM\n\t\t\tif (el.graph) {\n\t\t\t\tgraphHeight = el.graph.clientHeight;\n\t\t\t}\n\n\t\t\t// Add event listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tif (o.toggleOn === 'click') {\n\t\t\t\t\tel.container.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Positions the meter based on options.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction positionMeter() {\n\t\t\tapplyTheme(el.container, o);\n\t\t}\n\n\t\t/**\n\t\t * Construct.\n\t\t */\n\t\t(function () {\n\t\t\t// Create meter element\n\t\t\tcreateMeter();\n\t\t\t// Start rendering\n\t\t\trequestRender();\n\t\t}());\n\t}\n\n\t// Expose the extend function\n\tFPSMeter.extend = extend;\n\n\t// Expose the FPSMeter class\n\twindow.FPSMeter = FPSMeter;\n\n\t// Default options\n\tFPSMeter.defaults = {\n\t\tinterval:  100,     // Update interval in milliseconds.\n\t\tsmoothing: 10,      // Spike smoothing strength. 1 means no smoothing.\n\t\tshow:      'fps',   // Whether to show 'fps', or 'ms' = frame duration in milliseconds.\n\t\ttoggleOn:  'click', // Toggle between show 'fps' and 'ms' on this event.\n\t\tdecimals:  1,       // Number of decimals in FPS number. 1 = 59.9, 2 = 59.94, ...\n\t\tmaxFps:    60,      // Max expected FPS value.\n\t\tthreshold: 100,     // Minimal tick reporting interval in milliseconds.\n\n\t\t// Meter position\n\t\tposition: 'absolute', // Meter position.\n\t\tzIndex:   10,         // Meter Z index.\n\t\tleft:     '5px',      // Meter left offset.\n\t\ttop:      '5px',      // Meter top offset.\n\t\tright:    'auto',     // Meter right offset.\n\t\tbottom:   'auto',     // Meter bottom offset.\n\t\tmargin:   '0 0 0 0',  // Meter margin. Helps with centering the counter when left: 50%;\n\n\t\t// Theme\n\t\ttheme: 'dark', // Meter theme. Build in: 'dark', 'light', 'transparent', 'colorful'.\n\t\theat:  0,      // Allow themes to use coloring by FPS heat. 0 FPS = red, maxFps = green.\n\n\t\t// Graph\n\t\tgraph:   0, // Whether to show history graph.\n\t\thistory: 20 // How many history states to show in a graph.\n\t};\n\n\t// Option names that trigger FPSMeter rebuild or reposition when modified\n\tvar rebuilders = [\n\t\t'toggleOn',\n\t\t'theme',\n\t\t'heat',\n\t\t'graph',\n\t\t'history'\n\t];\n\tvar repositioners = [\n\t\t'position',\n\t\t'zIndex',\n\t\t'left',\n\t\t'top',\n\t\t'right',\n\t\t'bottom',\n\t\t'margin'\n\t];\n}(window));\n;(function (w, FPSMeter, undefined) {\n\t'use strict';\n\n\t// Themes object\n\tFPSMeter.theme = {};\n\n\t// Base theme with layout, no colors\n\tvar base = FPSMeter.theme.base = {\n\t\theatmaps: [],\n\t\tcontainer: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tpadding: '5px',\n\t\t\tminWidth: '95px',\n\t\t\theight: '30px',\n\t\t\tlineHeight: '30px',\n\t\t\ttextAlign: 'right',\n\t\t\ttextShadow: 'none'\n\t\t},\n\t\tcount: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '24px',\n\t\t\tfontFamily: 'Consolas, Andale Mono, monospace',\n\t\t\tzIndex: 2\n\t\t},\n\t\tlegend: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '12px',\n\t\t\tlineHeight: '32px',\n\t\t\tfontFamily: 'sans-serif',\n\t\t\ttextAlign: 'left',\n\t\t\tzIndex: 2\n\t\t},\n\t\tgraph: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'relative',\n\t\t\tboxSizing: 'padding-box',\n\t\t\tMozBoxSizing: 'padding-box',\n\t\t\theight: '100%',\n\t\t\tzIndex: 1\n\t\t},\n\t\tcolumn: {\n\t\t\t// Settings\n\t\t\twidth: 4,\n\t\t\tspacing: 1,\n\t\t\theatOn: null,\n\t\t\theatmap: null\n\t\t}\n\t};\n\n\t// Dark theme\n\tFPSMeter.theme.dark = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.8\n\t\t}],\n\t\tcontainer: {\n\t\t\tbackground: '#222',\n\t\t\tcolor: '#fff',\n\t\t\tborder: '1px solid #1a1a1a',\n\t\t\ttextShadow: '1px 1px 0 #222'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#3f3f3f'\n\t\t}\n\t});\n\n\t// Light theme\n\tFPSMeter.theme.light = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tcolor: '#666',\n\t\t\tbackground: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(255,255,255,.5), -1px -1px 0 rgba(255,255,255,.5)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#eaeaea'\n\t\t}\n\t});\n\n\t// Colorful theme\n\tFPSMeter.theme.colorful = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.6\n\t\t}],\n\t\tcontainer: {\n\t\t\theatOn: 'backgroundColor',\n\t\t\tbackground: '#888',\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.2)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#777',\n\t\t\tbackgroundColor: 'rgba(0,0,0,.2)'\n\t\t}\n\t});\n\n\t// Transparent theme\n\tFPSMeter.theme.transparent = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tpadding: 0,\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.5)'\n\t\t},\n\t\tcount: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '40px'\n\t\t},\n\t\tlegend: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '42px'\n\t\t},\n\t\tgraph: {\n\t\t\theight: '40px'\n\t\t},\n\t\tcolumn: {\n\t\t\twidth: 5,\n\t\t\tbackground: '#999',\n\t\t\theatOn: 'backgroundColor',\n\t\t\topacity: 0.5\n\t\t}\n\t});\n}(window, FPSMeter));","import \"fpsmeter\";\n\nclass Engine {\n  constructor() {\n    this.content = document.querySelector(\".content\");\n    this.countLinks = this.content.querySelectorAll(\".selector > a\");\n\n    this.canvas = document.createElement(\"canvas\");\n\n    this.width = Math.min(this.content.clientWidth, 1000);\n    this.height = this.content.clientHeight * 0.75;\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n\n    this.mouseReader = this.canvas;\n    this.controls = { lockedX: false, lockedY: false };\n\n    this.minX = -2000;\n    this.maxX = 2000;\n    this.minY = -2000;\n    this.maxY = 2000;\n\n    this.currentXRange = [-100, 100];\n    this.currentYRange = [-100, 100];\n\n    this.needsAnimation = true;\n    this.initFpsmeter();\n    this.initSettings();\n    this.initControls();\n  }\n\n  addToDOM() {\n    this.content.appendChild(this.canvas);\n  }\n\n  initFpsmeter() {\n    this.meter = new window.FPSMeter(this.content, {\n      graph: 1,\n      heat: 1,\n      theme: \"light\",\n      history: 25,\n      top: \"-10px\",\n      left: `${this.width}px`,\n      transform: \"translateX(-100%)\",\n    });\n  }\n\n  initSettings() {\n    const count = JSON.parse(localStorage.getItem(\"count\"));\n    this.count = count || { index: 0, value: 1000 };\n    localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n    this.countLinks.forEach((link, index) => {\n      this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n      link.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.countLinks[this.count.index].classList.toggle(\"selected\", false);\n        this.count = { index: index, value: parseInt(link.innerText) };\n        this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n        localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n        this.render();\n      });\n    });\n\n    const controls = JSON.parse(localStorage.getItem(\"controls\"));\n    this.controls = controls || { lockedX: false, lockedY: false };\n    localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n\n    document.getElementById(\"lock-x\").checked = this.controls.lockedX;\n    document.getElementById(\"lock-y\").checked = this.controls.lockedY;\n\n    document.querySelector(\"#lock-x\").addEventListener(\"change\", (event) => {\n      this.controls.lockedX = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n    });\n\n    document.querySelector(\"#lock-y\").addEventListener(\"change\", (event) => {\n      this.controls.lockedY = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n    });\n  }\n\n  initControls() {\n    this.mouseReader.addEventListener(\n      \"wheel\",\n      (event) => {\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.wheelDelta / 50;\n          this.currentXRange[1] += event.wheelDelta / 50;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            // Zoom in limit\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.wheelDelta / 50;\n          this.currentYRange[1] += event.wheelDelta / 50;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            // Zoom in limit\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.needsAnimation = true;\n        this.updateSelectionWindowDisplay();\n        return false;\n      },\n      false\n    );\n\n    this.isMoving = false;\n    this.mouseReader.addEventListener(\n      \"mousedown\",\n      (event) => {\n        this.isMoving = true;\n      },\n      false\n    );\n\n    this.mouseReader.addEventListener(\n      \"mousemove\",\n      (event) => {\n        if (!this.isMoving) {\n          return false;\n        }\n\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.movementX;\n          this.currentXRange[1] -= event.movementX;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.movementY;\n          this.currentYRange[1] -= event.movementY;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.needsAnimation = true;\n        this.updateSelectionWindowDisplay();\n      },\n      false\n    );\n\n    this.mouseReader.addEventListener(\"mouseup\", (event) => {\n      this.isMoving = false;\n    });\n    this.mouseReader.addEventListener(\"mouseleave\", (event) => {\n      this.isMoving = false;\n    });\n  }\n\n  updateSelectionWindowDisplay() {\n    // This may slow down the rendering since it needs to call the DOM before animating, may need to remove for true benchmark\n    document.querySelector(\n      \".selection-window\"\n    ).textContent = `[${this.currentXRange[0].toFixed(\n      2\n    )}, ${this.currentXRange[1].toFixed(2)}] x [${this.currentYRange[0].toFixed(\n      2\n    )}, ${this.currentYRange[1].toFixed(2)}]`;\n  }\n\n  render() {}\n}\n\nexport default Engine;\n","function scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nexport { scale, initShaderProgram, loadShader, rgbToHex };\n","const vertexShader = `\n  attribute vec4 aVertexPosition;\n\n  void main() {\n      gl_Position = aVertexPosition;\n  }\n`;\n\nconst fragmentShader = `\n  precision mediump float;\n  uniform float uGridSize;\n  uniform vec4 viewport;\n  void main() {\n    vec4 ndcPos;\n    // Reverse calculations from window space to clip space (normalized device coordinates)\n    ndcPos.xy = ((2.0 * gl_FragCoord.xy) - (2.0 * viewport.xy)) / (viewport.zw) - 1.0;\n    ndcPos.xy = ndcPos.xy - mod(ndcPos.xy, 1.0 / uGridSize);\n    gl_FragColor = vec4(ndcPos.x/2.0 + 0.5 , 0, ndcPos.y/2.0 + 0.5, 1.0);\n  }\n`;\n\nexport { vertexShader, fragmentShader };\n","import Engine from \"./engine\";\nimport { scale, initShaderProgram } from \"./utilities\";\nimport { vertexShader, fragmentShader } from \"./webgl.js\";\n\n// Largely taken from\n// https://github.com/mdn/webgl-examples/blob/gh-pages/tutorial/sample2/webgl-demo.js\n\nclass WebGLCanvasEngine extends Engine {\n  constructor() {\n    super();\n\n    this.gl = this.canvas.getContext(\"webgl\");\n\n    if (!this.gl) {\n      console.error(\"Unable to initialize WebGL!\");\n      return;\n    }\n  }\n\n  animate() {\n    if (!this.needsAnimation) {\n      this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n      this.meter.tick();\n      return;\n    }\n\n    this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n    this.gl.vertexAttribPointer(\n      this.programInfo.attribLocations.vertexPosition,\n      2, // numComponents\n      this.gl.FLOAT, // type\n      false, // normalize\n      0, // stride\n      0 // offset\n    );\n    this.gl.enableVertexAttribArray(\n      this.programInfo.attribLocations.vertexPosition\n    );\n\n    this.gl.useProgram(this.programInfo.program);\n\n    this.gl.uniform1f(\n      this.programInfo.uniformLocations.gridSize,\n      Math.sqrt(this.count.value) / 2\n    );\n    this.gl.uniform4fv(\n      this.programInfo.uniformLocations.viewport,\n      this.gl.getParameter(this.gl.VIEWPORT)\n    );\n\n    this.gl.drawArrays(\n      this.gl.TRIANGLES,\n      0, // stride\n      this.vertexCount // vertex count\n    );\n\n    const viewport = this.getWebGLViewport();\n\n    this.gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n    this.meter.tick();\n  }\n\n  render() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n\n    this.shaderProgram = initShaderProgram(\n      this.gl,\n      vertexShader,\n      fragmentShader\n    );\n\n    this.programInfo = {\n      program: this.shaderProgram,\n      attribLocations: {\n        vertexPosition: this.gl.getAttribLocation(\n          this.shaderProgram,\n          \"aVertexPosition\"\n        ),\n      },\n      uniformLocations: {\n        gridSize: this.gl.getUniformLocation(this.shaderProgram, \"uGridSize\"),\n        viewport: this.gl.getUniformLocation(this.shaderProgram, \"viewport\"),\n      },\n    };\n    this.positionBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.positionBuffer);\n\n    const scaleX = scale([this.minX, this.maxX], [-1, 1]);\n    const scaleY = scale([this.minY, this.maxY], [-1, 1]);\n    const positions = [];\n    for (let x = this.minX; x < this.maxX; x += this.trueBoxWidth) {\n      for (let y = this.minY; y < this.maxY; y += this.trueBoxHeight) {\n        positions.push(\n          scaleX(x),\n          scaleY(y),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y + this.trueBoxHeight)\n        );\n\n        positions.push(\n          scaleX(x),\n          scaleY(y),\n          scaleX(x),\n          scaleY(y + this.trueBoxHeight),\n          scaleX(x + this.trueBoxWidth),\n          scaleY(y + this.trueBoxHeight)\n        );\n      }\n    }\n\n    this.vertexCount = positions.length / 2;\n\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array(positions),\n      this.gl.STATIC_DRAW\n    );\n\n    if (this.lastFrame) {\n      cancelAnimationFrame(this.lastFrame);\n    }\n    this.needsAnimation = true;\n    this.animate();\n  }\n\n  getWebGLViewport() {\n    // Calculate appropriate webgl viewport given current selection window\n    const scaleXWindowSpace = scale([this.minX, this.maxX], [0, -this.width]);\n    const scaleYWindowSpace = scale([this.minY, this.maxY], [0, -this.height]);\n\n    const toReturnX = scaleXWindowSpace(this.currentXRange[0]);\n    const toReturnY = scaleYWindowSpace(this.currentYRange[0]);\n\n    const windowWidth = this.currentXRange[1] - this.currentXRange[0];\n    const windowHeight = this.currentYRange[1] - this.currentYRange[0];\n\n    return [\n      toReturnX,\n      toReturnY,\n      ((this.maxX - this.minX) / windowWidth) * this.width,\n      ((this.maxY - this.minY) / windowHeight) * this.height,\n    ];\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const engine = new WebGLCanvasEngine();\n  engine.addToDOM();\n\n  engine.render();\n});\n\nexport { vertexShader, fragmentShader };\n"]}