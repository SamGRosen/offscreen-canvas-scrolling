{"version":3,"sources":["../../node_modules/fpsmeter/dist/fpsmeter.js","../scripts/handler.js","../../node_modules/kdbush/src/sort.js","../../node_modules/kdbush/src/range.js","../../node_modules/kdbush/src/within.js","../../node_modules/kdbush/src/index.js","../../node_modules/supercluster/index.js","../../node_modules/regenerator-runtime/runtime.js","../../node_modules/regenerator-runtime/runtime-module.js","../scripts/utilities.js","../scripts/drawer.js","../scripts/base-canvas-drawer.js","../scripts/canvas.js"],"names":["Handler","content","document","querySelector","countLinks","querySelectorAll","canvas","createElement","width","Math","min","clientWidth","height","clientHeight","mouseReader","controls","lockedX","lockedY","minX","maxX","minY","maxY","currentXRange","currentYRange","needsAnimation","initFpsmeter","initSettings","initControls","Drawer","extraArgs","drawer","getState","tick","meter","appendChild","window","FPSMeter","graph","heat","theme","history","top","left","transform","count","JSON","parse","localStorage","getItem","index","value","setItem","stringify","forEach","link","classList","toggle","addEventListener","event","preventDefault","stopPropagation","parseInt","innerText","sendDrawerState","forceDrawerRender","getElementById","checked","target","dataset","previousX","wheelDelta","max","previousY","updateSelectionWindowDisplay","isMoving","movementX","movementY","textContent","toFixed","receiveState","render","sortKD","ids","coords","nodeSize","right","depth","m","select","k","inc","n","z","log","s","exp","sd","sqrt","floor","t","i","j","swapItem","swap","arr","tmp","range","stack","length","result","x","y","axis","pop","push","nextAxis","within","qx","qy","r","r2","sqDist","ax","ay","bx","by","dx","dy","defaultGetX","p","defaultGetY","KDBush","constructor","points","getX","getY","ArrayType","Float64Array","IndexArrayType","Uint16Array","Uint32Array","defaultOptions","minZoom","maxZoom","minPoints","radius","extent","generateId","reduce","map","props","fround","Float32Array","Supercluster","options","extend","Object","create","trees","Array","load","console","time","timerId","clusters","geometry","createPointCluster","timeEnd","now","Date","_cluster","getClusters","bbox","zoom","minLng","minLat","maxLng","maxLat","easternHem","westernHem","concat","tree","_limitZoom","lngX","latY","id","c","numPoints","getClusterJSON","getChildren","clusterId","originId","_getOriginId","originZoom","_getOriginZoom","errorMsg","Error","origin","pow","children","parentId","getLeaves","limit","offset","leaves","_appendLeaves","getTile","z2","bottom","tile","features","_addTileFeatures","getClusterExpansionZoom","expansionZoom","properties","cluster_id","skipped","child","cluster","point_count","isCluster","tags","px","py","getClusterProperties","coordinates","f","type","round","undefined","neighborIds","numPointsOrigin","neighborId","b","wx","wy","clusterProperties","_map","numPoints2","createCluster","point","clone","original","Infinity","xLng","yLat","abbrev","point_count_abbreviated","lng","lat","sin","PI","y2","atan","dest","src","scale","domain","domainLength","slope","intercept","loadShader","gl","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","hex","toString","rgbToHex","g","Number","createMessanger","clazz","self","e","data","SuperclusterMapper","xRange","yRange","xScale","yScale","xScaleInverse","yScaleInverse","zoomLevel","inLatLong","getRandomColor","random","lastFrame","cancelAnimationFrame","renderSquares","renderRandom","renderJittered","renderTSNE","BaseCanvasDrawer","ctx","getContext","requestAnimationFrame","animateSquares","bind","clearRect","scaleX","scaleY","currBoxWidth","trueBoxWidth","currBoxHeight","trueBoxHeight","gridStartX","gridEndX","gridStartY","gridEndY","currX","currY","fillStyle","scaleRed","scaleBlue","fillRect","boxes","animateRandom","pointsToDraw","clusterMap","color","handler","addToDOM"],"mappings":"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","file":"canvas.6e0c2115.js","sourceRoot":"../src/pages","sourcesContent":["/*!\n * FPSMeter 0.3.1 - 9th May 2013\n * https://github.com/Darsain/fpsmeter\n *\n * Licensed under the MIT license.\n * http://opensource.org/licenses/MIT\n */\n;(function (w, undefined) {\n\t'use strict';\n\n\t/**\n\t * Create a new element.\n\t *\n\t * @param  {String} name Element type name.\n\t *\n\t * @return {Element}\n\t */\n\tfunction newEl(name) {\n\t\treturn document.createElement(name);\n\t}\n\n\t/**\n\t * Apply theme CSS properties to element.\n\t *\n\t * @param  {Element} element DOM element.\n\t * @param  {Object}  theme   Theme object.\n\t *\n\t * @return {Element}\n\t */\n\tfunction applyTheme(element, theme) {\n\t\tfor (var name in theme) {\n\t\t\ttry {\n\t\t\t\telement.style[name] = theme[name];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Return type of the value.\n\t *\n\t * @param  {Mixed} value\n\t *\n\t * @return {String}\n\t */\n\tfunction type(value) {\n\t\tif (value == null) {\n\t\t\treturn String(value);\n\t\t}\n\n\t\tif (typeof value === 'object' || typeof value === 'function') {\n\t\t\treturn Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLowerCase() || 'object';\n\t\t}\n\n\t\treturn typeof value;\n\t}\n\n\t/**\n\t * Check whether the value is in an array.\n\t *\n\t * @param  {Mixed} value\n\t * @param  {Array} array\n\t *\n\t * @return {Integer} Array index or -1 when not found.\n\t */\n\tfunction inArray(value, array) {\n\t\tif (type(array) !== 'array') {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.indexOf) {\n\t\t\treturn array.indexOf(value);\n\t\t}\n\t\tfor (var i = 0, l = array.length; i < l; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t * Poor man's deep object extend.\n\t *\n\t * Example:\n\t *   extend({}, defaults, options);\n\t *\n\t * @return {Void}\n\t */\n\tfunction extend() {\n\t\tvar args = arguments;\n\t\tfor (var key in args[1]) {\n\t\t\tif (args[1].hasOwnProperty(key)) {\n\t\t\t\tswitch (type(args[1][key])) {\n\t\t\t\t\tcase 'object':\n\t\t\t\t\t\targs[0][key] = extend({}, args[0][key], args[1][key]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array':\n\t\t\t\t\t\targs[0][key] = args[1][key].slice(0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\targs[0][key] = args[1][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn args.length > 2 ?\n\t\t\textend.apply(null, [args[0]].concat(Array.prototype.slice.call(args, 2))) :\n\t\t\targs[0];\n\t}\n\n\t/**\n\t * Convert HSL color to HEX string.\n\t *\n\t * @param  {Array} hsl Array with [hue, saturation, lightness].\n\t *\n\t * @return {Array} Array with [red, green, blue].\n\t */\n\tfunction hslToHex(h, s, l) {\n\t\tvar r, g, b;\n\t\tvar v, min, sv, sextant, fract, vsf;\n\n\t\tif (l <= 0.5) {\n\t\t\tv = l * (1 + s);\n\t\t} else {\n\t\t\tv = l + s - l * s;\n\t\t}\n\n\t\tif (v === 0) {\n\t\t\treturn '#000';\n\t\t} else {\n\t\t\tmin = 2 * l - v;\n\t\t\tsv = (v - min) / v;\n\t\t\th = 6 * h;\n\t\t\tsextant = Math.floor(h);\n\t\t\tfract = h - sextant;\n\t\t\tvsf = v * sv * fract;\n\t\t\tif (sextant === 0 || sextant === 6) {\n\t\t\t\tr = v;\n\t\t\t\tg = min + vsf;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 1) {\n\t\t\t\tr = v - vsf;\n\t\t\t\tg = v;\n\t\t\t\tb = min;\n\t\t\t} else if (sextant === 2) {\n\t\t\t\tr = min;\n\t\t\t\tg = v;\n\t\t\t\tb = min + vsf;\n\t\t\t} else if (sextant === 3) {\n\t\t\t\tr = min;\n\t\t\t\tg = v - vsf;\n\t\t\t\tb = v;\n\t\t\t} else if (sextant === 4) {\n\t\t\t\tr = min + vsf;\n\t\t\t\tg = min;\n\t\t\t\tb = v;\n\t\t\t} else {\n\t\t\t\tr = v;\n\t\t\t\tg = min;\n\t\t\t\tb = v - vsf;\n\t\t\t}\n\t\t\treturn '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for hslToHex.\n\t */\n\tfunction componentToHex(c) {\n\t\tc = Math.round(c * 255).toString(16);\n\t\treturn c.length === 1 ? '0' + c : c;\n\t}\n\n\t/**\n\t * Manage element event listeners.\n\t *\n\t * @param  {Node}     element\n\t * @param  {Event}    eventName\n\t * @param  {Function} handler\n\t * @param  {Bool}     remove\n\t *\n\t * @return {Void}\n\t */\n\tfunction listener(element, eventName, handler, remove) {\n\t\tif (element.addEventListener) {\n\t\t\telement[remove ? 'removeEventListener' : 'addEventListener'](eventName, handler, false);\n\t\t} else if (element.attachEvent) {\n\t\t\telement[remove ? 'detachEvent' : 'attachEvent']('on' + eventName, handler);\n\t\t}\n\t}\n\n\t// Preferred timing funtion\n\tvar getTime;\n\t(function () {\n\t\tvar perf = w.performance;\n\t\tif (perf && (perf.now || perf.webkitNow)) {\n\t\t\tvar perfNow = perf.now ? 'now' : 'webkitNow';\n\t\t\tgetTime = perf[perfNow].bind(perf);\n\t\t} else {\n\t\t\tgetTime = function () {\n\t\t\t\treturn +new Date();\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Local WindowAnimationTiming interface polyfill\n\tvar cAF = w.cancelAnimationFrame || w.cancelRequestAnimationFrame;\n\tvar rAF = w.requestAnimationFrame;\n\t(function () {\n\t\tvar vendors = ['moz', 'webkit', 'o'];\n\t\tvar lastTime = 0;\n\n\t\t// For a more accurate WindowAnimationTiming interface implementation, ditch the native\n\t\t// requestAnimationFrame when cancelAnimationFrame is not present (older versions of Firefox)\n\t\tfor (var i = 0, l = vendors.length; i < l && !cAF; ++i) {\n\t\t\tcAF = w[vendors[i]+'CancelAnimationFrame'] || w[vendors[i]+'CancelRequestAnimationFrame'];\n\t\t\trAF = cAF && w[vendors[i]+'RequestAnimationFrame'];\n\t\t}\n\n\t\tif (!cAF) {\n\t\t\trAF = function (callback) {\n\t\t\t\tvar currTime = getTime();\n\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\treturn w.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\n\t\t\t};\n\n\t\t\tcAF = function (id) {\n\t\t\t\tclearTimeout(id);\n\t\t\t};\n\t\t}\n\t}());\n\n\t// Property name for assigning element text content\n\tvar textProp = type(document.createElement('div').textContent) === 'string' ? 'textContent' : 'innerText';\n\n\t/**\n\t * FPSMeter class.\n\t *\n\t * @param {Element} anchor  Element to append the meter to. Default is document.body.\n\t * @param {Object}  options Object with options.\n\t */\n\tfunction FPSMeter(anchor, options) {\n\t\t// Optional arguments\n\t\tif (type(anchor) === 'object' && anchor.nodeType === undefined) {\n\t\t\toptions = anchor;\n\t\t\tanchor = document.body;\n\t\t}\n\t\tif (!anchor) {\n\t\t\tanchor = document.body;\n\t\t}\n\n\t\t// Private properties\n\t\tvar self = this;\n\t\tvar o = extend({}, FPSMeter.defaults, options || {});\n\n\t\tvar el = {};\n\t\tvar cols = [];\n\t\tvar theme, heatmaps;\n\t\tvar heatDepth = 100;\n\t\tvar heating = [];\n\n\t\tvar thisFrameTime = 0;\n\t\tvar frameTime = o.threshold;\n\t\tvar frameStart = 0;\n\t\tvar lastLoop = getTime() - frameTime;\n\t\tvar time;\n\n\t\tvar fpsHistory = [];\n\t\tvar durationHistory = [];\n\n\t\tvar frameID, renderID;\n\t\tvar showFps = o.show === 'fps';\n\t\tvar graphHeight, count, i, j;\n\n\t\t// Exposed properties\n\t\tself.options = o;\n\t\tself.fps = 0;\n\t\tself.duration = 0;\n\t\tself.isPaused = 0;\n\n\t\t/**\n\t\t * Tick start for measuring the actual rendering duration.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tickStart = function () {\n\t\t\tframeStart = getTime();\n\t\t};\n\n\t\t/**\n\t\t * FPS tick.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.tick = function () {\n\t\t\ttime = getTime();\n\t\t\tthisFrameTime = time - lastLoop;\n\t\t\tframeTime += (thisFrameTime - frameTime) / o.smoothing;\n\t\t\tself.fps = 1000 / frameTime;\n\t\t\tself.duration = frameStart < lastLoop ? frameTime : time - frameStart;\n\t\t\tlastLoop = time;\n\t\t};\n\n\t\t/**\n\t\t * Pause display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.pause = function () {\n\t\t\tif (frameID) {\n\t\t\t\tself.isPaused = 1;\n\t\t\t\tclearTimeout(frameID);\n\t\t\t\tcAF(frameID);\n\t\t\t\tcAF(renderID);\n\t\t\t\tframeID = renderID = 0;\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Resume display rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.resume = function () {\n\t\t\tif (!frameID) {\n\t\t\t\tself.isPaused = 0;\n\t\t\t\trequestRender();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Update options.\n\t\t *\n\t\t * @param {String} name  Option name.\n\t\t * @param {Mixed}  value New value.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.set = function (name, value) {\n\t\t\to[name] = value;\n\t\t\tshowFps = o.show === 'fps';\n\n\t\t\t// Rebuild or reposition elements when specific option has been updated\n\t\t\tif (inArray(name, rebuilders) !== -1) {\n\t\t\t\tcreateMeter();\n\t\t\t}\n\t\t\tif (inArray(name, repositioners) !== -1) {\n\t\t\t\tpositionMeter();\n\t\t\t}\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into rendering duration mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showDuration = function () {\n\t\t\tself.set('show', 'ms');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Change meter into FPS mode.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.showFps = function () {\n\t\t\tself.set('show', 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Toggles between show: 'fps' and show: 'duration'.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.toggle = function () {\n\t\t\tself.set('show', showFps ? 'ms' : 'fps');\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Hide the FPSMeter. Also pauses the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.hide = function () {\n\t\t\tself.pause();\n\t\t\tel.container.style.display = 'none';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Show the FPSMeter. Also resumes the rendering.\n\t\t *\n\t\t * @return {Object} FPSMeter instance.\n\t\t */\n\t\tself.show = function () {\n\t\t\tself.resume();\n\t\t\tel.container.style.display = 'block';\n\t\t\treturn self;\n\t\t};\n\n\t\t/**\n\t\t * Check the current FPS and save it in history.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction historyTick() {\n\t\t\tfor (i = o.history; i--;) {\n\t\t\t\tfpsHistory[i] = i === 0 ? self.fps : fpsHistory[i-1];\n\t\t\t\tdurationHistory[i] = i === 0 ? self.duration : durationHistory[i-1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns heat hex color based on values passed.\n\t\t *\n\t\t * @param  {Integer} heatmap\n\t\t * @param  {Integer} value\n\t\t * @param  {Integer} min\n\t\t * @param  {Integer} max\n\t\t *\n\t\t * @return {Integer}\n\t\t */\n\t\tfunction getHeat(heatmap, value, min, max) {\n\t\t\treturn heatmaps[0|heatmap][Math.round(Math.min((value - min) / (max - min) * heatDepth, heatDepth))];\n\t\t}\n\n\t\t/**\n\t\t * Update counter number and legend.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction updateCounter() {\n\t\t\t// Update legend only when changed\n\t\t\tif (el.legend.fps !== showFps) {\n\t\t\t\tel.legend.fps = showFps;\n\t\t\t\tel.legend[textProp] = showFps ? 'FPS' : 'ms';\n\t\t\t}\n\t\t\t// Update counter with a nicely formated & readable number\n\t\t\tcount = showFps ? self.fps : self.duration;\n\t\t\tel.count[textProp] = count > 999 ? '999+' : count.toFixed(count > 99 ? 0 : o.decimals);\n\t\t}\n\n\t\t/**\n\t\t * Render current FPS state.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction render() {\n\t\t\ttime = getTime();\n\t\t\t// If renderer stopped reporting, do a simulated drop to 0 fps\n\t\t\tif (lastLoop < time - o.threshold) {\n\t\t\t\tself.fps -= self.fps / Math.max(1, o.smoothing * 60 / o.interval);\n\t\t\t\tself.duration = 1000 / self.fps;\n\t\t\t}\n\n\t\t\thistoryTick();\n\t\t\tupdateCounter();\n\n\t\t\t// Apply heat to elements\n\t\t\tif (o.heat) {\n\t\t\t\tif (heating.length) {\n\t\t\t\t\tfor (i = heating.length; i--;) {\n\t\t\t\t\t\theating[i].el.style[theme[heating[i].name].heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.fps, 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme[heating[i].name].heatmap, self.duration, o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.graph && theme.column.heatOn) {\n\t\t\t\t\tfor (i = cols.length; i--;) {\n\t\t\t\t\t\tcols[i].style[theme.column.heatOn] = showFps ?\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, fpsHistory[i], 0, o.maxFps) :\n\t\t\t\t\t\t\tgetHeat(theme.column.heatmap, durationHistory[i], o.threshold, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update graph columns height\n\t\t\tif (el.graph) {\n\t\t\t\tfor (j = 0; j < o.history; j++) {\n\t\t\t\t\tcols[j].style.height = (showFps ?\n\t\t\t\t\t\t(fpsHistory[j] ? Math.round(graphHeight / o.maxFps * Math.min(fpsHistory[j], o.maxFps)) : 0) :\n\t\t\t\t\t\t(durationHistory[j] ? Math.round(graphHeight / o.threshold * Math.min(durationHistory[j], o.threshold)) : 0)\n\t\t\t\t\t) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Request rendering loop.\n\t\t *\n\t\t * @return {Int} Animation frame index.\n\t\t */\n\t\tfunction requestRender() {\n\t\t\tif (o.interval < 20) {\n\t\t\t\tframeID = rAF(requestRender);\n\t\t\t\trender();\n\t\t\t} else {\n\t\t\t\tframeID = setTimeout(requestRender, o.interval);\n\t\t\t\trenderID = rAF(render);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Meter events handler.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction eventHandler(event) {\n\t\t\tevent = event || window.event;\n\t\t\tif (event.preventDefault) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t} else {\n\t\t\t\tevent.returnValue = false;\n\t\t\t\tevent.cancelBubble = true;\n\t\t\t}\n\t\t\tself.toggle();\n\t\t}\n\n\t\t/**\n\t\t * Destroys the current FPSMeter instance.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tself.destroy = function () {\n\t\t\t// Stop rendering\n\t\t\tself.pause();\n\t\t\t// Remove elements\n\t\t\tremoveMeter();\n\t\t\t// Stop listening\n\t\t\tself.tick = self.tickStart = function () {};\n\t\t};\n\n\t\t/**\n\t\t * Remove meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction removeMeter() {\n\t\t\t// Unbind listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler, 1);\n\t\t\t}\n\t\t\t// Detach element\n\t\t\tanchor.removeChild(el.container);\n\t\t}\n\n\t\t/**\n\t\t * Sets the theme, and generates heatmaps when needed.\n\t\t */\n\t\tfunction setTheme() {\n\t\t\ttheme = FPSMeter.theme[o.theme];\n\n\t\t\t// Generate heatmaps\n\t\t\theatmaps = theme.compiledHeatmaps || [];\n\t\t\tif (!heatmaps.length && theme.heatmaps.length) {\n\t\t\t\tfor (j = 0; j < theme.heatmaps.length; j++) {\n\t\t\t\t\theatmaps[j] = [];\n\t\t\t\t\tfor (i = 0; i <= heatDepth; i++) {\n\t\t\t\t\t\theatmaps[j][i] = hslToHex(0.33 / heatDepth * i, theme.heatmaps[j].saturation, theme.heatmaps[j].lightness);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.compiledHeatmaps = heatmaps;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates and attaches the meter element.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction createMeter() {\n\t\t\t// Remove old meter if present\n\t\t\tif (el.container) {\n\t\t\t\tremoveMeter();\n\t\t\t}\n\n\t\t\t// Set theme\n\t\t\tsetTheme();\n\n\t\t\t// Create elements\n\t\t\tel.container = applyTheme(newEl('div'), theme.container);\n\t\t\tel.count = el.container.appendChild(applyTheme(newEl('div'), theme.count));\n\t\t\tel.legend = el.container.appendChild(applyTheme(newEl('div'), theme.legend));\n\t\t\tel.graph = o.graph ? el.container.appendChild(applyTheme(newEl('div'), theme.graph)) : 0;\n\n\t\t\t// Add elements to heating array\n\t\t\theating.length = 0;\n\t\t\tfor (var key in el) {\n\t\t\t\tif (el[key] && theme[key].heatOn) {\n\t\t\t\t\theating.push({\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tel: el[key]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Graph\n\t\t\tcols.length = 0;\n\t\t\tif (el.graph) {\n\t\t\t\t// Create graph\n\t\t\t\tel.graph.style.width = (o.history * theme.column.width + (o.history - 1) * theme.column.spacing) + 'px';\n\n\t\t\t\t// Add columns\n\t\t\t\tfor (i = 0; i < o.history; i++) {\n\t\t\t\t\tcols[i] = el.graph.appendChild(applyTheme(newEl('div'), theme.column));\n\t\t\t\t\tcols[i].style.position = 'absolute';\n\t\t\t\t\tcols[i].style.bottom = 0;\n\t\t\t\t\tcols[i].style.right = (i * theme.column.width + i * theme.column.spacing) + 'px';\n\t\t\t\t\tcols[i].style.width = theme.column.width + 'px';\n\t\t\t\t\tcols[i].style.height = '0px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set the initial state\n\t\t\tpositionMeter();\n\t\t\tupdateCounter();\n\n\t\t\t// Append container to anchor\n\t\t\tanchor.appendChild(el.container);\n\n\t\t\t// Retrieve graph height after it was appended to DOM\n\t\t\tif (el.graph) {\n\t\t\t\tgraphHeight = el.graph.clientHeight;\n\t\t\t}\n\n\t\t\t// Add event listeners\n\t\t\tif (o.toggleOn) {\n\t\t\t\tif (o.toggleOn === 'click') {\n\t\t\t\t\tel.container.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tlistener(el.container, o.toggleOn, eventHandler);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Positions the meter based on options.\n\t\t *\n\t\t * @return {Void}\n\t\t */\n\t\tfunction positionMeter() {\n\t\t\tapplyTheme(el.container, o);\n\t\t}\n\n\t\t/**\n\t\t * Construct.\n\t\t */\n\t\t(function () {\n\t\t\t// Create meter element\n\t\t\tcreateMeter();\n\t\t\t// Start rendering\n\t\t\trequestRender();\n\t\t}());\n\t}\n\n\t// Expose the extend function\n\tFPSMeter.extend = extend;\n\n\t// Expose the FPSMeter class\n\twindow.FPSMeter = FPSMeter;\n\n\t// Default options\n\tFPSMeter.defaults = {\n\t\tinterval:  100,     // Update interval in milliseconds.\n\t\tsmoothing: 10,      // Spike smoothing strength. 1 means no smoothing.\n\t\tshow:      'fps',   // Whether to show 'fps', or 'ms' = frame duration in milliseconds.\n\t\ttoggleOn:  'click', // Toggle between show 'fps' and 'ms' on this event.\n\t\tdecimals:  1,       // Number of decimals in FPS number. 1 = 59.9, 2 = 59.94, ...\n\t\tmaxFps:    60,      // Max expected FPS value.\n\t\tthreshold: 100,     // Minimal tick reporting interval in milliseconds.\n\n\t\t// Meter position\n\t\tposition: 'absolute', // Meter position.\n\t\tzIndex:   10,         // Meter Z index.\n\t\tleft:     '5px',      // Meter left offset.\n\t\ttop:      '5px',      // Meter top offset.\n\t\tright:    'auto',     // Meter right offset.\n\t\tbottom:   'auto',     // Meter bottom offset.\n\t\tmargin:   '0 0 0 0',  // Meter margin. Helps with centering the counter when left: 50%;\n\n\t\t// Theme\n\t\ttheme: 'dark', // Meter theme. Build in: 'dark', 'light', 'transparent', 'colorful'.\n\t\theat:  0,      // Allow themes to use coloring by FPS heat. 0 FPS = red, maxFps = green.\n\n\t\t// Graph\n\t\tgraph:   0, // Whether to show history graph.\n\t\thistory: 20 // How many history states to show in a graph.\n\t};\n\n\t// Option names that trigger FPSMeter rebuild or reposition when modified\n\tvar rebuilders = [\n\t\t'toggleOn',\n\t\t'theme',\n\t\t'heat',\n\t\t'graph',\n\t\t'history'\n\t];\n\tvar repositioners = [\n\t\t'position',\n\t\t'zIndex',\n\t\t'left',\n\t\t'top',\n\t\t'right',\n\t\t'bottom',\n\t\t'margin'\n\t];\n}(window));\n;(function (w, FPSMeter, undefined) {\n\t'use strict';\n\n\t// Themes object\n\tFPSMeter.theme = {};\n\n\t// Base theme with layout, no colors\n\tvar base = FPSMeter.theme.base = {\n\t\theatmaps: [],\n\t\tcontainer: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tpadding: '5px',\n\t\t\tminWidth: '95px',\n\t\t\theight: '30px',\n\t\t\tlineHeight: '30px',\n\t\t\ttextAlign: 'right',\n\t\t\ttextShadow: 'none'\n\t\t},\n\t\tcount: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '24px',\n\t\t\tfontFamily: 'Consolas, Andale Mono, monospace',\n\t\t\tzIndex: 2\n\t\t},\n\t\tlegend: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tpadding: '5px 10px',\n\t\t\theight: '30px',\n\t\t\tfontSize: '12px',\n\t\t\tlineHeight: '32px',\n\t\t\tfontFamily: 'sans-serif',\n\t\t\ttextAlign: 'left',\n\t\t\tzIndex: 2\n\t\t},\n\t\tgraph: {\n\t\t\t// Settings\n\t\t\theatOn: null,\n\t\t\theatmap: null,\n\n\t\t\t// Styles\n\t\t\tposition: 'relative',\n\t\t\tboxSizing: 'padding-box',\n\t\t\tMozBoxSizing: 'padding-box',\n\t\t\theight: '100%',\n\t\t\tzIndex: 1\n\t\t},\n\t\tcolumn: {\n\t\t\t// Settings\n\t\t\twidth: 4,\n\t\t\tspacing: 1,\n\t\t\theatOn: null,\n\t\t\theatmap: null\n\t\t}\n\t};\n\n\t// Dark theme\n\tFPSMeter.theme.dark = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.8\n\t\t}],\n\t\tcontainer: {\n\t\t\tbackground: '#222',\n\t\t\tcolor: '#fff',\n\t\t\tborder: '1px solid #1a1a1a',\n\t\t\ttextShadow: '1px 1px 0 #222'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#3f3f3f'\n\t\t}\n\t});\n\n\t// Light theme\n\tFPSMeter.theme.light = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tcolor: '#666',\n\t\t\tbackground: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(255,255,255,.5), -1px -1px 0 rgba(255,255,255,.5)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcount: {\n\t\t\theatOn: 'color'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#eaeaea'\n\t\t}\n\t});\n\n\t// Colorful theme\n\tFPSMeter.theme.colorful = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.5,\n\t\t\tlightness: 0.6\n\t\t}],\n\t\tcontainer: {\n\t\t\theatOn: 'backgroundColor',\n\t\t\tbackground: '#888',\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.2)',\n\t\t\tboxShadow: '0 0 0 1px rgba(0,0,0,.1)'\n\t\t},\n\t\tcolumn: {\n\t\t\tbackground: '#777',\n\t\t\tbackgroundColor: 'rgba(0,0,0,.2)'\n\t\t}\n\t});\n\n\t// Transparent theme\n\tFPSMeter.theme.transparent = FPSMeter.extend({}, base, {\n\t\theatmaps: [{\n\t\t\tsaturation: 0.8,\n\t\t\tlightness: 0.5\n\t\t}],\n\t\tcontainer: {\n\t\t\tpadding: 0,\n\t\t\tcolor: '#fff',\n\t\t\ttextShadow: '1px 1px 0 rgba(0,0,0,.5)'\n\t\t},\n\t\tcount: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '40px'\n\t\t},\n\t\tlegend: {\n\t\t\tpadding: '0 5px',\n\t\t\theight: '40px',\n\t\t\tlineHeight: '42px'\n\t\t},\n\t\tgraph: {\n\t\t\theight: '40px'\n\t\t},\n\t\tcolumn: {\n\t\t\twidth: 5,\n\t\t\tbackground: '#999',\n\t\t\theatOn: 'backgroundColor',\n\t\t\topacity: 0.5\n\t\t}\n\t});\n}(window, FPSMeter));","import \"fpsmeter\";\n\nclass Handler {\n  constructor() {\n    this.content = document.querySelector(\".content\");\n    this.countLinks = this.content.querySelectorAll(\".selector > a\");\n    this.canvas = document.createElement(\"canvas\");\n\n    this.width = Math.min(this.content.clientWidth, 1000);\n    this.height = this.content.clientHeight * 0.75;\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n\n    this.mouseReader = this.canvas;\n    this.controls = { lockedX: false, lockedY: false };\n\n    this.minX = -2000;\n    this.maxX = 2000;\n    this.minY = -2000;\n    this.maxY = 2000;\n\n    this.currentXRange = [-100, 100];\n    this.currentYRange = [-100, 100];\n\n    this.needsAnimation = true;\n    this.initFpsmeter();\n    this.initSettings();\n    this.initControls();\n  }\n\n  addToDOM(Drawer, extraArgs) {\n    this.drawer = new Drawer(\n      {\n        canvas: this.canvas,\n        ...this.getState(),\n      },\n      extraArgs\n    );\n\n    // Set tick for fps meter, allows drawer to have no knowledge of handler\n    this.drawer.tick = () => this.meter.tick();\n    this.content.appendChild(this.canvas);\n  }\n\n  initFpsmeter() {\n    this.meter = new window.FPSMeter(this.content, {\n      graph: 1,\n      heat: 1,\n      theme: \"light\",\n      history: 25,\n      top: \"-10px\",\n      left: `${this.width}px`,\n      transform: \"translateX(-100%)\",\n    });\n  }\n\n  initSettings() {\n    const count = JSON.parse(localStorage.getItem(\"count\"));\n    this.count = count || { index: 0, value: 1000 };\n    localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n    this.countLinks.forEach((link, index) => {\n      this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n      link.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.countLinks[this.count.index].classList.toggle(\"selected\", false);\n        this.count = { index: index, value: parseInt(link.innerText) };\n        this.countLinks[this.count.index].classList.toggle(\"selected\", true);\n\n        localStorage.setItem(\"count\", JSON.stringify(this.count));\n\n        this.sendDrawerState();\n        this.forceDrawerRender();\n      });\n    });\n\n    const controls = JSON.parse(localStorage.getItem(\"controls\"));\n    this.controls = controls || { lockedX: false, lockedY: false };\n    localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n\n    document.getElementById(\"lock-x\").checked = this.controls.lockedX;\n    document.getElementById(\"lock-y\").checked = this.controls.lockedY;\n\n    document.querySelector(\"#lock-x\").addEventListener(\"change\", (event) => {\n      this.controls.lockedX = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n      this.sendDrawerState();\n    });\n\n    document.querySelector(\"#lock-y\").addEventListener(\"change\", (event) => {\n      this.controls.lockedY = event.target.checked;\n      localStorage.setItem(\"controls\", JSON.stringify(this.controls));\n      this.sendDrawerState();\n    });\n\n    const dataset = JSON.parse(localStorage.getItem(\"dataset\"));\n    this.dataset = dataset || \"squares\";\n    localStorage.setItem(\"dataset\", JSON.stringify(this.dataset));\n    document.getElementById(\"dataset\").value = this.dataset;\n    document.querySelector(\"#dataset\").addEventListener(\"change\", (event) => {\n      this.dataset = event.target.value;\n      localStorage.setItem(\"dataset\", JSON.stringify(this.dataset));\n      this.sendDrawerState();\n      this.forceDrawerRender();\n    });\n  }\n\n  initControls() {\n    this.mouseReader.addEventListener(\n      \"wheel\",\n      (event) => {\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.wheelDelta / 50;\n          this.currentXRange[1] += event.wheelDelta / 50;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            // Zoom in limit\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.wheelDelta / 50;\n          this.currentYRange[1] += event.wheelDelta / 50;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            // Zoom in limit\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.needsAnimation = true;\n        this.updateSelectionWindowDisplay();\n        this.sendDrawerState();\n\n        return false;\n      },\n      false\n    );\n\n    this.isMoving = false;\n    this.mouseReader.addEventListener(\n      \"mousedown\",\n      (event) => {\n        this.isMoving = true;\n      },\n      false\n    );\n\n    this.mouseReader.addEventListener(\n      \"mousemove\",\n      (event) => {\n        if (!this.isMoving) {\n          return false;\n        }\n\n        if (!this.controls.lockedX) {\n          const previousX = [...this.currentXRange];\n          this.currentXRange[0] -= event.movementX;\n          this.currentXRange[1] -= event.movementX;\n          this.currentXRange[0] = Math.max(this.currentXRange[0], this.minX);\n          this.currentXRange[1] = Math.min(this.currentXRange[1], this.maxX);\n\n          if (this.currentXRange[1] < this.currentXRange[0]) {\n            this.currentXRange = previousX;\n          }\n        }\n\n        if (!this.controls.lockedY) {\n          const previousY = [...this.currentYRange];\n          this.currentYRange[0] -= event.movementY;\n          this.currentYRange[1] -= event.movementY;\n          this.currentYRange[0] = Math.max(this.currentYRange[0], this.minY);\n          this.currentYRange[1] = Math.min(this.currentYRange[1], this.maxY);\n\n          if (this.currentYRange[1] < this.currentYRange[0]) {\n            this.currentYRange = previousY;\n          }\n        }\n\n        this.needsAnimation = true;\n        this.sendDrawerState();\n        this.updateSelectionWindowDisplay();\n      },\n      false\n    );\n\n    this.mouseReader.addEventListener(\"mouseup\", (event) => {\n      this.isMoving = false;\n    });\n    this.mouseReader.addEventListener(\"mouseleave\", (event) => {\n      this.isMoving = false;\n    });\n  }\n\n  updateSelectionWindowDisplay() {\n    // This may slow down the rendering since it needs to call the DOM before animating, may need to remove for true benchmark\n    document.querySelector(\n      \".selection-window\"\n    ).textContent = `[${this.currentXRange[0].toFixed(\n      2\n    )}, ${this.currentXRange[1].toFixed(2)}] x [${this.currentYRange[0].toFixed(\n      2\n    )}, ${this.currentYRange[1].toFixed(2)}]`;\n  }\n\n  sendDrawerState() {\n    this.drawer.receiveState({ ...this.getState() });\n  }\n\n  getState() {\n    return {\n      minX: this.minX,\n      maxX: this.maxX,\n      minY: this.minY,\n      maxY: this.maxY,\n      controls: this.controls,\n      currentXRange: this.currentXRange,\n      currentYRange: this.currentYRange,\n      count: this.count,\n      dataset: this.dataset,\n    };\n  }\n\n  forceDrawerRender() {\n    this.drawer.render();\n  }\n}\n\nexport default Handler;\n","\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        const t = coords[2 * k + inc];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    const r2 = r * r;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\n\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n\n    range(minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    }\n\n    within(x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n}\n","\nimport KDBush from 'kdbush';\n\nconst defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: props => props // props => ({sum: props.my_value})\n};\n\nconst fround = Math.fround || (tmp => ((x) => { tmp[0] = +x; return tmp[0]; }))(new Float32Array(1));\n\nexport default class Supercluster {\n    constructor(options) {\n        this.options = extend(Object.create(defaultOptions), options);\n        this.trees = new Array(this.options.maxZoom + 1);\n    }\n\n    load(points) {\n        const {log, minZoom, maxZoom, nodeSize} = this.options;\n\n        if (log) console.time('total time');\n\n        const timerId = `prepare ${  points.length  } points`;\n        if (log) console.time(timerId);\n\n        this.points = points;\n\n        // generate a cluster object for each point and index input points into a KD-tree\n        let clusters = [];\n        for (let i = 0; i < points.length; i++) {\n            if (!points[i].geometry) continue;\n            clusters.push(createPointCluster(points[i], i));\n        }\n        this.trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n        if (log) console.timeEnd(timerId);\n\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n        // results in a cluster hierarchy across zoom levels\n        for (let z = maxZoom; z >= minZoom; z--) {\n            const now = +Date.now();\n\n            // create a new set of clusters for the zoom and index them with a KD-tree\n            clusters = this._cluster(clusters, z);\n            this.trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n            if (log) console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now);\n        }\n\n        if (log) console.timeEnd('total time');\n\n        return this;\n    }\n\n    getClusters(bbox, zoom) {\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n        if (bbox[2] - bbox[0] >= 360) {\n            minLng = -180;\n            maxLng = 180;\n        } else if (minLng > maxLng) {\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n            return easternHem.concat(westernHem);\n        }\n\n        const tree = this.trees[this._limitZoom(zoom)];\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n        const clusters = [];\n        for (const id of ids) {\n            const c = tree.points[id];\n            clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n        }\n        return clusters;\n    }\n\n    getChildren(clusterId) {\n        const originId = this._getOriginId(clusterId);\n        const originZoom = this._getOriginZoom(clusterId);\n        const errorMsg = 'No cluster with the specified id.';\n\n        const index = this.trees[originZoom];\n        if (!index) throw new Error(errorMsg);\n\n        const origin = index.points[originId];\n        if (!origin) throw new Error(errorMsg);\n\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n        const ids = index.within(origin.x, origin.y, r);\n        const children = [];\n        for (const id of ids) {\n            const c = index.points[id];\n            if (c.parentId === clusterId) {\n                children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n            }\n        }\n\n        if (children.length === 0) throw new Error(errorMsg);\n\n        return children;\n    }\n\n    getLeaves(clusterId, limit, offset) {\n        limit = limit || 10;\n        offset = offset || 0;\n\n        const leaves = [];\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n        return leaves;\n    }\n\n    getTile(z, x, y) {\n        const tree = this.trees[this._limitZoom(z)];\n        const z2 = Math.pow(2, z);\n        const {extent, radius} = this.options;\n        const p = radius / extent;\n        const top = (y - p) / z2;\n        const bottom = (y + 1 + p) / z2;\n\n        const tile = {\n            features: []\n        };\n\n        this._addTileFeatures(\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n            tree.points, x, y, z2, tile);\n\n        if (x === 0) {\n            this._addTileFeatures(\n                tree.range(1 - p / z2, top, 1, bottom),\n                tree.points, z2, y, z2, tile);\n        }\n        if (x === z2 - 1) {\n            this._addTileFeatures(\n                tree.range(0, top, p / z2, bottom),\n                tree.points, -1, y, z2, tile);\n        }\n\n        return tile.features.length ? tile : null;\n    }\n\n    getClusterExpansionZoom(clusterId) {\n        let expansionZoom = this._getOriginZoom(clusterId) - 1;\n        while (expansionZoom <= this.options.maxZoom) {\n            const children = this.getChildren(clusterId);\n            expansionZoom++;\n            if (children.length !== 1) break;\n            clusterId = children[0].properties.cluster_id;\n        }\n        return expansionZoom;\n    }\n\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\n        const children = this.getChildren(clusterId);\n\n        for (const child of children) {\n            const props = child.properties;\n\n            if (props && props.cluster) {\n                if (skipped + props.point_count <= offset) {\n                    // skip the whole cluster\n                    skipped += props.point_count;\n                } else {\n                    // enter the cluster\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                    // exit the cluster\n                }\n            } else if (skipped < offset) {\n                // skip a single point\n                skipped++;\n            } else {\n                // add a single point\n                result.push(child);\n            }\n            if (result.length === limit) break;\n        }\n\n        return skipped;\n    }\n\n    _addTileFeatures(ids, points, x, y, z2, tile) {\n        for (const i of ids) {\n            const c = points[i];\n            const isCluster = c.numPoints;\n\n            let tags, px, py;\n            if (isCluster) {\n                tags = getClusterProperties(c);\n                px = c.x;\n                py = c.y;\n            } else {\n                const p = this.points[c.index];\n                tags = p.properties;\n                px = lngX(p.geometry.coordinates[0]);\n                py = latY(p.geometry.coordinates[1]);\n            }\n\n            const f = {\n                type: 1,\n                geometry: [[\n                    Math.round(this.options.extent * (px * z2 - x)),\n                    Math.round(this.options.extent * (py * z2 - y))\n                ]],\n                tags\n            };\n\n            // assign id\n            let id;\n            if (isCluster) {\n                id = c.id;\n            } else if (this.options.generateId) {\n                // optionally generate id\n                id = c.index;\n            } else if (this.points[c.index].id) {\n                // keep id if already assigned\n                id = this.points[c.index].id;\n            }\n\n            if (id !== undefined) f.id = id;\n\n            tile.features.push(f);\n        }\n    }\n\n    _limitZoom(z) {\n        return Math.max(this.options.minZoom, Math.min(+z, this.options.maxZoom + 1));\n    }\n\n    _cluster(points, zoom) {\n        const clusters = [];\n        const {radius, extent, reduce, minPoints} = this.options;\n        const r = radius / (extent * Math.pow(2, zoom));\n\n        // loop through each point\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            // if we've already visited the point at this zoom level, skip it\n            if (p.zoom <= zoom) continue;\n            p.zoom = zoom;\n\n            // find all nearby points\n            const tree = this.trees[zoom + 1];\n            const neighborIds = tree.within(p.x, p.y, r);\n\n            const numPointsOrigin = p.numPoints || 1;\n            let numPoints = numPointsOrigin;\n\n            // count the number of points in a potential cluster\n            for (const neighborId of neighborIds) {\n                const b = tree.points[neighborId];\n                // filter out neighbors that are already processed\n                if (b.zoom > zoom) numPoints += b.numPoints || 1;\n            }\n\n            if (numPoints >= minPoints) { // enough points to form a cluster\n                let wx = p.x * numPointsOrigin;\n                let wy = p.y * numPointsOrigin;\n\n                let clusterProperties = reduce && numPointsOrigin > 1 ? this._map(p, true) : null;\n\n                // encode both zoom and point index on which the cluster originated -- offset by total length of features\n                const id = (i << 5) + (zoom + 1) + this.points.length;\n\n                for (const neighborId of neighborIds) {\n                    const b = tree.points[neighborId];\n\n                    if (b.zoom <= zoom) continue;\n                    b.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n\n                    const numPoints2 = b.numPoints || 1;\n                    wx += b.x * numPoints2; // accumulate coordinates for calculating weighted center\n                    wy += b.y * numPoints2;\n\n                    b.parentId = id;\n\n                    if (reduce) {\n                        if (!clusterProperties) clusterProperties = this._map(p, true);\n                        reduce(clusterProperties, this._map(b));\n                    }\n                }\n\n                p.parentId = id;\n                clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\n\n            } else { // left points as unclustered\n                clusters.push(p);\n\n                if (numPoints > 1) {\n                    for (const neighborId of neighborIds) {\n                        const b = tree.points[neighborId];\n                        if (b.zoom <= zoom) continue;\n                        b.zoom = zoom;\n                        clusters.push(b);\n                    }\n                }\n            }\n        }\n\n        return clusters;\n    }\n\n    // get index of the point from which the cluster originated\n    _getOriginId(clusterId) {\n        return (clusterId - this.points.length) >> 5;\n    }\n\n    // get zoom of the point from which the cluster originated\n    _getOriginZoom(clusterId) {\n        return (clusterId - this.points.length) % 32;\n    }\n\n    _map(point, clone) {\n        if (point.numPoints) {\n            return clone ? extend({}, point.properties) : point.properties;\n        }\n        const original = this.points[point.index].properties;\n        const result = this.options.map(original);\n        return clone && result === original ? extend({}, result) : result;\n    }\n}\n\nfunction createCluster(x, y, id, numPoints, properties) {\n    return {\n        x: fround(x), // weighted cluster center; round for consistency with Float32Array index\n        y: fround(y),\n        zoom: Infinity, // the last zoom the cluster was processed at\n        id, // encodes index of the first child of the cluster and its zoom level\n        parentId: -1, // parent cluster id\n        numPoints,\n        properties\n    };\n}\n\nfunction createPointCluster(p, id) {\n    const [x, y] = p.geometry.coordinates;\n    return {\n        x: fround(lngX(x)), // projected point coordinates\n        y: fround(latY(y)),\n        zoom: Infinity, // the last zoom the point was processed at\n        index: id, // index of the source feature in the original input array,\n        parentId: -1 // parent cluster id\n    };\n}\n\nfunction getClusterJSON(cluster) {\n    return {\n        type: 'Feature',\n        id: cluster.id,\n        properties: getClusterProperties(cluster),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(cluster.x), yLat(cluster.y)]\n        }\n    };\n}\n\nfunction getClusterProperties(cluster) {\n    const count = cluster.numPoints;\n    const abbrev =\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\n    return extend(extend({}, cluster.properties), {\n        cluster: true,\n        cluster_id: cluster.id,\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin(lat * Math.PI / 180);\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n\nfunction extend(dest, src) {\n    for (const id in src) dest[id] = src[id];\n    return dest;\n}\n\nfunction getX(p) {\n    return p.x;\n}\nfunction getY(p) {\n    return p.y;\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","import Supercluster from \"supercluster\";\nimport regeneratorRuntime from \"regenerator-runtime\";\n\nfunction scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nconst createMessanger = (clazz, self) => {\n  return (e) => {\n    switch (e.data.type) {\n      case \"init\":\n        self.drawer = new clazz(e.data);\n        break;\n      case \"state\":\n        self.drawer.receiveState(e.data);\n        break;\n      case \"render\":\n        self.drawer.receiveState(e.data);\n        self.drawer.render();\n        break;\n      default:\n        console.error(`Received unknown message type: ${e}`);\n    }\n  };\n};\n\nclass SuperclusterMapper {\n  constructor(points, xRange, yRange, options = { radius: 1000, maxZoom: 16 }) {\n    this.xScale = scale(xRange, [-180, 180]);\n    this.yScale = scale(yRange, [-90, 90]);\n\n    this.xScaleInverse = scale([-180, 180], xRange);\n    this.yScaleInverse = scale([-90, 90], yRange);\n\n    this.index = new Supercluster(options);\n\n    for (const point of points) {\n      point.geometry.coordinates = [\n        this.xScale(point.geometry.coordinates[0]),\n        this.yScale(point.geometry.coordinates[1]),\n      ];\n    }\n\n    this.index.load(points);\n  }\n\n  *getClusters(bbox, zoomLevel = 10) {\n    const inLatLong = this.index.getClusters(\n      [\n        this.xScale(bbox[0]),\n        this.yScale(bbox[1]),\n        this.xScale(bbox[2]),\n        this.yScale(bbox[3]),\n      ],\n      zoomLevel\n    );\n    for (const point of inLatLong) {\n      // use of generator here gives huge speedup since no heap changes needed\n      yield {\n        ...point,\n        geometry: {\n          coordinates: [\n            this.xScaleInverse(point.geometry.coordinates[0]),\n            this.yScaleInverse(point.geometry.coordinates[1]),\n          ],\n        },\n      };\n    }\n  }\n}\n\nconst getRandomColor = () => {\n  let r = Math.floor(Math.random() * 255);\n  let g = Math.floor(Math.random() * 255);\n  let b = Math.floor(Math.random() * 255);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport {\n  scale,\n  initShaderProgram,\n  loadShader,\n  rgbToHex,\n  createMessanger,\n  SuperclusterMapper,\n  getRandomColor,\n};\n","class Drawer {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n    this.dataset = data.dataset;\n\n    this.needsAnimation = true;\n  }\n\n  tick() {}\n\n  animate() {}\n\n  render() {\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n\n    switch (this.dataset) {\n      case \"squares\":\n        this.renderSquares();\n        break;\n      case \"random\":\n        this.renderRandom();\n        break;\n      case \"jittered\":\n        this.renderJittered();\n        break;\n      case \"tsne\":\n        this.renderTSNE();\n        break;\n      default:\n        console.error(\n          `Did not receive valid dataset to render: ${this.dataset}`\n        );\n    }\n  }\n}\n\nexport default Drawer;\n","import { getRandomColor, scale, SuperclusterMapper } from \"./utilities\";\nimport Drawer from \"./drawer\";\n\nclass BaseCanvasDrawer extends Drawer {\n  constructor(data) {\n    super(data);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  animateSquares() {\n    if (!this.needsAnimation) {\n      this.lastFrame = requestAnimationFrame(this.animateSquares.bind(this));\n      this.tick();\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    const currBoxWidth =\n      ((this.maxX - this.minX) /\n        (this.currentXRange[1] - this.currentXRange[0])) *\n      this.trueBoxWidth;\n\n    const currBoxHeight =\n      ((this.maxY - this.minY) /\n        (this.currentYRange[1] - this.currentYRange[0])) *\n      this.trueBoxHeight;\n\n    // Calculate where grid starts so we draw rectangles that are partially offscreen\n    const gridStartX =\n      this.currentXRange[0] -\n      (this.currentXRange[0] % this.trueBoxWidth) -\n      this.trueBoxWidth;\n    const gridEndX =\n      this.currentXRange[1] -\n      (this.currentXRange[1] % this.trueBoxWidth) +\n      this.trueBoxWidth;\n\n    const gridStartY =\n      this.currentYRange[0] -\n      (this.currentYRange[0] % this.trueBoxHeight) -\n      this.trueBoxWidth;\n    const gridEndY =\n      this.currentYRange[1] -\n      (this.currentYRange[1] % this.trueBoxHeight) +\n      this.trueBoxWidth;\n\n    // Only draw rectangles inside viewing window\n    for (let currX = gridStartX; currX < gridEndX; currX += this.trueBoxWidth) {\n      for (\n        let currY = gridStartY;\n        currY < gridEndY;\n        currY += this.trueBoxHeight\n      ) {\n        this.ctx.fillStyle = `rgb(\n          ${this.scaleRed(currY)},\n          0,\n          ${this.scaleBlue(currX)})`;\n        this.ctx.fillRect(\n          scaleX(currX),\n          scaleY(currY),\n          currBoxWidth,\n          currBoxHeight\n        );\n      }\n    }\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animateSquares.bind(this));\n    this.tick();\n  }\n\n  renderSquares() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n    this.scaleBlue = scale([this.minX, this.maxX], [0, 256]);\n    this.scaleRed = scale([this.minY, this.maxY], [0, 256]);\n\n    this.needsAnimation = true;\n    this.animateSquares();\n  }\n\n  animateJittered() {}\n\n  renderJittered() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n    this.scaleBlue = scale([this.minX, this.maxX], [0, 256]);\n    this.scaleRed = scale([this.minY, this.maxY], [0, 256]);\n\n    this.boxes = {};\n  }\n\n  animateRandom() {\n    if (!this.needsAnimation) {\n      this.tick();\n      this.lastFrame = requestAnimationFrame(this.animateRandom.bind(this));\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    const pointsToDraw = this.clusterMap.getClusters(\n      [\n        this.currentXRange[0],\n        this.currentYRange[0],\n        this.currentXRange[1],\n        this.currentYRange[1],\n      ],\n      10\n    );\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    for (let point of pointsToDraw) {\n      this.ctx.fillStyle = point.color;\n      this.ctx.fillRect(\n        scaleX(point.geometry.coordinates[0]),\n        scaleY(point.geometry.coordinates[1]),\n        2,\n        2\n      );\n    }\n\n    this.tick();\n    this.lastFrame = requestAnimationFrame(this.animateRandom.bind(this));\n    this.needsAnimation = false;\n  }\n\n  renderRandom() {\n    const points = [];\n    for (let i = 0; i < this.count.value; i++) {\n      points.push({\n        geometry: {\n          coordinates: [\n            this.minX + Math.random() * (this.maxX - this.minX),\n            this.minY + Math.random() * (this.maxY - this.minY),\n          ],\n        },\n        color: getRandomColor(),\n      });\n    }\n\n    this.clusterMap = new SuperclusterMapper(\n      points,\n      [this.minX, this.maxX],\n      [this.minY, this.maxY]\n    );\n\n    this.needsAnimation = true;\n    this.animateRandom();\n  }\n}\n\nexport default BaseCanvasDrawer;\n","import Handler from \"./handler\";\nimport BaseCanvasDrawer from \"./base-canvas-drawer\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const handler = new Handler();\n  handler.addToDOM(BaseCanvasDrawer);\n\n  handler.forceDrawerRender();\n});\n"]}