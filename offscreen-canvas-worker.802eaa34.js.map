{"version":3,"sources":["../scripts/utilities.js","../scripts/drawer.js","../scripts/base-canvas-drawer.js","../scripts/offscreen-canvas-worker.js"],"names":["scale","domain","range","domainLength","rangeLength","slope","intercept","x","loadShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","initShaderProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","parseInt","Number","createMessanger","clazz","self","e","data","drawer","receiveState","render","Drawer","canvas","width","height","minX","maxX","minY","maxY","currentXRange","currentYRange","count","controls","needsAnimation","BaseCanvasDrawer","ctx","getContext","lastFrame","requestAnimationFrame","animate","bind","tick","clearRect","scaleX","scaleY","currBoxWidth","trueBoxWidth","currBoxHeight","trueBoxHeight","gridStartX","gridEndX","gridStartY","gridEndY","currX","currY","fillStyle","scaleRed","scaleBlue","fillRect","Math","sqrt","value","cancelAnimationFrame","OffscreenBaseCanvasDrawer","postMessage","onmessage"],"mappings":"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","file":"offscreen-canvas-worker.802eaa34.js","sourceRoot":"../src/pages","sourcesContent":["function scale(domain, range) {\n  const domainLength = domain[1] - domain[0];\n  const rangeLength = range[1] - range[0];\n  const slope = rangeLength / domainLength;\n  const intercept = range[1] - slope * domain[1];\n  return (x) => slope * x + intercept;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(`Could not compile shader: ${gl.getShaderInfoLog(shader)}`);\n    gl.deleteShader(shader);\n    return null;\n  }\n  return shader;\n}\n\nfunction initShaderProgram(gl, vertexSource, fragmentSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\n        shaderProgram\n      )}`\n    );\n    return null;\n  }\n\n  return shaderProgram;\n}\n\nfunction componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return parseInt(\n    Number(\"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b)),\n    10\n  );\n}\n\nconst createMessanger = (clazz, self) => {\n  return (e) => {\n    switch (e.data.type) {\n      case \"init\":\n        self.drawer = new clazz(e.data);\n        break;\n      case \"state\":\n        self.drawer.receiveState(e.data);\n        break;\n      case \"render\":\n        self.drawer.receiveState(e.data);\n        self.drawer.render();\n        break;\n      default:\n        console.error(`Received unknown message type: ${e}`);\n    }\n  };\n};\n\nexport { scale, initShaderProgram, loadShader, rgbToHex, createMessanger };\n","class Drawer {\n  constructor(data) {\n    this.canvas = data.canvas;\n    this.width = data.canvas.width;\n    this.height = data.canvas.height;\n    this.receiveState(data);\n  }\n\n  receiveState(data) {\n    this.minX = data.minX;\n    this.maxX = data.maxX;\n    this.minY = data.minY;\n    this.maxY = data.maxY;\n    this.currentXRange = [...data.currentXRange];\n    this.currentYRange = [...data.currentYRange];\n    this.count = data.count;\n    this.controls = data.controls;\n\n    this.needsAnimation = true;\n  }\n\n  tick() {}\n\n  animate() {}\n\n  render() {}\n}\n\nexport default Drawer;\n","import { scale } from \"./utilities\";\nimport Drawer from \"./drawer\";\n\nclass BaseCanvasDrawer extends Drawer {\n  constructor(data) {\n    super(data);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  animate() {\n    if (!this.needsAnimation) {\n      this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n      this.tick();\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.width, this.height);\n\n    const scaleX = scale(this.currentXRange, [0, this.width]);\n    const scaleY = scale(this.currentYRange, [0, this.height]);\n\n    const currBoxWidth =\n      ((this.maxX - this.minX) /\n        (this.currentXRange[1] - this.currentXRange[0])) *\n      this.trueBoxWidth;\n\n    const currBoxHeight =\n      ((this.maxY - this.minY) /\n        (this.currentYRange[1] - this.currentYRange[0])) *\n      this.trueBoxHeight;\n\n    // Calculate where grid starts so we draw rectangles that are partially offscreen\n    const gridStartX =\n      this.currentXRange[0] -\n      (this.currentXRange[0] % this.trueBoxWidth) -\n      this.trueBoxWidth;\n    const gridEndX =\n      this.currentXRange[1] -\n      (this.currentXRange[1] % this.trueBoxWidth) +\n      this.trueBoxWidth;\n\n    const gridStartY =\n      this.currentYRange[0] -\n      (this.currentYRange[0] % this.trueBoxHeight) -\n      this.trueBoxWidth;\n    const gridEndY =\n      this.currentYRange[1] -\n      (this.currentYRange[1] % this.trueBoxHeight) +\n      this.trueBoxWidth;\n\n    // Only draw rectangles inside viewing window\n    for (let currX = gridStartX; currX < gridEndX; currX += this.trueBoxWidth) {\n      for (\n        let currY = gridStartY;\n        currY < gridEndY;\n        currY += this.trueBoxHeight\n      ) {\n        this.ctx.fillStyle = `rgb(\n          ${this.scaleRed(currY)},\n          0,\n          ${this.scaleBlue(currX)})`;\n        this.ctx.fillRect(\n          scaleX(currX),\n          scaleY(currY),\n          currBoxWidth,\n          currBoxHeight\n        );\n      }\n    }\n\n    this.needsAnimation = false;\n    this.lastFrame = requestAnimationFrame(this.animate.bind(this));\n    this.tick();\n  }\n\n  render() {\n    this.trueBoxWidth = (this.maxX - this.minX) / Math.sqrt(this.count.value);\n    this.trueBoxHeight = (this.maxY - this.minY) / Math.sqrt(this.count.value);\n    this.scaleBlue = scale([this.minX, this.maxX], [0, 256]);\n    this.scaleRed = scale([this.minY, this.maxY], [0, 256]);\n\n    if (this.lastFrame) {\n      // Avoid overlapping animation requests\n      cancelAnimationFrame(this.lastFrame);\n    }\n    this.needsAnimation = true;\n    this.animate();\n  }\n}\n\nexport default BaseCanvasDrawer;\n","import BaseCanvasDrawer from \"./base-canvas-drawer\";\nimport { createMessanger } from \"./utilities\";\n\nclass OffscreenBaseCanvasDrawer extends BaseCanvasDrawer {\n  tick() {\n    postMessage({ type: \"tick\" });\n  }\n}\n\nself.onmessage = createMessanger(OffscreenBaseCanvasDrawer, self);\n"]}